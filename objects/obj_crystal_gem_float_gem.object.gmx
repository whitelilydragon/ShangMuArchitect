<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gem</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_gem</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
//State Trigger Variables
is_collected    = 0         //Has the Player Taken the Item?
is_collected_r  = 32        //How Far Should We Check For The Player?

direction_reserve = 0
speed_reserve = 4

if y &gt; obj_game_logic.water_height
    depth = -5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animations

//Pause Safety Check
if obj_game_logic.pause = 0

{

is_collectable += 1

//If We Are Within Range Of The Player, Consider Ourselves Collected
if point_distance(x,y-10,obj_game_logic.universal_player_x,obj_game_logic.universal_player_y) &lt;= is_collected_r
and obj_game_logic.anim_current!=obj_game_logic.anim_hurt and obj_game_logic.anim_current!=obj_game_logic.anim_death
and is_collectable &gt; 24
and obj_game_logic.user_cursor_mode = 0 and is_collected = 0
    {
        is_collected = 1
        var value = 1;
        audio_stop_sound(gem_sound)
        audio_play_sound(gem_sound,50,false)
        //Add Gems To Player
        obj_game_logic.gems -= value
        obj_game_logic.player_best_crystals_count += value
        obj_game_logic.player_gems[obj_game_logic.player_current] += value
        obj_game_logic.hud_gem_value += 1
        //Add Gems To Petal Counter
        if (obj_game_logic.shield_active = 1 and obj_game_logic.shield = spr_shield_wood)
            obj_game_logic.petals_count += 1;
        //Increase Stamina Gains and Our Gem Count While In Turbo Mode
        if obj_game_logic.user_turbo_mode = 1
            {
                obj_game_logic.gems -= value
                obj_game_logic.player_gems[obj_game_logic.player_current] += value
                obj_game_logic.stamina += 5
            }
        //Add Energy to the Stamina Bar
        if sprite_index != spr_gold_gem
            {
                if obj_game_logic.stamina &lt; 100
                    {
                        obj_game_logic.stamina += 5*value
                        obj_game_logic.milla_flutter_stamina_bar += 4.3333333333333333333333333333334
                        obj_game_logic.stamina_boosted = 0
                    }
                //Cull Stamina Bar if Added Energy is Too Much
                //if obj_game_logic.stamina &gt; 100 obj_game_logic.stamina = 100;
                //if obj_game_logic.milla_flutter_stamina_bar &gt; 65 obj_game_logic.milla_flutter_stamina_bar = 65;
            }
        //Stamina Bar Flash
        obj_game_logic.stamina_gem = 0
        obj_game_logic.stamina_gem_con = 1
        //Create Sparkle Particle
        sparkle_x_0       = x
        sparkle_y_0       = y
        sparkle_visible_0 = 1
        //Modify Rotation Offset Variables
        px = x
        py = y
        //Reset Gem Counter (And Spawn 1up Faerie) If It's Below 0
        scr_gem_reset_counter()
        //Alter Our Sprite To Be A Particle
        if sprite_index = spr_gem
            sprite_index = spr_gem_particle;
    }

//Follow player based on their passive effect
if (is_following = 0 and is_collected = 0
and is_collectable &gt; 24 and obj_game_logic.user_cursor_mode = 0)
    is_following = 1;

if is_following = 1
    {
        move_towards_point(obj_game_logic.universal_player_x,obj_game_logic.universal_player_y,is_follow_speed)
        is_follow_speed += 0.25
    }
else
    {
        speed = speed_reserve
        direction = direction_reserve
    }

if obj_game_logic.user_cursor_mode = 1 instance_destroy();

//      Static Particle System      //
//----------------------------------//

//If we are a gem, produce a particle effect before disappearing
if (is_collected &gt;= 1)
    {
        //Iterate Through Data Points in the Rotation Map
        iterate_x+=3    //X Posit Iteration
        iterate_y+=3    //Y Posit Iteration
        iterate_gen+=3  //General Iteration

        //Iterate Sparkle Particle Sprite's Animations
        if sparkle_visible_0 = 1 sparkle_frame_0 += 0.32;
        if sparkle_visible_1 = 1 sparkle_frame_1 += 0.32;
        //Toggle Visibility of First Particle Off After Animations Completes
        if sparkle_frame_0 &gt;= 7 sparkle_visible_0 = 0;
        //Refer To Self Destruction Code Below For Second Particle's Visibility Toggle

        //Once We've Completed A Rotation, Restart Rotation
        if iterate_x&gt;=51
            {
                iterate_x=0
                iterate_y=0
            }
        //Reference Rotation Map Data
        x = px + obj_game_logic.orig_rotate[spr_gem_particle+2000,iterate_x]
        y = py - 19 + obj_game_logic.orig_rotate[spr_gem_particle+3000,iterate_y]
        //Once We've Rotated For Long Enough, Create Second Sparkle Particle
        if iterate_gen&gt;51+random_range(14,28) and sparkle_visible_1 = 0
            {
                //Create Sparkle Particle
                sparkle_x_1       = x
                sparkle_y_1       = y
                sparkle_visible_1 = 1
                //Disable Visibility Of Main Sprite
                gem_visible = 0
            }
        //Destroy Self
        if sparkle_frame_1 &gt;= 7.9
            {
                sparkle_visible_1 = 0
                instance_destroy();
            }     
    } //End of Collected Safety Check
    
} //End of Pause Safety Check
else
    {
        //Freeze Movement Speed And Animations If We Are Paused
        move_towards_point(x,y,0)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
