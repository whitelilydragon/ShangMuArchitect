<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rocket_puncher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_explode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited();
scr_enemy_hp(25)
walls  = tile_add(mu_door_0,0,0,32,80,x,y-80,surface_flats) //Wall Tile
tile_set_visible(walls,false)                               //Make Wall Tile Invisible
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
flash_palette = spr_rocket_puncher_palette
var_scale = 1
can_parry = 1
untouchable = 0
death_frame = 6
hp_offset = -110
item_offset = 128
glove_frame = 0
glove_x = 0
shield_x = 0
shield_frame = 0
parried_attack = 0
death_frame_start = 6
death_frame_end = 7.8
dropped_goodies = obj_petal
shield_id = instance_create(x,y,obj_rocket_puncher_shield)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Our Wall Tile If We Have Been Destroyed Prematurely
if tile_exists(walls) tile_delete(walls);
if instance_exists(shield_id) instance_destroy(shield_id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
if o.pause = 0 and freeze = 0
    {
        if untouchable = 1
            {
                alpha = 0
                attacked = 0
            }

        event_inherited();

        if captured = 1 and object_index = obj_rocket_puncher and death = 0
            instance_change(obj_rocket_puncher_child,true);

        if instance_exists(shield_id)
            {
                shield_id.x = x+shield_x+(xdir*32);
                shield_id.y = y-80
                if being &lt; 90
                    {
                        shield_id.untouchable = 0
                        untouchable = 1
                    }
                if being &gt;= 90
                    {
                        shield_id.untouchable = 1
                        untouchable = 0
                    }
            }
        else
            untouchable = 0;
        //Set Wall Tile Position
        if tile_exists(walls)
            {
                if xdir = 1 tile_set_position(walls,x+shield_x,y-80);
                if xdir = -1 tile_set_position(walls,x+shield_x-32,y-80);
            }

        //Animation Loops
        if death = 0
            {
                being += 1

                if being &lt;= 60
                    {
                        if obj_game_logic.px &gt;= x xdir = 1;
                        if obj_game_logic.px &lt;  x xdir = -1;
                    }

                if being = 60
                    {
                        frame = 0;
                        if o.user_cursor_mode = 1
                            being = 0;
                    }
                    
                if being &gt; 60
                    {
                        var_scale = 1;
                        if item = spr_mod_chip_extra_large var_scale = 2;
                        //Animate Rocket Puncher
                        if being &lt;= 132 
                            {
                                frame += 0.45
                                if frame &gt; 5.8 frame = 5;
                                shield_frame += 0.45
                                if shield_frame &gt; 4.8 shield_frame = 4;
                                if xdir = -1
                                    {
                                        shield_x += 2*var_scale
                                        if shield_x &gt; 16*var_scale shield_x = 16*var_scale;
                                    }
                                if xdir = 1
                                    {
                                        shield_x -= 2*var_scale
                                        if shield_x &lt; -16*var_scale shield_x = -16*var_scale;
                                    }
                            }
                        if being &lt;= 90
                            {
                                glove_frame = 1
                                glove_x += (2*var_scale)*xdir;
                                if xdir = -1
                                    {
                                        if glove_x &lt; -32*var_scale glove_x = -32*var_scale;
                                    }
                                if xdir = 1
                                    {
                                        if glove_x &gt; 32*var_scale glove_x = 32*var_scale;
                                    }
                            }
                        if being &gt; 90
                            {
                                glove_frame += 0.45
                                if glove_frame &gt; 5.8 glove_frame = 4;
                            }
                        //Articulate Boxing Glove
                        var var_speed = 7;
                        if item = spr_mod_chip_speed var_speed = 12;
                        if being &gt; 90 and being &lt;= 148 and glove_x &lt; 168*var_scale glove_x += (var_speed*var_scale)*xdir;
                        if being &gt; 148 and glove_x &gt; 0 and xdir =  1 glove_x -= var_speed*var_scale;
                        if being &gt; 148 and glove_x &lt; 0 and xdir = -1 glove_x += var_speed*var_scale;
                        //Snap Boxing Glove Positions
                        if xdir = -1
                            {
                                if glove_x &gt; 0 glove_x = 0;
                                if glove_x &lt; -168*var_scale glove_x = -168*var_scale;
                            }
                        if xdir = 1
                            {
                                if glove_x &lt; 0 glove_x = 0;
                                if glove_x &gt; 168*var_scale glove_x = 168*var_scale;
                            }
                        //Snap Boxing Glove Frame
                        if being &gt; 148 glove_frame = 1;
                        //Resume Standing Position
                        if being &gt; 168
                            {
                                frame -= 0.45
                                shield_frame -= 0.45
                                if shield_frame &lt; 0 shield_frame = 0;
                                shield_x += (2*var_scale)*xdir
                                if shield_x &gt; 0 and xdir = 1 shield_x = 0;
                                if shield_x &lt; 0 and xdir = -1 shield_x = 0;
                                if frame &lt; 0
                                    {
                                        frame = 0;
                                        being = 0;
                                        glove_frame = 0;
                                    }
                            }
                        //Hurt The Player If They've Been Punched By The Boxing Glove
                        if (o.hurt[0] = 0 and o.hurt[1] = 0
                        and o.shield_invuln = 32
                        and point_distance(x+glove_x+(24*-xdir),y-24,o.universal_player_x,o.universal_player_y) &lt; 32)
                            {
                                scr_enemy_deal_damage(0.4,1,2);
                                var hsp_push = 8;
                                if item = spr_mod_chip_speed hsp_push = 12;
                                if o.hurt[1] &lt; 8 o.hsp = hsp_push*xdir
                            }
                        //Bomb Cube
                        var instance_ID = collision_circle(x+glove_x+(24*-xdir),y-24,32,obj_player_cube_alt,false,true);
                        if instance_ID != noone
                            {
                                if instance_ID.cube_jiggle_timer = 0
                                    {
                                        instance_ID.cube_jiggle_timer = 10
                                        instance_ID.cube_health += 0.50
                                        instance_ID.cube_speed = 5*xdir
                                        if item = spr_mod_chip_speed
                                            instance_ID.cube_speed = 10*xdir
                                    }
                            }
                        if obj_game_logic.user_enemy_level &lt; 2
                            {
                                //Mega Items
                                var instance_ID = collision_circle(x+glove_x+(24*-xdir),y-24,32,obj_mega_item_parent,false,true);
                                if instance_ID != noone
                                    {
                                        instance_ID.attacked = 2
                                    }
                                //Items
                                var instance_ID = collision_circle(x+glove_x+(24*-xdir),y-24,32,obj_destructible,false,true);
                                if instance_ID != noone
                                    {
                                        if instance_ID.object_index != obj_rocket_puncher_shield
                                            instance_ID.attacked = 1;
                                    }
                                //Attack other enemies within range of the boxing glove
                                instance_ID = collision_circle(x+glove_x+(24*-xdir),y-24,32,obj_enemy_parent,false,true);
                                if instance_exists(instance_ID)
                                    {
                                        if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                            {
                                                instance_ID.attacked = 1
                                                instance_ID.attacked_damage = 2
                                            }
                                    }
                            }
                    }
            }
    } //End of pause check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite
event_inherited()
if state = 0
    {
        if shield_frame &gt;= 3 draw_sprite_ext(spr_rocket_puncher_shield,shield_frame,x+(shield_x*var_scale),y-(80*var_scale),xdir*(scale+enemy_growth),scale+enemy_growth,0,c_white,1);
        var pal_alpha = 0;
        if alpha &gt; 0.5 pal_alpha = 1;
        script_execute(o.pal_swap_script,flash_palette,pal_alpha,false)
        draw_sprite_ext(sprite_index,frame,x,y,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),0,c_white,1)
        shader_reset();
        if alpha &gt; 0.5 and o.pal_swap_script = pal_swap_dummy
            {
                d3d_set_fog(true, c_yellow, 0, 0)
                draw_sprite_ext(sprite_index,frame,x,y,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),0,c_white,0.65)
                d3d_set_fog(false, 0, 0, 0)
            }
        //Draw Bomb Chip Flash
        if mod_bomb_flash &gt; 0.5
            {
                draw_set_blend_mode(bm_add)
                draw_sprite_ext(sprite_index,frame,x,y,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),0,c_red,1)
                draw_set_blend_mode(bm_normal)
            }
        if shield_frame &lt; 3 draw_sprite_ext(spr_rocket_puncher_shield,shield_frame,x+(shield_x*var_scale),y-(80*var_scale),xdir*(scale+enemy_growth),scale+enemy_growth,0,c_white,1);
        draw_sprite_ext(spr_rocket_puncher_glove,glove_frame,x+((glove_x+(24*-xdir))*var_scale),y-(24*var_scale),xdir*(scale+enemy_growth),scale+enemy_growth,0,c_white,1)
        if room = rm_editor
            {
                var parent = obj_level_editor;
                if (point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,x-38,y-64,x+38,y)
                    and parent.user_cursor_mode = 0 and parent.use_tile_menu = 0 and parent.side_bar_allow = 0)
                or (scale &gt; 1)
                    {
                        draw_set_blend_mode(bm_add)
                        draw_sprite_ext(sprite_index,frame,x,y,xdir*(scale+enemy_growth),scale+enemy_growth,0,c_yellow,user_tile_boundary_alpha)
                        draw_set_blend_mode(bm_normal)
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
