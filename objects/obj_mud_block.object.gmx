<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mud_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_water_cube</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item = 0
give_item = 0
spray_frame = 0
spray_timer = 0
water_frame = 0
splash_x = x
splash_y = y
splash_angle = 0
splash_frame = 0
splash_confirm = 0
bubble_visibility = 0
bubble_offset_x = 0
bubble_offset_y = 0
bubble_frame = 0
editor_mode_timer = 0
timer = 0
active = 1
a = -1
b = -1
c = -1
d = -1
tile_b = -1
tile_c = -1
tile_d = -1
o = obj_game_logic
bubble_particle_x[0] = x+48
bubble_particle_y[0] = y+4
bubble_particle_frame[0] = 0
bubble_particle_x[1] = x+96
bubble_particle_y[1] = y+48
bubble_particle_frame[1] = 0
if (room != rm_editor)
    depth = -8;
tile_ID = tile_add(tile_fof_1,0,0,64,24,x,y-8,surface_slopes);
tile_set_visible(tile_ID,false)
anim_sound_timer = 0
anim_slide_timer = 0
weather_rain_particles_draw = 0
weather_rain_particles_frame = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tile_exists(tile_ID) tile_delete(tile_ID);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_game_logic.pause = 0

{
a = collision_point(x,y-8,obj_smart_pools,false,true);
b = collision_point(x-8,y+8,obj_smart_pools,false,true);
c = collision_point(x+72,y+8,obj_smart_pools,false,true);
d = collision_point(x+64,y+72,obj_smart_pools,false,true);

spray_frame += 0.25
water_frame += 0.25

if water_frame &gt; 3.8
    water_frame = 0;
if spray_frame &gt; 4.8
    spray_frame = 1;

if active = 1
    {
        if !instance_exists(a)
            {
                if o.px &gt;= x and o.px &lt; x+64
                and o.py &gt; y+2 and o.py &lt; y+16 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = o.px
                        splash_y = y
                        splash_angle = 0
                        splash_confirm = 1
                        audio_play_sound(character_splash,50,false)
                    }
            }
        
        if !instance_exists(b)
            {
                if o.px &gt;= x and o.px &lt; x+16
                and o.py &gt; y and o.py &lt; y+64 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = x
                        splash_y = o.py
                        splash_angle = 90
                        splash_confirm = 1
                        audio_play_sound(character_splash,50,false)
                    }
            }
        
        if !instance_exists(c)
            {
                if o.px &gt;= x+48 and o.px &lt; x+64
                and o.py &gt; y and o.py &lt; y+128 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = x+64
                        splash_y = o.py
                        splash_angle = 270
                        splash_confirm = 1
                        audio_play_sound(character_splash,50,false)
                    }
            }
        
        if !instance_exists(d)
            {
                if o.px &gt;= x and o.px &lt; x+64
                and o.py &gt; y+48 and o.py &lt; y+64 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = o.px
                        splash_y = y+64
                        splash_angle = 180
                        splash_confirm = 1
                        audio_play_sound(character_splash,50,false)
                    }
            }
    }

//Rain Footsteps
if (o.px &gt;= x and o.px &lt; x+64
and o.py &gt; y-8 and o.py &lt; y+8 and o.ground = 1)
    {
        if (o.anim_current = o.anim_standing
        or o.anim_current = o.anim_walking
        or  o.anim_current = o.anim_running
        or  o.anim_current = o.anim_faster)
            {
                weather_rain_particles_draw = 1
                anim_sound_timer += 1
                if (anim_sound_timer = 1 and o.anim_current != o.anim_standing)
                    {
                        audio_play_sound(character_water_foot_step,50,false);
                    }
                if (o.joy_input[0,0] = 1 or o.joy_input[0,2] = 1) anim_slide_timer = 8;
                if (o.joy_input[0,0] = 0 and o.joy_input[0,2] = 0
                and abs(o.hsp) &lt; 4 and anim_slide_timer &gt; 0)
                    {
                        o.hsp += 0.5*o.xdir
                        anim_slide_timer -= 1
                    }
                if anim_sound_timer &gt; 32 or o.ground = 0
                    anim_sound_timer = 0;
            }
    }
else
    weather_rain_particles_draw = 0;

if active = 1
    {
        if splash_confirm = 1 and o.user_cursor_mode = 0
            {
                //Iterate animation frames
                splash_frame += 0.25
                //If we have completed the animation, reset variables
                if splash_frame&gt;8.8 {splash_frame=0; splash_confirm=0;}
                if bubble_visibility = 0
                    {
                        bubble_offset_x = o.universal_player_x;
                        bubble_offset_y = o.universal_player_y+32;
                        bubble_visibility = 1;
                    }
                //If we have not completed the animation, and the player has resurfaced already,
                //restart the animation
                if (splash_frame&gt;4) and (o.py &gt; y and o.py &lt; y+16) and splash_angle = 0
                    {
                        splash_frame = 0
                        splash_x = o.px
                        audio_play_sound(character_splash,50,false)
                    }
            }
    }
if bubble_visibility &gt; 0
    {
        //Iterate bubble timer
        bubble_visibility += 1

        if bubble_visibility = 180
            {
                bubble_offset_x = o.universal_player_x;
                bubble_offset_y = o.universal_player_y;
            }
        //Raise the bubble upward
        bubble_offset_y -= 1
        //If the bubble is above the surface of the water, reset its position at the player's mouth
        var f = collision_point(bubble_offset_x,bubble_offset_y,obj_smart_pools,false,false);
        if !instance_exists(f)
            {
                bubble_offset_x = o.universal_player_x;
                bubble_offset_y = o.universal_player_y;
                //If the player is also above the water, disable visibility of the bubble
                if o.above_water = 1 bubble_visibility = 0;
            }
    }
}

if room = rm_editor
    {
        timer += 1
        if timer = 30
            {
                if (y &gt; o.water_height or y+168 &gt; o.water_height)
                    active = 0;
                else
                    active = 1;
                if editor_mode_timer &gt; 0
                    mask_index = spr_water;
                if editor_mode_timer &lt;= 0
                    mask_index = sprite_index;
                timer = 0
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_editor
    {
        if editor_mode_timer &gt; 0
            {
                editor_mode_timer -= 1
                draw_sprite_ext(spr_mud_block,water_frame,x,y,1,1,0,c_white,0.5)
            }
        if editor_mode_timer &lt;= 0
            draw_sprite(spr_mud_block,water_frame,x,y);
    }
else
    draw_sprite(spr_mud_block,water_frame,x,y);
if obj_game_logic.user_cursor_mode = 0
    {
        if bubble_visibility &gt; 0
            draw_sprite(spr_bubbles,bubble_frame,bubble_offset_x,bubble_offset_y);
        if splash_confirm = 1
            draw_sprite_ext(spr_water_splash,splash_frame,splash_x,splash_y,1,1,splash_angle,c_white,1);
        //Splatter Animations
        if weather_rain_particles_draw = 1
            {
                if obj_game_logic.pause = 0
                    {
                        weather_rain_particles_frame += 0.20
                    }
                if weather_rain_particles_frame &gt; 3.8
                    weather_rain_particles_frame = 0;
                draw_sprite(spr_rain_particles,weather_rain_particles_frame,o.px,o.py)
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
