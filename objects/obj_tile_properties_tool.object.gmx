<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ui_objective_tool</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_activate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Copy Some Values From The Editor
op = obj_level_editor
og = obj_game_logic
font = op.editor_font
frame = 0

//GUI Drawing Variables
gui_achor_x = x
gui_achor_y = y
gui_offset_y = 24
gui_length_y = 72
gui_tile_id = -1
gui_alpha = 0
gui_close = 0
gui_timer = 0
gui_indicator_x = ""
gui_indicator_y = ""

use_highlight_alpha = 0
use_highlight_alpha_x = 0
use_highlight_alpha_y = 0
use_highlight_alpha_width = 0
use_highlight_alpha_height = 0

//GUI Interaction Variables
gui_active = 0
gui_tool_param_0 = 0
gui_tool_param_1 = 0
gui_string_x = "0"
gui_string_y = "0"

//Tool Parameters
gui_tool_active = 0
gui_tool_timer = 0
gui_count = 0
gui_move_x = 0
gui_move_y = 0

//Calculate Popup Tool Boundaries Based on Tile Length/Width + Popup's Size
gui_boundaries_confirm = 0
gui_bounds_top = 0
gui_bounds_bottom = 0
gui_bounds_left = 0
gui_bounds_right = 0
alarm_set(0,2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return Mouse Control To The Editor
op.use_float_window = 0
op.use_tile_properties_timer = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate Popup Tool Boundaries
gui_boundaries_confirm = 1
if tile_exists(gui_tile_id)
    {
        gui_bounds_top = gui_achor_y
        gui_bounds_bottom = tile_get_y(gui_tile_id)+tile_get_height(gui_tile_id)
        if tile_get_width(gui_tile_id) &lt;= 82
            {
                gui_bounds_left = gui_achor_x
                gui_bounds_right = gui_achor_x+82
            }
        if tile_get_width(gui_tile_id) &gt; 82
            {
                gui_bounds_left = tile_get_x(gui_tile_id)
                gui_bounds_right = tile_get_x(gui_tile_id)+tile_get_width(gui_tile_id)
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI Logic
if gui_close = 0
    {
        op.use_float_window = 1
        gui_offset_y -= 2;
        if (gui_offset_y &lt; 0) gui_offset_y = 0;
    }
//Only check for exit conditions after the popup boundary boxes have been calculated
if gui_boundaries_confirm = 1
    {
        //Close popup toolbar if any hotkeys were pressed to popup other menus
        if op.use_tile_menu &gt; 0 or !tile_exists(gui_tile_id)
            gui_close = 1;
        //Close popup toolbar if any action keys have been pressed
        if (op.use_delete = 1 or op.use_copy = 1
        or (op.side_bar_allow = 1)
        or mouse_check_button_pressed(mb_middle)
        or mouse_check_button_pressed(mb_right))
            gui_close = 1;
        //Close popup toolbar if the mouse is no longer hovering over our tiles
        if (op.use_cursor_x &lt; gui_bounds_left or op.use_cursor_x &gt; gui_bounds_right
        or  op.use_cursor_y &lt; gui_bounds_top  or op.use_cursor_y &gt; gui_bounds_bottom)
            gui_close = 1;
    }
if op.use_tile_menu_cool_down = 0
    {
        if gui_close = 0 and gui_length_y = 72
            {        
                //GUI Interface Interations
                if (mouse_check_button_pressed(op.joy_mouse_button_left) or op.use_put_here = 1)
                    {
                        //Param Input Box 1 (Flip X)
                        if  op.use_cursor_x &gt;= gui_achor_x+8 and op.use_cursor_x &lt;= gui_achor_x+73
                        and op.use_cursor_y &gt;= gui_achor_y+9 and op.use_cursor_y &lt;= gui_achor_y+22
                            {
                                //Mirror Tile Backwards
                                if tile_get_xscale(gui_tile_id) = 1
                                    {
                                        tile_set_scale(gui_tile_id,-1,tile_get_yscale(gui_tile_id))
                                        tile_set_position(gui_tile_id,floor(tile_get_x(gui_tile_id)+tile_get_width(gui_tile_id)),floor(tile_get_y(gui_tile_id)))
                                        op.use_tile_menu_cool_down = 8
                                    }
                                //Mirror Tile Forwards
                                if tile_get_xscale(gui_tile_id) = -1 and op.use_tile_menu_cool_down = 0
                                    {
                                        tile_set_scale(gui_tile_id,1,tile_get_yscale(gui_tile_id))
                                        tile_set_position(gui_tile_id,floor(tile_get_x(gui_tile_id)-tile_get_width(gui_tile_id)),floor(tile_get_y(gui_tile_id)))
                                        op.use_tile_menu_cool_down = 8
                                    }
                                op.use_tile_properties_enable = 0
                                op.use_tile_properties_timer = 0
                                op.use_tile_menu_cool_down = 8
                                audio_play_sound(pause_select,50,false)
                                scr_set_highlighter_tool(gui_achor_x+8,gui_achor_y+9,gui_achor_x+73,gui_achor_y+22)
                            }
                        //Param Input Box 2 (Flip Y)
                        if  op.use_cursor_x &gt;= gui_achor_x+8 and op.use_cursor_x &lt;= gui_achor_x+73
                        and op.use_cursor_y &gt;= gui_achor_y+24 and op.use_cursor_y &lt;= gui_achor_y+37
                            {
                                //Mirror Tile Backwards
                                if tile_get_yscale(gui_tile_id) &gt; 0
                                    {
                                        tile_set_scale(gui_tile_id,tile_get_xscale(gui_tile_id),-1)
                                        tile_set_position(gui_tile_id,floor(tile_get_x(gui_tile_id)),floor(tile_get_y(gui_tile_id)+tile_get_height(gui_tile_id)))
                                        op.use_tile_menu_cool_down = 8
                                    }
                                //Mirror Tile Forwards
                                if tile_get_yscale(gui_tile_id) &lt; 0 and op.use_tile_menu_cool_down = 0
                                    {
                                        tile_set_scale(gui_tile_id,tile_get_xscale(gui_tile_id),floor(1))
                                        tile_set_position(gui_tile_id,floor(tile_get_x(gui_tile_id)),floor(tile_get_y(gui_tile_id)-tile_get_height(gui_tile_id)))
                                        op.use_tile_menu_cool_down = 8
                                    }
                                op.use_tile_properties_enable = 0
                                op.use_tile_properties_timer = 0
                                op.use_tile_menu_cool_down = 8
                                audio_play_sound(pause_select,50,false)
                                scr_set_highlighter_tool(gui_achor_x+8,gui_achor_y+24,gui_achor_x+73,gui_achor_y+37)
                            }
                        //Param Input Box 3
                        if  op.use_cursor_x &gt;= gui_achor_x+8 and op.use_cursor_x &lt;= gui_achor_x+73
                        and op.use_cursor_y &gt;= gui_achor_y+39 and op.use_cursor_y &lt;= gui_achor_y+52
                            {
                                op.use_tile_properties_tile_alpha += 0.1
                                if op.use_tile_properties_tile_alpha &gt; 1 op.use_tile_properties_tile_alpha = 0.1;
                                tile_set_alpha(gui_tile_id,op.use_tile_properties_tile_alpha)
                                op.use_tile_menu_cool_down = 8
                                audio_play_sound(pause_select,50,false)
                                scr_set_highlighter_tool(gui_achor_x+8,gui_achor_y+39,gui_achor_x+73,gui_achor_y+52)
                            }
                        //Exit Move Tool (Button)
                        if  op.use_cursor_x &gt;= gui_achor_x+68 and op.use_cursor_x &lt;= gui_achor_x+79
                        and op.use_cursor_y &gt;= gui_achor_y    and op.use_cursor_y &lt;= gui_achor_y+11
                            {
                                audio_play_sound(pause_select,50,false)
                                gui_active = 0
                                gui_close = 1
                                op.use_tile_menu_cool_down = 8
                                scr_set_highlighter_tool(gui_achor_x+68,gui_achor_y,gui_achor_x+79,gui_achor_y+11)
                            }
                        //Exit Move Tool (Clicking Outside GUI Box)
                        if  op.use_cursor_x &lt; gui_achor_x or op.use_cursor_x &gt; gui_achor_x+82
                        or  op.use_cursor_y &lt; gui_achor_y or op.use_cursor_y &gt; gui_achor_y+gui_length_y
                            {
                                audio_play_sound(pause_select,50,false)
                                op.use_tile_menu_cool_down = 8
                                gui_close = 1
                            }
                    }
            }
        if gui_close = 0 and gui_length_y = 42
            {
                //GUI Interface Interations
                if (mouse_check_button_pressed(op.joy_mouse_button_left) or op.use_put_here = 1)
                    {
                        //Param Input Box 3
                        if  op.use_cursor_x &gt;= gui_achor_x+8 and op.use_cursor_x &lt;= gui_achor_x+73
                        and op.use_cursor_y &gt;= gui_achor_y+9 and op.use_cursor_y &lt;= gui_achor_y+22
                            {
                                op.use_tile_properties_tile_alpha += 0.1
                                if op.use_tile_properties_tile_alpha &gt; 1 op.use_tile_properties_tile_alpha = 0.1;
                                tile_set_alpha(gui_tile_id,op.use_tile_properties_tile_alpha)
                                op.use_tile_menu_cool_down = 8
                                audio_play_sound(pause_select,50,false)
                                scr_set_highlighter_tool(gui_achor_x+8,gui_achor_y+9,gui_achor_x+73,gui_achor_y+22)
                            }
                        //Exit Move Tool (Button)
                        if  op.use_cursor_x &gt;= gui_achor_x+68 and op.use_cursor_x &lt;= gui_achor_x+79
                        and op.use_cursor_y &gt;= gui_achor_y    and op.use_cursor_y &lt;= gui_achor_y+11
                            {
                                audio_play_sound(pause_select,50,false)
                                gui_active = 0
                                gui_close = 1
                                op.use_tile_menu_cool_down = 8
                                scr_set_highlighter_tool(gui_achor_x+68,gui_achor_y,gui_achor_x+79,gui_achor_y+11)
                            }
                        //Exit Move Tool (Clicking Outside GUI Box)
                        if  op.use_cursor_x &lt; gui_achor_x or op.use_cursor_x &gt; gui_achor_x+82
                        or  op.use_cursor_y &lt; gui_achor_y or op.use_cursor_y &gt; gui_achor_y+gui_length_y
                            {
                                audio_play_sound(pause_select,50,false)
                                op.use_tile_menu_cool_down = 8
                                gui_close = 1
                            }
                    }
            }
    }

//Exit Tool Transition
if gui_close = 1
    {
        gui_offset_y += 2

        op.use_float_window = 0
        op.use_tile_properties_timer = 0
        op.use_tile_properties_enable = 0

        if (gui_offset_y &gt; 24)
            instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Tile Properties Popup
//Draw advanced tile properites popup for all but the slope surface layer
if op.user_layer_selected != surface_slopes and op.user_layer_selected != surface_flats
    {
        gui_length_y = 72
        draw_background(ui_tile_properties,gui_achor_x,gui_achor_y+gui_offset_y);
        //Draw Text
        draw_set_font(op.editor_menu_font)
        draw_set_color(c_white)
        draw_text(gui_achor_x+25,gui_achor_y+gui_offset_y+11,op.lang_gui[og.user_language_mode,97])
        draw_text(gui_achor_x+25,gui_achor_y+gui_offset_y+26,op.lang_gui[og.user_language_mode,98])
        draw_text(gui_achor_x+25,gui_achor_y+gui_offset_y+41,op.lang_gui[og.user_language_mode,99])
        draw_set_halign(fa_left)
    }
//Draw a simplified version of the tile properties popup for slope tiles
else
    {
        gui_length_y = 42
        draw_background(ui_tile_properties_slopes,gui_achor_x,gui_achor_y+gui_offset_y);
        //Draw Text
        draw_set_font(op.editor_menu_font)
        draw_set_color(c_white)
        draw_text(gui_achor_x+25,gui_achor_y+gui_offset_y+11,op.lang_gui[og.user_language_mode,99])
        draw_set_halign(fa_left)
    }

//Draw Highlights Under Selected Items
if use_highlight_alpha &gt; 0
    {
        //Decrement Highlighter Alpha Transparency
        use_highlight_alpha -= 0.0075
        if use_highlight_alpha &lt; 0 use_highlight_alpha = 0;
        //Draw Tile Boundary Box
        draw_set_alpha(use_highlight_alpha)
        draw_rectangle_colour(use_highlight_alpha_x,use_highlight_alpha_y,floor(use_highlight_alpha_width-1),floor(use_highlight_alpha_height-1),c_red,c_red,c_yellow,c_yellow,false)
        draw_set_color(c_white)
        draw_rectangle(use_highlight_alpha_x,use_highlight_alpha_y,floor(use_highlight_alpha_width-1),floor(use_highlight_alpha_height-1),true)
        draw_set_alpha(1)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
