<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullfrag</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_explode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
scr_enemy_hp(40)
timer = 0                           //Enemy State Timer
base  = tile_add(spr_enemy_hitbox,0,0,73,32,x-44,y-80,surface_flats)
tile_set_visible(base,false)                                                     //Make Hurtbox Tile Invisible
xdir  = 1                            //Facing Direction
ydir  = 1                            //Facing Direction of Bubbles
turn  = 0                           //Sprite Turning
offset = 0                          //Sprite Offset Y
instance_ID = 0
offset_dir = 0.24                   //Sprite Offset Direction
xdir_previous = 0                   //Previous Facing Direction
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
dropped_goodies = obj_petal
//Bullet (Base Bullet)
bullet_x = 0
bullet_y = 0
bullet_timer = 0
bullet_frame = 0
bullet_speed = 0
bullet_active = 0
bullet_hitbox = x
bullet_hitbox_1 = x
bullet_attack_timer = 0
//Bubble Particles
bubble_x[0] = -10000
bubble_y[0] = -10000
bubble_timer[0] = 0
bubble_frame[0] = 0
bubble_sprite[0] = spr_bullfrag_bubble
var bubble_counter = 1;
while(bubble_counter &lt;= 10)
    {
        bubble_x[bubble_counter] = -10000
        bubble_y[bubble_counter] = y-38
        bubble_timer[bubble_counter] = 0.24
        bubble_frame[bubble_counter] = 0
        bubble_sprite[bubble_counter] = spr_bullfrag_bubble
        bubble_counter += 1
    }
death_type = 3
death_frame = 11
flash_palette = spr_bullfrag_palette
item_offset = sprite_height+20
hp_offset = -sprite_height-8
death_frame_start = 11
death_frame_end = 11
death_particles = spr_bullfrag_death_particles
gem_explosion_timer = 0
var_scale = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Our Hurtbox Tile If We Have Been Destroyed Prematurely
if tile_exists(base) tile_delete(base);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()
if o.pause = 0 and freeze = 0
    {
        if captured = 1 and object_index = obj_bullfrag and state &lt; 2
            instance_change(obj_bullfrag_child,true);

        if tile_exists(base)
            {
                tile_set_position(base,x-44,y-80)
                if death &gt; 0 tile_delete(base);
            }

        bullet_attack_timer += 1
        if bullet_attack_timer &gt;= 5
            bullet_attack_timer = 0;

        if item = spr_mod_chip_extra_large
            var_scale = 2;
        else
            var_scale = 1;

        if room != rm_editor and death &gt; 0
            {
                gem_explosion_timer += 1
                //Create 20 Gems
                switch(gem_explosion_timer)
                    {
                        case 2: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 4: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 6: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 8: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 10: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 12: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 14: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 16: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 18: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 20: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 22: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 24: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 26: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 28: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 30: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        case 32: {scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(-0.5,-1.5)); scr_attack_tile(x,y-59,obj_gem,0,spr_gem,random_range(0.5,1.5)); break;}
                        default: {break;}
                    }
            }
        
        //Animation Loops
        if state = 0
            {
                var var_speed = 0.20;
                if item = spr_mod_chip_speed var_speed = 0.40;
                //Idle State
                if being &lt; 1 {frame += var_speed; if frame &gt; 5.70 {being += 0.25; frame = 0;} if obj_game_logic.px &lt; x xdir = -1; if obj_game_logic.px &gt;= x xdir = 1;}
                //Wind Up State
                if being = 1 {frame += var_speed; if frame &lt; 6 frame = 6; if frame &gt; 10.70 frame = 10; timer += 1; if timer = 1 ydir = xdir; if (timer = 20 and obj_game_logic.user_cursor_mode = 0) bullet_timer = 1; if timer &gt;= 48 being = 2;}
                //Wind-down State
                if being = 2 {frame -= var_speed; if frame &lt; 6.25 {frame = 0; being = 0; timer = 0;}}
            }
        //Bullet Projectile
        if bullet_timer &gt;= 1
            {
                bullet_timer += 1
                switch(bullet_timer)
                    {
                        case 2:  {bubble_x[1] = x+((15*xdir)*var_scale); bubble_y[1] = y-(38*var_scale); bubble_timer[1] = 2; bubble_sprite[1] = spr_bullfrag_bubble; bubble_frame[1] = 0; if play_sound = 1 audio_play_sound(snd_enemy_bullfrag,50,false);}
                        case 6:  {bubble_x[2] = x+((15*xdir)*var_scale); bubble_y[2] = y-(38*var_scale); bubble_timer[2] = 2; bubble_sprite[2] = spr_bullfrag_bubble; bubble_frame[2] = 0;}
                        case 10: {bubble_x[3] = x+((15*xdir)*var_scale); bubble_y[3] = y-(38*var_scale); bubble_timer[3] = 2; bubble_sprite[3] = spr_bullfrag_bubble; bubble_frame[3] = 0;}
                        case 14: {bubble_x[4] = x+((15*xdir)*var_scale); bubble_y[4] = y-(38*var_scale); bubble_timer[4] = 2; bubble_sprite[4] = spr_bullfrag_bubble; bubble_frame[4] = 0;}
                        case 18: {bubble_x[5] = x+((15*xdir)*var_scale); bubble_y[5] = y-(38*var_scale); bubble_timer[5] = 2; bubble_sprite[5] = spr_bullfrag_bubble; bubble_frame[5] = 0;}
                        case 22: {bubble_x[6] = x+((15*xdir)*var_scale); bubble_y[6] = y-(38*var_scale); bubble_timer[6] = 2; bubble_sprite[6] = spr_bullfrag_bubble; bubble_frame[6] = 0;}
                        case 26: {bubble_x[7] = x+((15*xdir)*var_scale); bubble_y[7] = y-(38*var_scale); bubble_timer[7] = 2; bubble_sprite[7] = spr_bullfrag_bubble; bubble_frame[7] = 0;}
                        case 30: {bubble_x[8] = x+((15*xdir)*var_scale); bubble_y[8] = y-(38*var_scale); bubble_timer[8] = 2; bubble_sprite[8] = spr_bullfrag_bubble; bubble_frame[8] = 0;}
                        case 34: {bubble_x[9] = x+((15*xdir)*var_scale); bubble_y[9] = y-(38*var_scale); bubble_timer[9] = 2; bubble_sprite[9] = spr_bullfrag_bubble; bubble_frame[9] = 0;}
                        case 38: {bubble_x[10] = x+((15*xdir)*var_scale); bubble_y[10] = y-(38*var_scale); bubble_timer[10] = 2; bubble_sprite[10] = spr_bullfrag_bubble; bubble_frame[10] = 0;}
                    }
                var bubble_counter = 1;
                while(bubble_counter &lt;= 10)
                    {
                        bubble_x[bubble_counter] += 2*ydir
                        bubble_y[bubble_counter] += bubble_timer[bubble_counter]
                        bubble_timer[bubble_counter] -= 0.058
                        if bubble_timer[bubble_counter] &lt; -2
                            {
                                bubble_sprite[bubble_counter] = spr_cube_pop_large
                                bubble_frame[bubble_counter] += 1
                                if bubble_frame[bubble_counter] = 1
                                if play_sound = 1
                                    {
                                        audio_play_sound(snd_enemy_explosion,50,false);
                                        scr_set_screen_shake(24,3)
                                    }
                                if bubble_frame[bubble_counter] &gt; 12
                                bubble_x[bubble_counter] = -10000;
                            }
                        if (obj_game_logic.milla_special_attack &gt; 0 and obj_game_logic.milla_special_attack &lt;= 2)
                            {
                                if point_distance(bubble_x[bubble_counter],bubble_y[bubble_counter],obj_game_logic.milla_special_length_x2,obj_game_logic.milla_special_length_y2) &lt; 48*obj_game_logic.milla_special_attack
                                    {
                                        bubble_timer[bubble_counter] = -3
                                        if play_sound = 1 and !audio_is_playing(snd_enemy_projectile)
                                            audio_play_sound(snd_enemy_projectile,50,false);
                                    }
                            }
                        if bubble_counter = 1
                        or bubble_counter = 50
                        or bubble_counter = 10
                            {
                                if obj_game_logic.hurt[0] = 0
                                    {
                                        if point_in_rectangle(obj_game_logic.universal_player_x,obj_game_logic.universal_player_y,
                                        bubble_x[bubble_counter]-obj_game_logic.player_hitbox_radius/2,bubble_y[bubble_counter]-obj_game_logic.player_hitbox_radius/2,
                                        bubble_x[bubble_counter]+obj_game_logic.player_hitbox_radius/2,bubble_y[bubble_counter]+obj_game_logic.player_hitbox_radius/2)
                                        and obj_game_logic.shield_invuln = 32
                                        and not (obj_game_logic.shield_active = 1 and obj_game_logic.shield=spr_shield_water)
                                            {
                                                scr_enemy_deal_damage(0.4,1,2);
                                                bubble_timer[bubble_counter] = -3
                                            }
                                    }
                                if bullet_attack_timer &gt; 3
                                    {
                                        //Bomb Cube
                                        var instance_ID = collision_circle(bubble_x[bubble_counter],bubble_y[bubble_counter],16,obj_player_cube_alt,false,true);
                                        if instance_exists(instance_ID)
                                            {
                                                if instance_ID.cube_jiggle_timer = 0
                                                    {
                                                        instance_ID.cube_jiggle_timer = 10
                                                        instance_ID.cube_health += 0.25
                                                    }
                                            }
                                        if obj_game_logic.user_enemy_level &lt; 2
                                            {
                                                //Mega Items
                                                var instance_ID = collision_circle(bubble_x[bubble_counter],bubble_y[bubble_counter],16,obj_mega_item_parent,false,true);
                                                if instance_exists(instance_ID)
                                                    {
                                                        instance_ID.attacked = 2
                                                    }
                                                //Attack other enemies within range of the boxing glove
                                                instance_ID = collision_circle(bubble_x[bubble_counter],bubble_y[bubble_counter],16,obj_enemy_parent,false,true);
                                                if instance_exists(instance_ID)
                                                    {
                                                        if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                                            {
                                                                instance_ID.attacked = 1
                                                                instance_ID.attacked_damage = 2
                                                            }
                                                    }
                                                if room != rm_editor
                                                    {
                                                        var crate_ID = collision_rectangle(bubble_x[bubble_counter]-32,bubble_y[bubble_counter]-32,bubble_x[bubble_counter]+32,bubble_y[bubble_counter]+32,obj_destructible,false,true);
                                                        if instance_exists(crate_ID)
                                                            {
                                                                crate_ID.attacked = 1
                                                            }
                                                    }
                                            }
                                    }
                            }
                        bubble_counter += 1
                    }
            }
    } //End of pause check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite
event_inherited()
if scale != 1 frame = 10;
var bubble_counter = 1;
while(bubble_counter &lt;= 10)
    {
        draw_sprite_ext(bubble_sprite[bubble_counter],bubble_frame[bubble_counter],bubble_x[bubble_counter],bubble_y[bubble_counter],1*var_scale,1*var_scale,0,c_white,1)
        bubble_counter += 1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
