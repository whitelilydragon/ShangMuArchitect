<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logic_processor</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_activate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cutscene Script
o = obj_game_logic

scr_stop_music();

if view_xview[view_port] &lt; 0
    view_xview[view_port] = 0;

control_type = 0
draw_yes_no = 0
draw_yes_no_frame = 0
play_sound = 0
joy_flash = 0
joy_press = 0
textbox_max_width = 284

skip_cutscene_prompt = 0
skip_cutscene_prompt_timer = 0
skip_cutscene_prompt_press_check = 0
skip_cutscene_transparency = 0

transition_active   = 0
transition_position = 0
warp_goto = rm_title_screen
warp_to_map = ""

view_shake = 0
view_shake_iterations = 0
view_shake_mod = 3

//Line 1
name_string[0] = "Actor"
text_string[0] = "Test"
actor_emote[0] = spr_lilac_cs_talking_neutral
actor_sound[0] = snd_text_child

actor_plane_y = 0

allowed_turn = 1
allowed_draw = 1
current_text = text_string[0]
current_read = 0
current_page = 0
current_name = name_string[0]
maximum_page = 11

allowed_sfx[0] = snd_text_female
allowed_sfx[1] = snd_text_female
allowed_sfx_count = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load Cutscene
if o.use_cuts_select = "cutscene_01.map"
    instance_change(obj_cutscene_01,true);

if o.use_cuts_select = "cutscene_02.map"
    instance_change(obj_cutscene_02,true);

if o.use_cuts_select = "cutscene_03.map"
    instance_change(obj_cutscene_03,true);

if o.use_cuts_select = "cutscene_04.map"
    instance_change(obj_cutscene_04,true);

if o.use_cuts_select = "cutscene_05.map"
    instance_change(obj_cutscene_05,true);

if o.use_cuts_select = "cutscene_06.map"
    instance_change(obj_cutscene_06,true);

if o.use_cuts_select = "cutscene_07.map"
    instance_change(obj_cutscene_07,true);

if o.use_cuts_select = "cutscene_08.map"
    instance_change(obj_cutscene_08,true);

if o.use_cuts_select = "cutscene_09.map"
    instance_change(obj_cutscene_09,true);

if o.use_cuts_select = "cutscene_10.map"
    instance_change(obj_cutscene_10,true);

if o.use_cuts_select = "cutscene_11.map"
    instance_change(obj_cutscene_11,true);
    
if o.use_cuts_select = "cutscene_12.map"
    instance_change(obj_cutscene_12,true);

if o.use_cuts_select = "cutscene_13.map"
    instance_change(obj_cutscene_13,true);

if o.use_cuts_select = "cutscene_14.map"
    instance_change(obj_cutscene_14,true);

if o.use_cuts_select = "train cutscene_01.map"
or o.use_cuts_select = "train_city_to_station.map"
    instance_change(obj_train_cutscene_01,true);

if o.use_cuts_select = "train_station_to_sma.map"
    instance_change(obj_train_station_to_sma,true);

if o.use_cuts_select = "train_station_to_wd.map"
    instance_change(obj_train_station_to_wd,true);

if o.use_cuts_select = "train_station_to_ed.map"
    instance_change(obj_train_station_to_ed,true);

if o.use_cuts_select = "train_station_to_smt.map"
    instance_change(obj_train_station_to_smt,true);

if o.use_cuts_select = "train_station_to_tai.map"
    instance_change(obj_train_station_to_tai,true);

if o.use_cuts_select = "train_station_to_lg.map"
    instance_change(obj_train_station_to_lg,true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cutscene Input Controller

//Input pressed check
if o.joy_input[1,0] = 1 or o.joy_input[1,3] = 1
    {
        current_read += 0.6;
        joy_press += 1;
        if keyboard_check(vk_anykey) or mouse_check_button(mb_any)
            control_type = 0;
        //Check Controller's Action Buttons
        if gamepad_button_check(o.joy_modern_id,o.joy_a_mod) = 1
        or gamepad_button_check(o.joy_modern_id,o.joy_c_mod) = 1
            control_type = 1;
    }
else
    joy_press = 0;

if allowed_turn &gt; 1
    allowed_turn -= 1;

if allowed_draw = 1
    {
        current_read += 0.4
        //Turn page, or stop talking, after the player has pushed their buttons
        //at the end of the "page"
        if current_read &gt;= string_length(current_text)
            {
                current_read = string_length(current_text)
                if play_sound = 0
                    {
                        audio_play_sound(snd_text_scrolling,50,false)
                        play_sound = 1
                    }
                joy_flash = 1
                if joy_press = 1 and allowed_turn = 1
                    {
                        current_page += 1
                        if current_page &gt; maximum_page
                            {
                                current_page = maximum_page
                                allowed_turn = 300
                                transition_active = 1
                                audio_play_sound(pause_exit,50,false)
                            }
                        if current_page &lt;= maximum_page
                            {
                                current_text = text_string[current_page];
                                draw_set_font(o.text_font_academy);
                                current_text = string_wordwrap_width(text_string[current_page],284,"#",true);
                                current_name = name_string[current_page];
                            }
                        current_read = 0
                        play_sound = 0
                        joy_flash = 0
                        audio_play_sound(pause_select,50,false)
                    }
            }
        //Play text scrolling sound effect
        var current_read_length = string_copy(current_text,1,floor(current_read));
        var current_character = string_char_at(current_read_length,string_length(current_read_length));
        if (current_character = "a" or current_character = "e" or current_character = "i"
        or current_character = "o" or current_character = "u"
        or current_character = "A" or current_character = "E" or current_character = "I"
        or current_character = "O" or current_character = "U"
        or current_character = " ")
        and transition_active = 0
            {
                audio_sound_pitch(actor_sound[current_page],0.95)
                //Change pitch based on vowel sounds
                if current_character = "a"
                or current_character = "A"
                    audio_sound_pitch(actor_sound[current_page],0.96);
                if current_character = "e"
                or current_character = "E"
                    audio_sound_pitch(actor_sound[current_page],0.98);
                if current_character = "i"
                or current_character = "I"
                    audio_sound_pitch(actor_sound[current_page],0.98);
                if current_character = "o"
                or current_character = "O"
                    audio_sound_pitch(actor_sound[current_page],0.95);
                if current_character = "u"
                or current_character = "U"
                    audio_sound_pitch(actor_sound[current_page],0.96);
                if current_character = " "
                    audio_sound_pitch(actor_sound[current_page],0.95);
                    
                //Play sound
                audio_play_sound(actor_sound[current_page],50,false)
            }
    }

//Skip Cut-Scene Button
if obj_game_logic.joy_input[2,0] = 1 and warp_to_map != "TaishanTutorial.map"
    {
        skip_cutscene_prompt_press_check += 1
        if skip_cutscene_prompt_press_check = 1
            skip_cutscene_prompt += 1;
        //Prevent Carol from entering Carrie's tutorial stage
        //because of the new cutscene skip option
        if transition_active = 0 and skip_cutscene_prompt = 2
            {
                transition_active = 1
                audio_play_sound(pause_exit,50,false)
            }
    }
else
    skip_cutscene_prompt_press_check = 0;

if skip_cutscene_prompt = 1
    {
        skip_cutscene_prompt_timer += 1
        if skip_cutscene_prompt_timer = 60
            {
                skip_cutscene_prompt = 0
                skip_cutscene_prompt_timer = 0
            }
        skip_cutscene_transparency = lerp(skip_cutscene_transparency,1,0.15);
    }
else
    skip_cutscene_transparency = lerp(skip_cutscene_transparency,0,0.15);

if transition_active = 1
    {
        transition_position += 31;
        if transition_position &gt;  527
            {
                obj_game_logic.use_cuts_select = warp_to_map
                obj_game_logic.story_mode = 1
                audio_sound_pitch(snd_text_male,1)
                audio_sound_pitch(snd_text_female,1)
                audio_sound_pitch(snd_text_child,1)
                room_goto(warp_goto);
            }
    }

if view_shake &gt;= 0 and obj_game_logic.user_camera_shake = 1
    {
        //Decrement camera shake length timer
        view_shake-=1
        //Increment camera shake iteration timer
        view_shake_iterations += 1
        //Lessen camera shake over time
        if view_shake_mod &gt; 0.1 view_shake_mod -= 0.1;
        //Reset camera shake iteration timer
        if view_shake_iterations &gt; 3 view_shake_iterations = 0;
        //Camera x shake
        switch(view_shake_iterations)
            {
                case 0: {view_xview[view_port]+=view_shake_mod;  view_yview[view_port]+=view_shake_mod;  break;}
                case 1: {view_xview[view_port]-=view_shake_mod;  view_yview[view_port]-=view_shake_mod;  break;}
                case 2: {view_xview[view_port]-=view_shake_mod;  view_yview[view_port]-=view_shake_mod;  break;}
                case 3: {view_xview[view_port]+=view_shake_mod;  view_yview[view_port]+=view_shake_mod;  break;}
            }
        //If the timer has ended, stop camera shake
        if view_shake=0
            {
                view_shake_iterations =  0
                view_shake            = -1
                view_shake_mod        =  3
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Text GUI
if allowed_draw = 1
    {
        draw_background(ui_dialogue_box,56,8)
        //Actor Name
        draw_set_font(o.menu_font)
        draw_set_color(c_white)
        draw_text(64,66,current_name)
        //Actor String
        draw_set_font(o.text_font_academy)
        draw_set_color(c_white)        
        draw_text_ext(70,12,string_copy(current_text,1,floor(current_read)),16,textbox_max_width+4)
        //Joystick Prompt
        if joy_flash = 1
            {
                if control_type = 0 draw_sprite(spr_keyboard_font,o.key_a,348,67);
                else                draw_background(o.user_joystick_a,348,67);
            }
        if draw_yes_no = 1
            draw_sprite(spr_ui_yes_no,draw_yes_no_frame,322,96);
    }
if transition_active = 1
    draw_sprite(spr_transition_skewed,0,transition_position,0);

//Skip Cutscene Text
draw_set_font(o.menu_font)
draw_set_color(c_white)
draw_set_halign(fa_right)
draw_text_transformed_colour(394,216,"Skip     Cutscene",1,1,0,c_white,c_white,c_white,c_white,skip_cutscene_transparency)
draw_set_halign(fa_left)
if control_type = 0 draw_sprite_ext(spr_keyboard_font,o.key_start,398,216,1,1,0,c_white,skip_cutscene_transparency);
else                draw_background_ext(o.user_joystick_start,398,216,1,1,0,c_white,skip_cutscene_transparency);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Actors
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
