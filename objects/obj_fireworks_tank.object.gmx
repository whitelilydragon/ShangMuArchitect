<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fireworks_tank_thumbnail</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_explode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
death_type = 3
flash_palette = spr_fireworks_palette
hsp = 0
bob = 0
    timer = 0
    phase = 0
accel = 0.0921875
accel_backup = accel
wheel_accel = 0
wheel_target = 0
xdir  = 1                            //Facing Direction
angle = 0
angle_a = 0
angle_b = 0
angle_c = 0
boss_enemy = 1
heart = 192                          //Enemy Health
heartmax = 192                       //Enemy Health
hp_mod = 0.26041667
hp_target = heart
heart_bar_target = ((heart/2)-(heartmax/4))+2
heart_bar_target_2 = heart/2
can_draw_sprite = 0
can_draw_healthbar = 0
can_parry = 1
anchor_x1 = 0
anchor_y1 = 0
anchor_x2 = 0
anchor_y2 = 0
anchor_scale = 1
anchor_wheels_x1 = 0
anchor_wheels_y1 = 0
anchor_wheels_x2 = 0
anchor_wheels_y2 = 0
anchor_wheels_x3 = 0
anchor_wheels_y3 = 0
anchor_wheels_x4 = 0
anchor_wheels_y4 = 0
anchor_wheels_x5 = 0
anchor_wheels_y5 = 0
projectile_x = 0
projectile_y = 0
projectile_angle = 0
projectile_frame = 0
projectile_speed = 0
projectile_fall_speed = 0
fire_x = 0
fire_y = 0
fire_angle = 0
fire_frame = -1
pop_x = 0
pop_y = 0
pop_frame = 0
jump_pop_x = 0
jump_pop_y = 0
jump_pop_frame = -1
particles_active = 0
particles_frame[0] = -1
particles_x[0] = 0
particles_y[0] = 0
particles_frame[1] = -1
particles_x[1] = 0
particles_y[1] = 0
particles_frame[2] = -1
particles_x[2] = 0
particles_y[2] = 0
particles_frame[3] = -1
particles_x[3] = 0
particles_y[3] = 0
particles_frame[4] = -1
particles_x[4] = 0
particles_y[4] = 0
parry_line = 0
stamina = 120
flame_active = 0
flame_x[0] = 0
flame_y[0] = 0
flame_frame[0] = 0
flame_x[1] = 0
flame_y[1] = 0
flame_frame[1] = 0
flame_x[2] = 0
flame_y[2] = 0
flame_frame[2] = 0
flame_angle = 0
attack_timer = 0
attack_direction = 1
attack_x = 0
attack_y = 0
warning_frame = 0
fireworks_pop_x[0] = 0
fireworks_pop_y[0] = 0
fireworks_pop_frame[0] = 0
fireworks_pop_x[1] = 0
fireworks_pop_y[1] = 0
fireworks_pop_frame[1] = 0
fireworks_pop_x[2] = 0
fireworks_pop_y[2] = 0
fireworks_pop_frame[2] = 0
tank_direction = 1
tank_shimmer_frame = 0
slowdown_timer = 0
white_transition_alpha = 0
phase_flash = 0
phase_timer = 0
phase_warmup_frame = 2
phase_warmup_direction = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(snd_tank_moving)
audio_stop_sound(snd_tank_idle)
if o.targets_mode = spr_hud_target_boss and room != rm_editor
    o.targets_ready = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

//Refer to obj_enemy_parent object for parrying code
if o.pause = 0 and heart &gt;= 0
    {
        if room = rm_editor
            {
                /*
                if instance_number(obj_fireworks_tank) &gt; 1
                and object_index != obj_fireworks_tank_flee
                    {
                        scr_set_message("There can only be one Fireworks Tank per stage!")
                        instance_destroy();
                    }
                */
                if item = spr_mod_chip_extra_large
                    {
                        item = 0
                        scr_set_message("Fireworks Tank is big enough to take you on!")
                    }
                if point_distance(o.px,o.py,x,y) &gt; 1024
                    {
                        phase = 0
                        hsp = 0
                    }
            }
        if accel != accel_backup and (item = spr_mod_chip_speed or o.user_enemy_level &gt;= 4)
            accel = accel*2;
        if y &gt; room_height heart = -1;
        //Turret Rotations
        angle_b = point_direction(anchor_x1,anchor_y1,o.universal_player_x,o.universal_player_y);
        if phase = 1 and (timer &gt; 180 or (flame_active &gt; 0 and flame_active &lt; 30))
            angle_b = 90;
        anchor_x2 = anchor_x1+lengthdir_x(83,angle_b);
        anchor_y2 = anchor_y1+lengthdir_y(83,angle_b);
        if angle_b &gt;= 90 and angle_b &lt;= 270
            anchor_scale = -1;
        else
            anchor_scale = 1;
        //Wheel Rotations
        anchor_wheels_x1 = x+lengthdir_x(15,angle_a+90);
        anchor_wheels_y1 = y+lengthdir_y(15,angle_a+90);
        //Wheel #1
        anchor_wheels_x3 = anchor_wheels_x1+lengthdir_x(50,angle_a+180);
        anchor_wheels_y3 = anchor_wheels_y1+lengthdir_y(50,angle_a+180);
        //Wheel #2
        anchor_wheels_x2 = anchor_wheels_x1+lengthdir_x(16,angle_a+180);
        anchor_wheels_y2 = anchor_wheels_y1+lengthdir_y(16,angle_a+180);
        //Wheel #3
        anchor_wheels_x4 = anchor_wheels_x1+lengthdir_x(16,angle_a);
        anchor_wheels_y4 = anchor_wheels_y1+lengthdir_y(16,angle_a);
        //Wheel #4
        anchor_wheels_x5 = anchor_wheels_x1+lengthdir_x(50,angle_a);
        anchor_wheels_y5 = anchor_wheels_y1+lengthdir_y(50,angle_a);

        //Attack Scanning//
        //---------------//

        var attack_distance = 86;
        switch(attack_timer)
            {
                case 0: {attack_direction = 0;   break;}
                case 1: {if phase = 0 attack_distance = 0; break;}
                case 2: {attack_direction = 180; attack_distance = 86; break;}
                case 3: {attack_direction = 0;   attack_distance = 86; break;}
                case 4: {attack_timer = 0;       break;}
            }
        attack_timer += 1
        attack_x = anchor_wheels_x1+lengthdir_x(attack_distance,angle_a+attack_direction);
        attack_y = anchor_wheels_y1+lengthdir_y(attack_distance,angle_a+attack_direction);
        if o.user_enemy_level &gt; 1
            {
                if object_index != obj_fireworks_tank_flee
                    {
                        //Hurt The Player If They've Been Punched By The Boxing Glove
                        if (o.hurt[0] = 0 and o.hurt[1] = 0
                        and o.shield_invuln = 32
                        and point_distance(attack_x,attack_y,o.universal_player_x,o.universal_player_y) &lt; 16)
                            {
                                //Deal one life petal of damage
                                o.hurt[0] = 1;
                                scr_enemy_deal_damage(0.4,1,2);
                                o.hsp = 8*sign(hsp)
                                if tank_shimmer_frame = -1
                                    {
                                        tank_shimmer_frame = 0
                                        audio_play_sound(snd_enemy_sword,50,false)
                                    }
                            }
                        //Mega Items
                        var instance_ID = collision_circle(attack_x,attack_y,16,obj_mega_item_parent,false,true);
                        if instance_ID != noone
                            {
                                instance_ID.attacked = 2
                                if tank_shimmer_frame = -1
                                    {
                                        tank_shimmer_frame = 0
                                        audio_play_sound(snd_enemy_sword,50,false)
                                    }
                            }
                        //Items
                        var instance_ID = collision_circle(attack_x,attack_y,16,obj_destructible,false,true);
                        if instance_ID != noone
                            {
                                instance_ID.attacked = 1
                                if tank_shimmer_frame = -1
                                    {
                                        tank_shimmer_frame = 0
                                        audio_play_sound(snd_enemy_sword,50,false)
                                    }
                            }
                        //Attack other enemies within range of the boxing glove
                        instance_ID = collision_circle(attack_x,attack_y,16,obj_enemy_parent,false,true);
                        if instance_exists(instance_ID)
                            {
                                if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                    {
                                        instance_ID.attacked = 1
                                        instance_ID.attacked_damage = 2
                                        if tank_shimmer_frame = -1
                                            {
                                                tank_shimmer_frame = 0
                                                audio_play_sound(snd_enemy_sword,50,false)
                                            }
                                    }
                            }
                    }
            }

        //Wheel acceleration
        if abs(hsp) &gt; 0
            {
                wheel_target = 8;
                if phase = 1 wheel_target = 16;
                if abs(hsp) &gt; 1 bob += 0.25;
                if abs(hsp) &gt;= 1.9 and (ground = 1 or gravity_slope = 1)
                    scr_set_screen_shake(3,1);
                if bob &gt; 2 bob = 0;
            }
        if hsp = 0
            {
                wheel_target = 0;
                bob = 0
            }
        wheel_accel = lerp(wheel_accel,wheel_target,0.15);
        angle_c += wheel_accel*-sign(hsp)
        //Sound Playback
        if play_sound = 1
            {
                if abs(hsp) &gt; 1 and !audio_is_playing(snd_tank_moving)
                    {
                        audio_stop_sound(snd_tank_idle)
                        audio_play_sound(snd_tank_moving,50,true)
                    }
                if abs(hsp) &lt;= 1 and !audio_is_playing(snd_tank_idle)
                    {
                        audio_stop_sound(snd_tank_moving)
                        audio_play_sound(snd_tank_idle,50,true) 
                    }
                if o.user_cursor_mode = 1
                    {
                        if audio_is_playing(snd_tank_moving) audio_stop_sound(snd_tank_moving);
                        if audio_is_playing(snd_tank_idle) audio_stop_sound(snd_tank_idle);
                    }
            }

        //First Phase Behavior
        if phase = 0
            {
                if o.user_cursor_mode = 0 and timer &lt; 80
                    {
                        if o.px &gt; x  hsp += accel;
                        if o.px &lt;= x hsp -= accel;
                    }
                else
                    hsp = 0;
                if o.user_cursor_mode = 1
                    timer = 0;
                if heart &lt; heartmax/2
                    {
                        phase = 1
                        timer = 58.75
                        phase_timer = 1
                        audio_play_sound(snd_boss_phase_transition,50,false)
                        scr_attack_enemy(x,y-16,obj_destructible_particle,0,spr_fireworks_tank_destruction_particles,0,1,-6.75,3)
                        audio_play_sound(snd_explosion,50,false)
                    }
                timer += 1
                if timer &gt; 120 timer = 0;

                //Play Warmup Sound Effect
                if timer = 40
                    audio_play_sound(snd_door_open,50,false);
                
                //Clamp and apply horizontal speeds
                hsp = clamp(hsp,-2,2)
                //Parry Line
                parry_line = anchor_y1+32
            }

        //Second Phase Behavior
        if phase = 1
            {
                if o.user_cursor_mode = 0
                    {
                        if tank_direction = -1
                            {
                                if o.px &gt; x  hsp -= accel*3;
                                if o.px &lt;= x hsp += accel*3;
                            }
                        if tank_direction = 1
                            {
                                if o.px &gt; x  hsp += accel*3;
                                if o.px &lt;= x hsp -= accel*3;
                            }
                    }
                else
                    {
                        hsp = 0;
                        timer = 0;
                    }
                //Play Warmup Sound Effect
                if timer = 100
                    audio_play_sound(snd_door_open,50,false);
                //Drive away from the player if we're too close
                if point_distance(x,y,o.px,o.py) &lt; 128
                    tank_direction = -1;
                //Approach the player if we're getting too far away
                if point_distance(x,y,o.px,o.py) &gt;= 128
                    tank_direction = 1;
                timer += 1.25
                if timer &gt; 240
                    timer = 0;
                if timer = 60 and (ground = 1 or gravity_slope = 1)
                    {
                        gravity_speed = -8
                        y -= 8
                        ground = 0
                        gravity_slope = 0
                        jump_pop_frame = 0
                        jump_pop_x = x
                        jump_pop_y = y-16
                        if play_sound = 1
                            audio_play_sound(snd_boost_pad,50,false);
                    }
                if jump_pop_frame &gt; -1
                    {
                        jump_pop_frame += 1
                        if jump_pop_frame &gt; 13.8
                            jump_pop_frame = -1;
                    }
                //Fire a round of three fireworks rockets
                if timer = 240 flame_active = 1;
                if flame_active &gt; 0
                    {
                        flame_active += 1
                        if flame_active = 2
                            {
                                flame_frame[0] = 0
                                flame_x[0] = anchor_x2
                                flame_y[0] = anchor_y2
                                flame_angle = 90
                                pop_frame = 0
                                pop_x = anchor_x2
                                pop_y = anchor_y2
                                if play_sound = 1
                                    audio_play_sound(snd_tank_firing,50,false);
                            }
                        if flame_active = 16
                            {
                                flame_frame[1] = 0
                                flame_x[1] = anchor_x2
                                flame_y[1] = anchor_y2
                                pop_frame = 0
                                pop_x = anchor_x2
                                pop_y = anchor_y2
                                if play_sound = 1
                                    audio_play_sound(snd_tank_firing,50,false);
                            }
                        if flame_active = 32
                            {
                                flame_frame[2] = 0
                                flame_x[2] = anchor_x2
                                flame_y[2] = anchor_y2
                                pop_frame = 0
                                pop_x = anchor_x2
                                pop_y = anchor_y2
                                if play_sound = 1
                                    audio_play_sound(snd_tank_firing,50,false);
                            }
                        if flame_active = 64
                            {
                                flame_x[0] = view_xview[view_port]
                                flame_x[1] = view_xview[view_port]+(internal_res_width/2)
                                flame_x[2] = view_xview[view_port]+internal_res_width
                            }
                        var iterate = 0;
                        while(iterate &lt;= 2)
                            {
                                if flame_frame[iterate] &gt; -1
                                    {
                                        if flame_active &lt;  64 {flame_y[iterate] -= 8; flame_angle = 90;}
                                        if flame_active &gt;= 64 {flame_y[iterate] += 8; flame_angle = 270;}
                                        if flame_active &gt;= 64
                                            {
                                                //Hurt The Player If They've Been Punched By The Boxing Glove
                                                if (o.hurt[0] = 0 and o.hurt[1] = 0
                                                and o.shield_invuln = 32
                                                and point_distance(flame_x[iterate],flame_y[iterate],o.universal_player_x,o.universal_player_y) &lt; 32)
                                                    {
                                                        scr_enemy_deal_damage(0.4,1,2);
                                                        flame_frame[iterate] = -1
                                                        instance_create(flame_x[iterate],flame_y[iterate],obj_fireworks_particle)
                                                        fireworks_pop_frame[iterate] = 0
                                                        fireworks_pop_x[iterate] = flame_x[iterate]
                                                        fireworks_pop_y[iterate] = flame_y[iterate]
                                                        if play_sound = 1
                                                            audio_play_sound(snd_explosion,50,false);
                                                    }
                                                //Bomb Cube
                                                var instance_ID = collision_circle(flame_x[iterate],flame_y[iterate],32,obj_player_cube_alt,false,true);
                                                if instance_ID != noone
                                                    {
                                                        if instance_ID.cube_jiggle_timer = 0 
                                                            {
                                                                instance_ID.cube_jiggle_timer = 10
                                                                instance_ID.cube_health += 0.50
                                                                flame_frame[iterate] = -1
                                                                instance_create(flame_x[iterate],flame_y[iterate],obj_fireworks_particle)
                                                                fireworks_pop_frame[iterate] = 0
                                                                fireworks_pop_x[iterate] = flame_x[iterate]
                                                                fireworks_pop_y[iterate] = flame_y[iterate]
                                                                if play_sound = 1
                                                                    audio_play_sound(snd_explosion,50,false);
                                                            }
                                                    }
                                                //Mega Items
                                                var instance_ID = collision_circle(flame_x[iterate],flame_y[iterate],32,obj_mega_item_parent,false,true);
                                                if instance_ID != noone
                                                    {
                                                        if instance_ID.attacked != 2
                                                            {
                                                                instance_ID.attacked = 2
                                                                flame_frame[iterate] = -1
                                                                instance_create(flame_x[iterate],flame_y[iterate],obj_fireworks_particle)
                                                                fireworks_pop_frame[iterate] = 0
                                                                fireworks_pop_x[iterate] = flame_x[iterate]
                                                                fireworks_pop_y[iterate] = flame_y[iterate]
                                                                if play_sound = 1
                                                                    audio_play_sound(snd_explosion,50,false);
                                                            }
                                                    }
                                                //Items
                                                var instance_ID = collision_circle(flame_x[iterate],flame_y[iterate],32,obj_destructible,false,true);
                                                if instance_ID != noone
                                                    {
                                                        if instance_ID.attacked != 1
                                                            {
                                                                instance_ID.attacked = 1
                                                                flame_frame[iterate] = -1
                                                                instance_create(flame_x[iterate],flame_y[iterate],obj_fireworks_particle)
                                                                fireworks_pop_frame[iterate] = 0
                                                                fireworks_pop_x[iterate] = flame_x[iterate]
                                                                fireworks_pop_y[iterate] = flame_y[iterate]
                                                                if play_sound = 1
                                                                    audio_play_sound(snd_explosion,50,false);
                                                            }
                                                    }
                                                //Attack other enemies within range of the boxing glove
                                                instance_ID = collision_circle(flame_x[iterate],flame_y[iterate],32,obj_enemy_parent,false,true);
                                                if instance_exists(instance_ID)
                                                    {
                                                        if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                                            {
                                                                instance_ID.attacked = 1
                                                                instance_ID.attacked_damage = 2
                                                                flame_frame[iterate] = -1
                                                                instance_create(flame_x[iterate],flame_y[iterate],obj_fireworks_particle)
                                                                fireworks_pop_frame[iterate] = 0
                                                                fireworks_pop_x[iterate] = flame_x[iterate]
                                                                fireworks_pop_y[iterate] = flame_y[iterate]
                                                                if play_sound = 1
                                                                    audio_play_sound(snd_explosion,50,false);
                                                            }
                                                    }
                                                var flat_tile_surface_id = tile_layer_find(surface_flats,flame_x[iterate],flame_y[iterate])
                                                if tile_exists(flat_tile_surface_id) and flame_frame[iterate] &gt; -1
                                                    {
                                                        flame_frame[iterate] = -1
                                                        instance_create(flame_x[iterate],flame_y[iterate],obj_fireworks_particle)
                                                        fireworks_pop_frame[iterate] = 0
                                                        fireworks_pop_x[iterate] = flame_x[iterate]
                                                        fireworks_pop_y[iterate] = flame_y[iterate]
                                                        if play_sound = 1
                                                            audio_play_sound(snd_explosion,50,false);
                                                    }
                                                if (flame_x[iterate] &lt; 0 or flame_y[iterate] &gt; room_width
                                                or flame_y[iterate] &gt; room_height or flame_y[iterate] &gt; o.water_height)
                                                and (flame_frame[iterate] &gt; -1)
                                                    {
                                                        flame_frame[iterate] = -1
                                                        instance_create(flame_x[iterate],flame_y[iterate],obj_fireworks_particle)
                                                        fireworks_pop_frame[iterate] = 0
                                                        fireworks_pop_x[iterate] = flame_x[iterate]
                                                        fireworks_pop_y[iterate] = flame_y[iterate]
                                                        if play_sound = 1
                                                            audio_play_sound(snd_explosion,50,false);
                                                    }
                                            }
                                    }
                                iterate += 1
                            }
                    }
                //Clamp and apply horizontal speeds
                hsp = clamp(hsp,-6,6)
                //Parry Line
                parry_line = anchor_y1+48
            }

        //Flat Wall Collisions
        var wall_left  = tile_layer_find(surface_flats,x-112,y-8);
        var wall_right = tile_layer_find(surface_flats,x+112,y-8);
        if tile_exists(wall_right) and !tile_exists(wall_left)
            {
                hsp = -abs(hsp)
                if play_sound = 1
                    {
                        scr_set_screen_shake(3,1);
                        if !audio_is_playing(snd_heavy_shatter)
                            audio_play_sound(snd_heavy_shatter,50,false);
                    }
            }
        if !tile_exists(wall_right) and tile_exists(wall_left)
            {
                hsp = abs(hsp)
                if play_sound = 1
                    {
                        scr_set_screen_shake(3,1);
                        if !audio_is_playing(snd_heavy_shatter)
                            audio_play_sound(snd_heavy_shatter,50,false);
                    }
            }
        if tile_exists(wall_right) and tile_exists(wall_left)
            {
                hsp = 0
                if room = rm_editor
                    scr_set_message("Fireworks Tank is stuck!");
            }

        if phase = 0 and timer = 120
        or phase = 1 and timer = 180
            {
                projectile_x = anchor_x2
                projectile_y = anchor_y2
                projectile_angle = angle_b
                projectile_speed = 8
                projectile_frame = 0
                projectile_fall_speed = 0
                fire_x = anchor_x2
                fire_y = anchor_y2
                fire_angle = angle_b
                fire_frame = 0
                if play_sound = 1
                    audio_play_sound(snd_tank_firing,50,false);
            }
        //Apply horizontal speed
        x += hsp;

        //Projectile Logic
        if projectile_frame &gt; -1
            {
                projectile_frame += 0.75
                if fire_frame &gt;= 0 fire_frame += 1;
                if projectile_frame &gt; 1.8 projectile_frame = 0;
                if fire_frame &gt; 12.8 fire_frame = -1;
                //Reset rotation beyond the 0-360 range
                if projectile_angle &gt; 359 projectile_angle = 0;
                if projectile_angle &lt; 0 projectile_angle = 360;
                //Slowly fall towards the floor
                if projectile_angle &gt;= 315 or projectile_angle &lt;= 90 projectile_angle -= projectile_fall_speed;
                if projectile_angle &gt; 90 and projectile_angle &lt; 225  projectile_angle += projectile_fall_speed;
                //Fall faster if we have a downward angle
                if projectile_fall_speed &lt; 12 projectile_fall_speed += 0.05;
                if projectile_speed &lt; 12           projectile_speed += 0.05;
                //Projectile Movement
                projectile_x += lengthdir_x(projectile_speed,projectile_angle);
                projectile_y += lengthdir_y(projectile_speed,projectile_angle);
                fire_x = anchor_x2
                fire_y = anchor_y2

                //Attack Scanning//
                //---------------//

                //Hurt The Player If They've Been Punched By The Boxing Glove
                if (o.hurt[0] = 0 and o.hurt[1] = 0
                and o.shield_invuln = 32
                and point_distance(projectile_x,projectile_y,o.universal_player_x,o.universal_player_y) &lt; 32)
                    {
                        scr_enemy_deal_damage(0.4,1,2);
                        projectile_frame = -1
                        particles_active = 1
                        fire_frame = -1
                    }
                //Bomb Cube
                var instance_ID = collision_circle(projectile_x,projectile_y,32,obj_player_cube_alt,false,true);
                if instance_exists(instance_ID)
                    {
                        if instance_ID.cube_jiggle_timer = 0 
                            {
                                instance_ID.cube_jiggle_timer = 10
                                instance_ID.cube_health += 0.50
                                projectile_frame = -1
                                particles_active = 1
                                fire_frame = -1
                            }
                    }
                //Mega Items
                var instance_ID = collision_circle(projectile_x,projectile_y,32,obj_mega_item_parent,false,true);
                if instance_exists(instance_ID)
                    {
                        instance_ID.attacked = 2
                        projectile_frame = -1
                        particles_active = 1
                        fire_frame = -1
                    }
                //Items
                var instance_ID = collision_circle(projectile_x,projectile_y,32,obj_destructible,false,true);
                if instance_exists(instance_ID)
                    {
                        instance_ID.attacked = 1
                        projectile_frame = -1
                        particles_active = 1
                        fire_frame = -1
                    }
                //Attack other enemies within range of the boxing glove
                instance_ID = collision_circle(projectile_x,projectile_y,32,obj_enemy_parent,false,true);
                if instance_exists(instance_ID)
                    {
                        if instance_ID.attacked = 0 and instance_ID.alpha = 0
                            {
                                instance_ID.attacked = 1
                                instance_ID.attacked_damage = 2
                                projectile_frame = -1
                                particles_active = 1
                                fire_frame = -1
                            }
                    }
                var flat_tile_surface_id = tile_layer_find(surface_flats,projectile_x,projectile_y)
                if tile_exists(flat_tile_surface_id)
                    {
                        projectile_frame = -1
                        particles_active = 1
                        fire_frame = -1
                    }
                if projectile_x &lt; 0 or projectile_x &gt; room_width
                or projectile_y &gt; room_height
                    {
                        projectile_frame = -1
                        particles_active = 1
                        fire_frame = -1
                    }
            }

        if particles_active &gt; 0
            {
                if particles_active = 1
                    {
                        particles_frame[0] = -1
                        pop_frame = 0
                        pop_x = projectile_x
                        pop_y = projectile_y
                        particles_x[0] = projectile_x+random_range(-32,32)
                        particles_y[0] = projectile_y+random_range(-32,32)
                        particles_frame[1] = -8
                        particles_x[1] = projectile_x+random_range(-48,48)
                        particles_y[1] = projectile_y+random_range(-48,48)
                        particles_frame[2] = -16
                        particles_x[2] = projectile_x+random_range(-64,64)
                        particles_y[2] = projectile_y+random_range(-64,64)
                        particles_frame[3] = -24
                        particles_x[3] = projectile_x+random_range(-48,48)
                        particles_y[3] = projectile_y+random_range(-48,48)
                        particles_frame[4] = -32
                        particles_x[4] = projectile_x+random_range(-64,64)
                        particles_y[4] = projectile_y+random_range(-64,64)
                    }
                particles_active += 1
                pop_frame += 1
                if pop_frame &gt; 13.8
                    pop_frame = -1;
                var iterate = 0;
                while(iterate &lt;= 4)
                    {
                        particles_frame[iterate] += 1;
                        if particles_frame[iterate] = 0 and play_sound = 1
                            audio_play_sound(snd_tank_fireworks,50,false);
                        iterate += 1;
                    }
                if particles_frame[4] &gt;= 11
                    {
                        particles_active = 0
                        particles_frame[0] = -1
                        particles_x[0] = 0
                        particles_y[0] = 0
                        particles_frame[1] = -1
                        particles_x[1] = 0
                        particles_y[1] = 0
                        particles_frame[2] = -1
                        particles_x[2] = 0
                        particles_y[2] = 0
                        particles_frame[3] = -1
                        particles_x[3] = 0
                        particles_y[3] = 0
                        particles_frame[4] = -1
                        particles_x[4] = 0
                        particles_y[4] = 0
                        pop_frame = -1
                    }
            }

        //===============Rotation Lag===============//
        
        //If we are jumping or falling, rotate player sprite back to zero
        if (ground = 0 and gravity_slope = 0 and angle_a!=0)
            {
                //Prevent angle from falling to negative values.
                if angle_a&lt;0 or angle_a&gt;360 angle_a=tile_angle;
                //Rotation logic.
                if angle_a&lt;180 and angle_a!=tile_angle     angle_a-=4;
                if angle_a&gt;180 and angle_a!=tile_angle     angle_a+=4;
            }
        else
            angle_a = tile_angle;

        //Camera Boundary Clipping
        if  object_index != obj_fireworks_tank_story_mini_boss
        and object_index != obj_fireworks_tank_flee
            {
                if x &lt; o.camera_boundary_left+112  x = o.camera_boundary_left  + 112;
                if x &gt; o.camera_boundary_right-112 x = o.camera_boundary_right - 112;
                if o.boss_boundary_bottom != -10000
                and object_index != obj_fireworks_tank_flee
                    {
                        if x &lt; o.boss_boundary_left+112  x = o.boss_boundary_left  + 112;
                        if x &gt; o.boss_boundary_right-112 x = o.boss_boundary_right - 112;
                    }
            }
    }
if room != rm_editor and o.pause = 0
    {
        if heart &lt; 0
            {
                if o.timer_stop = 0
                    {
                        o.timer_stop = 1
                        depth = 0
                        scr_stop_boss_music()
                        if room = rm_campaign
                            {
                                if o.player_bosses[o.player_current] = 0
                                    o.player_bosses[o.player_current] = 1;
                            }
                    }
                slowdown_timer += 1
                o.death[0] = 0
                if slowdown_timer = 2
                    {
                        o.pause_logic = 2
                        slowdown_timer = 0
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.user_cursor_mode = 0
    {
        draw_sprite(spr_boss_hud,0,159,224)
        if heart &gt; 0
            {
                var heart_scale = heart*0.5208333333333333;
                heart_bar_target = lerp(heart_bar_target,heart_scale,0.15);
                draw_sprite_part_ext(spr_boss_health,0,0,0,heart_bar_target,3,164,226,1,1,c_white,1)
            }
        draw_set_color(c_white)
        draw_set_font(o.text_font)
        draw_set_halign(fa_middle)
        draw_text(213,208,"Fireworks Tank")
        draw_set_halign(fa_left)
        if heart &lt; 0 and room != rm_editor and o.pause = 0
            {
                if white_transition_alpha &lt; 1 white_transition_alpha += 0.0025;
                draw_sprite_stretched_ext(spr_thunder,0,0,0,internal_res_width,internal_res_height,c_white,white_transition_alpha)
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pal_alpha = 0;
if phase_timer &gt; 0
    {
        phase_flash += 1;
        phase_timer += 1;
        if phase_flash &gt; 2
            phase_flash = 0;
        if phase_timer &gt; 30
            phase_timer = 0;
    }
if (alpha &gt; 0.5 or phase_flash &gt; 1) pal_alpha = 1;
script_execute(o.pal_swap_script,flash_palette,pal_alpha,false)
if alpha &gt; 0.5 and o.pal_swap_script = pal_swap_dummy
    d3d_set_fog(true,c_yellow,0,0);

//Tank Body
draw_sprite_ext(spr_fireworks_tank,0,x,y-(bob+0.5),1,1,angle_a,c_white,1)
draw_sprite_ext(spr_fireworks_tank,1,x,y-bob,1,1,angle_a,c_white,1)
if o.user_enemy_level &gt; 1
    draw_sprite_ext(spr_fireworks_tank,2,x,y-(bob+0.5),1,1,angle_a,c_white,1);
if o.user_enemy_level &lt;= 1
    draw_sprite_ext(spr_fireworks_tank,4,x,y-(bob+0.5),1,1,angle_a,c_white,1);
if tank_shimmer_frame &gt; -1
    {
        if o.pause = 0 tank_shimmer_frame += 0.5
        if tank_shimmer_frame &gt; 5.8
            tank_shimmer_frame = -1;
        draw_sprite_ext(spr_fireworks_tank_shimmer,tank_shimmer_frame,x,y-(bob+0.5),1,1,angle_a,c_white,1);
        draw_sprite_ext(spr_fireworks_tank_shimmer,tank_shimmer_frame,x,y-(bob+0.5),-1,1,angle_a,c_white,1);
    }
//Warmup Phase Sprite Particles
if o.pause = 0
    {
        phase_warmup_frame += phase_warmup_direction
        if phase_warmup_frame &gt; 5.8
            phase_warmup_direction = -1
        if phase_warmup_frame &lt; 2
            phase_warmup_direction = 1;
    }
if (phase = 0 and timer &gt;= 60)
or (phase = 1 and (timer &gt;= 120 and timer &lt; 180))
    draw_sprite_ext(spr_cube_pop_large,phase_warmup_frame,anchor_x2,anchor_y2,1,1,angle_a+90,c_white,1);
//Wheels
if heart &gt;= 0
    {
        draw_sprite_ext(spr_fireworks_tank_wheels,1,anchor_wheels_x3-8,anchor_wheels_y3-(bob+0.5),1,1,angle_c+32,c_white,1)
        draw_sprite_ext(spr_fireworks_tank_wheels,1,anchor_wheels_x2-8,anchor_wheels_y2-bob,1,1,angle_c+32,c_white,1)
        draw_sprite_ext(spr_fireworks_tank_wheels,1,anchor_wheels_x4-8,anchor_wheels_y4-(bob+0.5),1,1,angle_c+32,c_white,1)
        draw_sprite_ext(spr_fireworks_tank_wheels,1,anchor_wheels_x5-8,anchor_wheels_y5-bob,1,1,angle_c+32,c_white,1)
        draw_sprite_ext(spr_fireworks_tank_wheels,0,anchor_wheels_x3,anchor_wheels_y3-(bob+0.5),1,1,angle_c,c_white,1)
        draw_sprite_ext(spr_fireworks_tank_wheels,0,anchor_wheels_x2,anchor_wheels_y2-bob,1,1,angle_c,c_white,1)
        draw_sprite_ext(spr_fireworks_tank_wheels,0,anchor_wheels_x4,anchor_wheels_y4-(bob+0.5),1,1,angle_c,c_white,1)
        draw_sprite_ext(spr_fireworks_tank_wheels,0,anchor_wheels_x5,anchor_wheels_y5-bob,1,1,angle_c,c_white,1)
        if tank_shimmer_frame &gt; -1
            {
                draw_sprite_ext(spr_fireworks_tank_wheels_shimmer,tank_shimmer_frame,anchor_wheels_x3,anchor_wheels_y3-(bob+0.5),1,1,angle_c,c_white,1)
                draw_sprite_ext(spr_fireworks_tank_wheels_shimmer,tank_shimmer_frame,anchor_wheels_x2,anchor_wheels_y2-bob,1,1,angle_c,c_white,1)
                draw_sprite_ext(spr_fireworks_tank_wheels_shimmer,tank_shimmer_frame,anchor_wheels_x4,anchor_wheels_y4-(bob+0.5),1,1,angle_c,c_white,1)
                draw_sprite_ext(spr_fireworks_tank_wheels_shimmer,tank_shimmer_frame,anchor_wheels_x5,anchor_wheels_y5-bob,1,1,angle_c,c_white,1)
            }
    }
if phase &lt;= 0 draw_sprite_ext(spr_fireworks_tank,3,x,y-bob,1,1,angle_a,c_white,1);
shader_reset();
d3d_set_fog(false,0,0,0)
if heart &gt;= 0
    {
        if alpha &gt; 0.5 and o.pal_swap_script = pal_swap_dummy
            d3d_set_fog(true,c_yellow,0,0);
        if jump_pop_frame &gt; -1
            draw_sprite_ext(spr_carol_bike_particles,jump_pop_frame,jump_pop_x,jump_pop_y,2,2,angle_a+90,c_white,1);
        //Turret
        if projectile_frame &gt; -1
            draw_sprite_ext(spr_fireworks_projectile,projectile_frame,projectile_x,projectile_y,1,1,projectile_angle,c_white,1);
        anchor_x1 = x+lengthdir_x(115,angle_a+90);
        anchor_y1 = y+lengthdir_y(115,angle_a+90);
        draw_sprite_ext(spr_fireworks_tank_turret,0,anchor_x1,anchor_y1,1,anchor_scale,angle_b,c_white,1)
        d3d_set_fog(false,0,0,0)
        if fire_frame &gt; -1
            draw_sprite_ext(spr_carol_bike_particles,fire_frame,fire_x,fire_y,1,1,fire_angle,c_white,1);
        if particles_active &gt; 0
            {
                var iterate = 0;
                while(iterate &lt;= 4)
                    {
                        if particles_frame[iterate] &gt; -1
                            draw_sprite(spr_fireworks_particles,particles_frame[iterate],particles_x[iterate],particles_y[iterate]);
                        iterate += 1;
                    }
                if pop_frame &gt; -1
                    draw_sprite(spr_cube_pop_large,pop_frame,pop_x,pop_y);
            }
        if phase = 1
            {
                if flame_active &gt; 0
                    {
                        var iterate = 0;
                        while(iterate &lt;= 2)
                            {
                                if flame_frame[iterate] &gt; -1
                                    draw_sprite_ext(spr_fireworks_projectile,flame_frame[iterate],flame_x[iterate],flame_y[iterate],1,1,flame_angle,c_white,1);
                                iterate += 1;
                            }
                        if pop_frame &gt; -1
                            {
                                if o.pause = 0 pop_frame += 1;
                                if pop_frame &gt; 13.8
                                    pop_frame = -1;
                                draw_sprite(spr_cube_pop_large,pop_frame,pop_x,pop_y);
                            }
                    }
                if flame_active &gt;= 64
                    {
                        var iterate = 0;
                        if o.pause = 0 warning_frame += 0.5
                        if warning_frame &gt; 2.8
                            warning_frame = 0
                        while(iterate &lt;= 2)
                            {
                                if flame_frame[iterate] &gt; -1
                                    draw_sprite(spr_hazard_warning,warning_frame,flame_x[iterate],(view_yview[view_port]+internal_res_height)-64)
                                iterate += 1;
                            }
                    }
                var iterate = 0;
                while(iterate &lt;= 2)
                    {
                        if fireworks_pop_frame[iterate] &gt; -1
                            {
                                draw_sprite(spr_cube_pop_large,fireworks_pop_frame[iterate],fireworks_pop_x[iterate],fireworks_pop_y[iterate]);
                                if o.pause = 0 fireworks_pop_frame[iterate] += 1
                                if fireworks_pop_frame[iterate] &gt; 13.8
                                    fireworks_pop_frame[iterate] = -1;
                            }
                        iterate += 1;
                    }
            }
    }
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
