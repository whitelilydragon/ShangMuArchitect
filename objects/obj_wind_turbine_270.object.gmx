<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_wind_turbine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_wind_turbine_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
angle = -180
fof_overaly_iteration = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.pause = 0
    {
        event_inherited()
        petal_particle_y[0] += 2
        petal_particle_y[1] += 6
        petal_particle_y[2] += 4
        petal_particle_y[3] += 2
        petal_particle_y[4] += 4

        var count = 0;
        while(count &lt; 5)
            {
                var point = collision_point(petal_particle_x[count],petal_particle_y[count],obj_wind_stopper,false,true);
                if (instance_exists(point))
                    height = abs(y-petal_particle_y[count]);
                if (petal_particle_y[count] &gt; y+height)
                    petal_particle_y[count] = y;
                count += 1;
            }

        if point_in_rectangle(o.px,o.py,x-64,y,x+64,y+height)
        and o.user_cursor_mode = 0
            {
                if o.anim_current=o.anim_lilac_dragon_boost_2
                    {
                        if o.xdir = 1
                            o.lilac_dragon_boost_angle -= 2;
                        if o.xdir = -1
                            o.lilac_dragon_boost_angle +=2;
                    }
                else
                    {
                        petal_spring_timer += 1
                        if petal_spring_timer = 10
                            {
                                if o.ground = 0
                                    o.gravity_speed += 3;
                                petal_spring_timer = 0;
                            }
                    }
            }
        var enemy_ID = collision_rectangle(x-64,y,x+64,y+height,obj_enemy_dropper,false,true)
        if instance_exists(enemy_ID)
            {
                if enemy_ID.gravity_speed &lt; 4
                    enemy_ID.gravity_speed += 0.5;
            }
        if o.skin = spr_milla
            {
                var cube_ID = collision_rectangle(x-64,y,x+64,y+height,obj_player_cube,false,true)
                if instance_exists(cube_ID)
                    {
                        if cube_ID.cube_gravity &lt; 4
                            cube_ID.cube_gravity += 0.5;
                    }
                var cube_ID = collision_rectangle(x-64,y,x+64,y+height,obj_player_cube_alt,false,true)
                if instance_exists(cube_ID)
                    {
                        if cube_ID.cube_gravity &lt; 4
                            cube_ID.cube_gravity += 0.5;
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
