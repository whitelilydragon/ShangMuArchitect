<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mega_bomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_mega_crate</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Cube Object
event_inherited();
sprite_index = spr_mega_bomb
cube_health = 4.8
cube_skid = 4
has_health = 0
cube_can_shatter = 0
cube_can_slide_faster = 1
cube_bouncing_sound_asset = snd_heavy_skidding

broken_particles_0 = spr_shield_broken_0
broken_particles_1 = spr_shield_broken_1
broken_particles_2 = spr_shield_broken_2
broken_particles_3 = spr_shield_broken_3
broken_particles_4 = spr_shield_broken_4
recreate_self = obj_mega_bomb
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics &amp; Movement
event_inherited();
if obj_game_logic.pause = 0
{
if cube_collided = 4
    {
        cube_attack_timer += 1
        if cube_attack_timer = 5
            {
                var attack_ID = collision_rectangle(x-69,y-69,x+69,y+69,obj_enemy_parent,false,true);
                if attack_ID != noone and obj_game_logic.pause_logic = 0
                    {
                        attack_ID.attacked = 1;
                        attack_ID.attacked_damage = 32;
                    }
                var mud_ID_check = collision_rectangle(x-69,y-69,x+69,y+69,obj_water_cube,false,true);
                if instance_exists(mud_ID_check)
                    {
                        if instance_number(obj_flood_ball) &lt; 4
                            {
                                instance_create(random_range(mud_ID_check.x,mud_ID_check.x+32),mud_ID_check.y+64,obj_flood_ball)
                                instance_create(random_range(mud_ID_check.x+96,mud_ID_check.x+64),y+128,obj_flood_ball)
                            }
                        if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                            {
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,-4  ,1,1,-4)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,-2,1,1,-5.25)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,-1  ,1,1,-5.625)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,0   ,1,1,-7.5)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,2,1,1,-6)
                            }
                    }
                var mud_ID_check = collision_rectangle(x-69,y-69,x+69,y+69,obj_mud_water,false,true);
                if instance_exists(mud_ID_check)
                    {
                        if mud_ID_check.editor_mode_timer &lt;= 0
                            {
                                if instance_number(obj_mud_ball) &lt; 4
                                    {
                                        instance_create(random_range(mud_ID_check.x,mud_ID_check.x+32),mud_ID_check.y+64,obj_mud_ball)
                                        instance_create(random_range(mud_ID_check.x+96,mud_ID_check.x+64),y+128,obj_mud_ball)
                                    }
                                if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                                    {
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-4  ,1,1,-4)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-2,1,1,-5.25)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-1  ,1,1,-5.625)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,0   ,1,1,-7.5)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,2,1,1,-6)
                                    }
                                if room != rm_editor
                                    instance_destroy(mud_ID_check);
                                else
                                    mud_ID_check.editor_mode_timer = 60;
                            }
                    }
                var mud_ID_check = collision_rectangle(x-69,y-69,x+69,y+69,obj_mud_block,false,true);
                if instance_exists(mud_ID_check)
                    {
                        if mud_ID_check.editor_mode_timer &lt;= 0
                            {
                                if instance_number(obj_mud_ball) &lt; 4
                                    {
                                        instance_create(random_range(mud_ID_check.x,mud_ID_check.x+16),mud_ID_check.y+32,obj_mud_ball)
                                        instance_create(random_range(mud_ID_check.x+16,mud_ID_check.x+32),y+32,obj_mud_ball)
                                    }
                                if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                                    {
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,-4  ,1,1,-4)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,-2,1,1,-5.25)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,-1  ,1,1,-5.625)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,0   ,1,1,-7.5)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,2,1,1,-6)
                                    }
                                if room != rm_editor
                                    instance_destroy(mud_ID_check);
                                else
                                    mud_ID_check.editor_mode_timer = 60;
                            }
                    }
                var mud_ID_check = collision_rectangle(x-69,y-69,x+69,y+69,obj_mud_cube,false,true);
                if instance_exists(mud_ID_check)
                    {
                        if mud_ID_check.editor_mode_timer &lt;= 0
                            {
                                if instance_number(obj_mud_ball) &lt; 4
                                    {
                                        instance_create(random_range(mud_ID_check.x,mud_ID_check.x+32),mud_ID_check.y+64,obj_mud_ball)
                                        instance_create(random_range(mud_ID_check.x+96,mud_ID_check.x+64),y+128,obj_mud_ball)
                                    }
                                if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                                    {
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-4  ,1,1,-4)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-2,1,1,-5.25)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-1  ,1,1,-5.625)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,0   ,1,1,-7.5)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,2,1,1,-6)
                                    }
                                if room != rm_editor
                                    instance_destroy(mud_ID_check);
                                else
                                    mud_ID_check.editor_mode_timer = 60;
                            }
                    }
                cube_attack_timer = 0
                scr_set_screen_shake(6,3)
            }

        var attack_ID = collision_rectangle(x-69,y-69,x+69,y+69,obj_destructible,false,true);
        if attack_ID != noone and obj_game_logic.pause_logic = 0
            attack_ID.attacked = 1;
        var attack_ID = collision_rectangle(x-69,y-69,x+69,y+69,obj_mega_item_parent,false,true);
        if instance_exists(attack_ID)
            attack_ID.attacked = 2;
        if point_distance(x,y,obj_game_logic.universal_player_x,obj_game_logic.universal_player_y) &lt; 96
        and obj_game_logic.hurt[0] = 0
            scr_enemy_deal_damage(1,2,4);
    }
else
    {
        //Begin detonation cycle if we've been triggered
        if cube_timer &gt; 0
            {
                if obj_game_logic.skin = spr_lilac
                or obj_game_logic.skin = spr_carol
                    {
                        if (obj_game_logic.anim_current=obj_game_logic.anim_lilac_dragon_boost_2
                        or  obj_game_logic.anim_current=obj_game_logic.anim_carol_wildclaws)
                        and point_distance(x,y,obj_game_logic.universal_player_x,obj_game_logic.universal_player_y) &lt; 72
                            cube_collided = 2;
                    }
                if cube_timer = 1
                    {
                        cube_timer = 2
                        audio_stop_sound(snd_mega_bomb)
                        audio_play_sound(snd_mega_bomb,50,false)
                    }
                frame += cube_accel
                if frame &gt; 8.8
                    {
                        audio_stop_sound(snd_mega_bomb)
                        audio_play_sound(snd_mega_bomb,50,false);
                        frame = 0
                        cube_accel += 0.05
                    }
                if cube_accel &gt;= 0.75
                    cube_collided = 2;
            }
        else
            frame = 0
    }

//----------Thrown Cube----------//
//-----------Particles-----------//

//   Particle System   //
//=====================//
//Iterate Particle Animation Frames
if particle_frame_1!=-128 particle_frame_1+=0.24;
if particle_frame_2!=-128 particle_frame_2+=0.24;
if particle_frame_3!=-128 particle_frame_3+=0.24;
if particle_frame_4!=-128 particle_frame_4+=0.24;
if particle_frame_5!=-128 particle_frame_5+=0.24;
//Reset Particle Animation Frames
if particle_frame_1 &gt; 6.8
    {
        if room = rm_editor
            {
                instance_create(start_x,start_y,obj_mega_bomb)
            }
        instance_destroy();
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprites &amp; Particles
event_inherited();
if cube_visible = 1
    draw_sprite_ext(sprite_index,frame,x,y+cube_float_bobbing,1,1,angle_a,c_white,1);
//Draw Explosion Particles
if particle_frame &gt; -1 draw_sprite(spr_explosion_1,particle_frame,x,y);
//Draw Phantom Cube Particles
if particle_frame_1&gt;=0 and particle_frame_1&lt;=6.8
    {
        draw_sprite(spr_explosion_0,particle_frame_1,particle_x_1,particle_y_1);
        draw_sprite(spr_explosion_0,particle_frame_1-0.12,particle_x_1+48,particle_y_1-48);
        draw_sprite(spr_explosion_0,particle_frame_1-0.12,particle_x_1+64,particle_y_1-96);
    }
if particle_frame_2&gt;=0 and particle_frame_2&lt;=6.8
    {
        draw_sprite(spr_explosion_0,particle_frame_2,particle_x_2,particle_y_2);
        draw_sprite(spr_explosion_0,particle_frame_2-0.12,particle_x_2-32,particle_y_2-24);
        draw_sprite(spr_explosion_0,particle_frame_2-0.12,particle_x_2+32,particle_y_2-64);
    }
if particle_frame_3&gt;=0 and particle_frame_3&lt;=6.8
    {
        draw_sprite(spr_explosion_0,particle_frame_3,particle_x_3,particle_y_3);
        draw_sprite(spr_explosion_0,particle_frame_3-0.12,particle_x_3-24,particle_y_3-64);
        draw_sprite(spr_explosion_0,particle_frame_3-0.12,particle_x_3+64,particle_y_3-64);
    }
if particle_frame_4&gt;=0 and particle_frame_4&lt;=6.8
    {
        draw_sprite(spr_explosion_0,particle_frame_4,particle_x_4,particle_y_4);
        draw_sprite(spr_explosion_0,particle_frame_4-0.12,particle_x_4-16,particle_y_4-48);
        draw_sprite(spr_explosion_0,particle_frame_4-0.12,particle_x_4+32,particle_y_4-48);
    }
if particle_frame_5&gt;=0 and particle_frame_5&lt;=6.8
    {
        draw_sprite(spr_explosion_0,particle_frame_5,particle_x_5,particle_y_5);
        draw_sprite(spr_explosion_0,particle_frame_5-0.12,particle_x_5-32,particle_y_5-64);
        draw_sprite(spr_explosion_0,particle_frame_5-0.12,particle_x_5+32,particle_y_5-64);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
