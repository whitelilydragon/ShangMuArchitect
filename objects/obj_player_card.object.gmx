<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_attack_card</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_activate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>o = obj_game_logic
bak_speed = 0
collision = 0
timer = 0
power_level = 0
damage = 2
sfx = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Animation and movement
if (o.pause = 0 and o.pause_logic = 0)
    {
        var play_sound = 1;
        timer += 1
        image_speed = 1
        if collision = 0
            {
                speed = bak_speed
                //Only check for collisions every five frames (Saves CPU requests)
                if timer = 5
                    {
                        if audio_is_playing(character_parry) play_sound = 0;
                        //Check for Tiles on Layer 0. (Flat Surface Collisions)
                        var tile_id = tile_layer_find(surface_flats,x,y)      //Bottom Collision Sensor
                        //Slope Collision Sensor
                        var slope_id = tile_layer_find(surface_slopes,x,y)
        
                        if tile_exists(tile_id)
                        //If we have collided with the boundaries of the room, explode
                        or x &lt; 0 or x &gt; room_width
                        or y &gt; room_height
                            {
                                collision = 1
                                if power_level = 0 and play_sound = 1
                                    {
                                        audio_stop_sound(character_parry)
                                        audio_play_sound(character_parry,50,false)
                                    }
                                if power_level = 1
                                    {
                                        audio_stop_sound(spade_dual_crash)
                                        audio_play_sound(spade_dual_crash,50,false)
                                    }
                            }
                         //If we are colliding with a slope tile, check its surface based on X position and explode
                        if tile_exists(slope_id)
                            {    
                                //Collect Background ID of the Tile
                                var slope_id_debug = o.enemy_slopes[tile_get_background(slope_id)];
                                //Actual Slope ID Instead of Its PassThru
                                var invert_id = tile_get_background(slope_id);
                
                                //Get Coordinates Relative to the Tile's Origins
                                var slope_id_pos_x=abs(tile_get_x(slope_id)-x)   //Get X
                                var slope_id_pos_y=abs(tile_get_y(slope_id)-y)   //Get Y

                                var ignore = false;
                                //Ignore collisions with ladders and hangbars
                                if o.orig_clip[invert_id+o.scr_local_s_type,0]=o.scr_ladder_surface
                                or o.orig_clip[invert_id+o.scr_local_s_type,0]=o.scr_hang_bar_surface
                                //Also ignore collisions with certain FOFs
                                or slope_id_debug = -1
                                    ignore = true;
                                var invert = false;
                                //Invert collision checks if we're inside certain surface types
                                if o.orig_clip[invert_id+o.scr_local_s_type,0]=o.scr_top_left_inside_loop
                                or o.orig_clip[invert_id+o.scr_local_s_type,0]=o.scr_top_right_inside_loop
                                or o.orig_clip[invert_id+o.scr_local_s_type,0]=o.scr_bottom_left_outside_loop
                                or o.orig_clip[invert_id+o.scr_local_s_type,0]=o.scr_bottom_right_outside_loop
                                    invert = true;
                                //If we are clipping to the slope's Y height, explode
                                if (ignore = false)
                                    {
                                        //Check If Y is Greater Than Slope's Current Height
                                        if (slope_id_pos_y &gt;= o.orig_clip[slope_id_debug,slope_id_pos_x]
                                        and invert = false)
                                        or (slope_id_pos_y &lt;= o.orig_clip[invert_id,slope_id_pos_x]
                                        and invert = true)
                                            {
                                                collision = 1
                                                if power_level = 0 and play_sound = 1
                                                    {
                                                        audio_stop_sound(character_parry)
                                                        audio_play_sound(character_parry,50,false)
                                                    }
                                                if power_level = 1
                                                    {
                                                        audio_stop_sound(spade_dual_crash)
                                                        audio_play_sound(spade_dual_crash,50,false)
                                                    }
                                            }
                                    }
                            }
                        //Also check if we're outside of the range of the camera
                        if point_distance(x,y,o.universal_player_x,o.universal_player_y) &gt; 768
                            instance_destroy();
                        timer = 0
                    }
                //Bomb Cube
                var instance_ID = collision_point(x,y,obj_player_cube_alt,false,true);
                if instance_exists(instance_ID)
                    {
                        if instance_ID.cube_jiggle_timer = 0
                            {
                                instance_ID.cube_jiggle_timer = 10
                                instance_ID.cube_health += 0.50
                            }
                    }
                //Mega Items
                var instance_ID = collision_point(x,y,obj_mega_item_parent,false,true);
                if instance_exists(instance_ID)
                    {
                        collision = 1
                        timer = 0
                        if power_level = 1 and sfx = 0
                            {
                                sfx = 1
                                audio_stop_sound(spade_dual_crash)
                                audio_play_sound(spade_dual_crash,50,false)
                            }
                        instance_ID.attacked = 2
                    }
                //Destructibles
                var crate_ID = collision_point(x,y,obj_destructible,false,true);
                if instance_exists(crate_ID)
                    {
                        var yes = 1;
                        if crate_ID.object_index = obj_crystal_gem_float
                            {
                                if crate_ID.destroyed = -1
                                    yes = 0;
                            }
                        if yes = 1
                            {
                                collision = 1
                                timer = 0
                                if power_level = 1 and sfx = 0
                                    {
                                        sfx = 1
                                        audio_stop_sound(spade_dual_crash)
                                        audio_play_sound(spade_dual_crash,50,false)
                                    }
                                crate_ID.attacked = 1
                            }
                    }
                //Attack other enemies within range of the boxing glove
                instance_ID = collision_point(x,y,obj_enemy_parent,false,true);
                if instance_exists(instance_ID)
                    {
                        if instance_ID.attacked = 0 and instance_ID.alpha &lt;= 0
                            {
                                collision = 1
                                timer = 0
                                if power_level = 0
                                    {
                                        if sfx = 0
                                            {
                                                sfx = 1
                                                audio_stop_sound(snd_enemy_hit)
                                                audio_play_sound(snd_enemy_hit,50,false);
                                            }
                                        //Boss Check; because bosses are so easy to hit with all
                                        //four cards, the cards' lingering damage must be greatly
                                        //reduced to prevent bosses from getting killed almost
                                        //instantly by Spade
                                        if scr_enemy_list_check_boss(instance_ID.object_index) = 1
                                            instance_ID.attacked_damage = 0.75;
                                        else
                                            instance_ID.attacked_damage = damage;
                                    }
                                if power_level = 1
                                    {
                                        if sfx = 0
                                            {
                                                sfx = 1
                                                audio_stop_sound(spade_dual_crash)
                                                audio_play_sound(spade_dual_crash,50,false);
                                            }
                                        instance_ID.attacked_damage = 1
                                        //Boss Check; because bosses are so easy to hit with all
                                        //four cards, the cards' boost gimmick must be disabled
                                        //to prevent bosses from getting killed almost instantly
                                        //by Spade
                                        if scr_enemy_list_check_boss(instance_ID.object_index) = 0
                                            o.cards += 0.5;
                                    }
                                instance_ID.attacked = 1
                            }
                    }
            }
        //Destroy card if we've collided with something
        if collision &gt; 0
            {
                if collision = 1
                    {
                        if power_level = 0
                            sprite_index = spr_attack_card_effect
                        if power_level = 1
                            {
                                sprite_index = spr_cube_pop_large
                                scr_set_screen_shake(4,3)
                            }
                        speed = 0
                        collision = 2
                    }

                var timer_level_1 = 6;
                var timer_level_2 = 8;
                var timer_level_3 = 15;
                if o.user_freeze_frames = 0
                    {
                        timer_level_1 = 10
                        timer_level_2 = 14
                        timer_level_3 = 20
                    }

                if timer &gt; timer_level_3
                    instance_destroy();

                if (power_level = 0 and timer &lt; timer_level_1)
                or (power_level = 1 and timer &lt; timer_level_2)
                    {
                        //Bomb Cube
                        var instance_ID = collision_point(x,y,obj_player_cube_alt,false,true);
                        if instance_exists(instance_ID)
                            {
                                if instance_ID.cube_jiggle_timer = 0
                                    {
                                        instance_ID.cube_jiggle_timer = 10
                                        instance_ID.cube_health += 0.50
                                    }
                            }
                        //Mega Items
                        var instance_ID = collision_point(x,y,obj_mega_item_parent,false,true);
                        if instance_exists(instance_ID)
                            {
                                collision = 1
                                if power_level = 1 and sfx = 0
                                    {
                                        sfx = 1
                                        audio_stop_sound(spade_dual_crash)
                                        audio_play_sound(spade_dual_crash,50,false);
                                    }
                                instance_ID.attacked = 2
                            }
                        if room != rm_editor
                            {
                                var crate_ID = collision_point(x,y,obj_destructible,false,true);
                                if instance_exists(crate_ID)
                                    {
                                        collision = 1
                                        if power_level = 1 and sfx = 0
                                            {
                                                sfx = 0
                                                audio_stop_sound(spade_dual_crash)
                                                audio_play_sound(spade_dual_crash,50,false)
                                            }
                                        crate_ID.attacked = 1
                                        //Do not attack the bouncer's parry box
                                        if crate_ID.object_index = obj_bouncer_parry_box
                                            crate_ID.attacked = 0;
                                    }
                            }
                        //Attack other enemies within range of the boxing glove
                        instance_ID = collision_point(x,y,obj_enemy_parent,false,true);
                        if instance_exists(instance_ID)
                            {
                                if instance_ID.attacked = 0 and instance_ID.alpha &lt;= 0
                                    {
                                        collision = 1
                                        if power_level = 0
                                            {
                                                if sfx = 0
                                                    {
                                                        sfx = 1
                                                        audio_stop_sound(snd_enemy_hit)
                                                        audio_play_sound(snd_enemy_hit,50,false)
                                                    }
                                                //Boss Check; because bosses are so easy to hit with all
                                                //four cards, the cards' lingering damage must be greatly
                                                //reduced to prevent bosses from getting killed almost
                                                //instantly by Spade
                                                if scr_enemy_list_check_boss(instance_ID.object_index) = 1
                                                    instance_ID.attacked_damage = 0.75;
                                                else
                                                    instance_ID.attacked_damage = 2;
                                            }
                                        if power_level = 1
                                            {
                                                if sfx = 0
                                                    {
                                                        sfx = 1
                                                        audio_stop_sound(spade_dual_crash)
                                                        audio_play_sound(spade_dual_crash,50,false)
                                                    }
                                                instance_ID.attacked_damage = 4
                                            }
                                        instance_ID.attacked = 1
                                    }
                            }
                    }
            }
    }
else
    {
        speed = 0
        image_speed = 0
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if power_level = 0
    draw_sprite(sprite_index,image_index,x,y);
if power_level = 1
    draw_sprite_ext(sprite_index,image_index,x,y,1,1,direction,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
