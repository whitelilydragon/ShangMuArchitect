<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pushup</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_dropper</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited();
scr_enemy_hp(16)
hp_offset = -sprite_height-16
flash_palette = spr_pushup_palette
death_frame = 9
sound = 0                           //Enemy Sound Effect
dropped_goodies = obj_gold_gem
//State Behavior
frame = 2
timer = 0
bullet_count = 0
//Bullet
bullet_x = 0
bullet_y = 0
bullet_frame = 0
bullet_timer = 0
bullet_frame = 0
bullet_speed = 0
bullet_active = 0
bullet_scanner_timer = 0

//Bullet Particles
bullet_x[0] = 0
bullet_y[0] = 0
bullet_x_move[0] = 0
bullet_y_move[0] = 0
bullet_frame[0] = 0
bullet_state[0] = 0
bullet_angle[0] = 0
bullet_sprite[0] = spr_pushup_bullet

bullet_x[1] = 0
bullet_y[1] = 0
bullet_x_move[1] = 0
bullet_y_move[1] = 0
bullet_frame[1] = 0
bullet_state[1] = 0
bullet_angle[1] = 0
bullet_sprite[1] = spr_pushup_bullet

bullet_x[2] = 0
bullet_y[2] = 0
bullet_x_move[2] = 0
bullet_y_move[2] = 0
bullet_frame[2] = 0
bullet_state[2] = 0
bullet_angle[2] = 0
bullet_sprite[2] = spr_pushup_bullet

//Bullet Explosion
var diamond_count = 0;
diamond_state = 0
diamond_timer = 0
diamond_height = 0
diamond_counter = 0
diamond_hitbox = 0
while(diamond_count &lt;= 13)
    {
        diamond_x[diamond_count] = x
        diamond_y[diamond_count] = y
        diamond_frame[diamond_count] = 2
        diamond_speed[diamond_count] = 0
        diamond_visible[diamond_count] = 0
        diamond_count += 1
    }

//Editor Mode Variables
width_x = sprite_width/2
height_y = sprite_height/2

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited();

if o.pause = 0 and freeze = 0
    {
        if death = 0
            {
                switch(state)
                    {
                        //Idle
                        case 0:
                            {
                                //Iterate Attack State
                                being += 1;
                                if item = spr_mod_chip_speed or o.user_enemy_level &gt;= 2
                                    being += 3;
                                if being &gt;= 60
                                    {
                                        frame += 0.35
                                        if frame &gt;= 8.8
                                            {
                                                state = 1
                                                being = 0
                                                frame = 8
                                                bullet_count = 0
                                            }
                                    }
                                //Reset Timer If Outside The Camera
                                if o.user_enemy_level &lt;= 1
                                    {
                                        if (x &lt; view_xview[view_port] or x &gt; view_xview[view_port]+view_wview[view_port])
                                        or (y &lt; view_yview[view_port] or y &gt; view_yview[view_port]+(view_hview[view_port]))
                                            being = 0;
                                    }
                                break;
                            }
                        //Rise Up
                        case 1:
                            {
                                //Iterate Attack State
                                being += 1;
                                if item = spr_mod_chip_speed or o.user_enemy_level &gt;= 2
                                    being += 3;
                                if being &gt;= 60
                                    {
                                        frame += 0.35
                                        if frame &gt; 8.8
                                            {
                                                frame = 6

                                                bullet_frame[bullet_count] = 1
                                                bullet_speed = -5
                                                if o.user_enemy_level &gt;= 2
                                                    bullet_speed = -10;
                                                bullet_y[bullet_count] = y-76
                                                if enemy_growth != 0
                                                    {
                                                        bullet_y[bullet_cycle] = y-152
                                                    }                                                

                                                bullet_state[bullet_count] = 1
                                                bullet_count += 1
                                                if bullet_count &gt; 2
                                                    {
                                                        state = 2
                                                        being = 0
                                                        frame = 8
                                                        bullet_count = 0
                                                    }
                                                if play_sound = 1 audio_play_sound(snd_pushup,50,false);
                                            }
                                    }
                                break;
                            }
                        //Lower Down
                        case 2:
                            {
                                being += 1;
                                if item = spr_mod_chip_speed or o.user_enemy_level &gt;= 2
                                    being += 3;
                                if being &gt;= 60
                                    {
                                        frame -= 0.35
                                        if frame &lt;= 2.2
                                            {
                                                frame = 3
                                                being = 0
                                                state = 3
                                            }
                                    }
                                break;
                            }
                        //Crouching Shoot
                        case 3:
                            {
                                //Iterate Attack State
                                being += 1;
                                if item = spr_mod_chip_speed being += 3;
                                if being &gt;= 60
                                    {
                                        frame -= 0.35
                                        if frame &lt; -0.8
                                            {
                                                frame = 2

                                                bullet_frame[bullet_count] = 0
                                                bullet_speed = 5
                                                if o.user_enemy_level &gt;= 2
                                                    bullet_speed = 10;
                                                bullet_y[bullet_count] = y-12

                                                if enemy_growth != 0
                                                    {
                                                        bullet_y[bullet_cycle] = y-24
                                                    }

                                                bullet_state[bullet_count] = 1
                                                bullet_count += 1
                                                if bullet_count &gt; 2
                                                    {
                                                        state = 0
                                                        being = 0
                                                        bullet_count = 0
                                                    }
                                                if play_sound = 1 audio_play_sound(snd_pushup,50,false);
                                            }
                                    }
                                break;
                            }
                    }
            }
        //Bullets
        var bullet_cycle = 0;

        //Duplicate Bullet Behavior Across Three Separate Bullets
        while(bullet_cycle &lt;= 2)
            {
                if bullet_state[bullet_cycle] &gt; 0
                    {
                        //Spawn Phase
                        if bullet_state[bullet_cycle] = 1
                            {
                                bullet_state[bullet_cycle] = 2
                                bullet_x[bullet_cycle] = x
                            }
                        //Movement Phase
                        if bullet_state[bullet_cycle] = 2
                            {
                                bullet_y[bullet_cycle] += bullet_speed

                                var bullet_dir = -14;
                                if bullet_speed &lt; 0 bullet_dir = 14;

                                var enemy_surface_id = tile_layer_find(surface_flats,bullet_x[bullet_cycle],bullet_y[bullet_cycle]);

                                if (tile_exists(enemy_surface_id)
                                //If we have collided with the boundaries of the room, explode
                                or bullet_x_move[bullet_cycle] &lt; 0 or bullet_x_move[bullet_cycle] &gt; room_width
                                or bullet_y_move[bullet_cycle] &gt; room_height)
                                    {
                                        bullet_state[bullet_cycle] = 0
                                        bullet_x[bullet_cycle] = -64
                                        diamond_state = 1
                                        diamond_timer = 0
                                        diamond_height = bullet_y[bullet_count]+bullet_dir
                                        if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                                    }
                                if (o.hurt[0] = 0
                                and o.hurt[1] = 0
                                and o.shield_invuln = 32
                                and point_distance(bullet_x[bullet_cycle],bullet_y[bullet_cycle],o.universal_player_x,o.universal_player_y) &lt; 32)
                                    {
                                        bullet_state[bullet_cycle] = 0
                                        bullet_x[bullet_cycle] = -64
                                        diamond_state = 1
                                        diamond_timer = 0
                                        diamond_height = bullet_y[bullet_count]+bullet_dir
                                        scr_enemy_deal_damage(0.4,1,2);
                                        if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                                    }
                                if (o.milla_special_attack &gt; 0 and o.milla_special_attack &lt;= 2)
                                    {
                                        if point_distance(bullet_x[bullet_cycle],bullet_y[bullet_cycle],o.milla_special_length_x2,o.milla_special_length_y2) &lt; 32*o.milla_special_attack
                                            {
                                                bullet_state[bullet_cycle] = 0
                                                bullet_x[bullet_cycle] = -64
                                                diamond_state = 1
                                                diamond_timer = 0
                                                diamond_height = bullet_y[bullet_count]+bullet_dir
                                                if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                                            }
                                    }
                                //Bomb Cube
                                var instance_ID = collision_circle(bullet_x[bullet_cycle],bullet_y[bullet_cycle],32,obj_player_cube_alt,false,true);
                                if instance_exists(instance_ID)
                                    {
                                        if instance_ID.cube_jiggle_timer = 0
                                            {
                                                instance_ID.cube_jiggle_timer = 10
                                                instance_ID.cube_health += 0.50
                                            }
                                    }
                                if obj_game_logic.user_enemy_level &lt; 2
                                    {
                                        //Mega Items
                                        var instance_ID = collision_circle(bullet_x[bullet_cycle],bullet_y[bullet_cycle],32,obj_mega_item_parent,false,true);
                                        if instance_exists(instance_ID)
                                            {
                                                instance_ID.attacked = 2
                                            }
                                        //Items
                                        var instance_ID = collision_circle(bullet_x[bullet_cycle],bullet_y[bullet_cycle],32,obj_destructible,false,true);
                                        if instance_exists(instance_ID)
                                            {
                                                instance_ID.attacked = 1
                                            }
                                        //Attack other enemies within range of the boxing glove
                                        instance_ID = collision_circle(bullet_x[bullet_cycle],bullet_y[bullet_cycle],32,obj_enemy_parent,false,true);
                                        if instance_exists(instance_ID)
                                            {
                                                if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                                    {
                                                        instance_ID.attacked = 1
                                                        instance_ID.attacked_damage = 2
                                                    }
                                            }
                                    }
                            }
                    }
                bullet_cycle += 1    
            }
        if diamond_state = 1
            {
                if diamond_timer = 0
                    {
                        var diamond_count = 0;
                        while(diamond_count &lt;= 12)
                            {
                                diamond_x[diamond_count] = -64
                                diamond_y[diamond_count] = -64
                                diamond_frame[diamond_count] = 2
                                diamond_speed[diamond_count] = 0
                                diamond_visible[diamond_count] = 0
                                diamond_count += 1
                            }
                    }

                diamond_timer += 1
                diamond_hitbox += 2

                if diamond_timer = 2 or diamond_timer = 8
                or diamond_timer = 16 or diamond_timer = 24
                or diamond_timer = 32 or diamond_timer = 40
                    {
                        diamond_x[diamond_counter] = x
                        diamond_frame[diamond_counter] = 2
                        diamond_speed[diamond_counter] = -2 //Assume Left
                        diamond_visible[diamond_counter] = 1

                        diamond_x[diamond_counter+6] = x
                        diamond_frame[diamond_counter+6] = 2
                        diamond_speed[diamond_counter+6] = 2 //Assume Right
                        diamond_visible[diamond_counter+6] = 1

                        diamond_counter += 1
                    }

                //Logic for particles
                var diamond_count = 0;
                while(diamond_count &lt;= 13)
                    {
                        diamond_x[diamond_count] += diamond_speed[diamond_count]
                        diamond_frame[diamond_count] += 0.25
                        if diamond_frame[diamond_count] &gt; 5.8
                            diamond_frame[diamond_count] = 2;

                        diamond_count += 1
                    }
                if diamond_timer &gt; 48
                    {
                        diamond_state = 0
                        diamond_counter = 0
                        diamond_height = 0
                        diamond_hitbox = 0

                        diamond_y[0] = -64
                        diamond_y[1] = -64
                        diamond_y[2] = -64
                        diamond_y[3] = -64
                        diamond_y[4] = -64
                        diamond_y[5] = -64
                        diamond_y[6] = -64
                        diamond_y[7] = -64
                        diamond_y[8] = -64
                        diamond_y[9] = -64
                        diamond_y[10] = -64
                        diamond_y[11] = -64
                        diamond_y[12] = -64
                        diamond_y[13] = -64
                        diamond_visible[0] = 0
                        diamond_visible[1] = 0
                        diamond_visible[2] = 0
                        diamond_visible[3] = 0
                        diamond_visible[4] = 0
                        diamond_visible[5] = 0
                        diamond_visible[6] = 0
                        diamond_visible[7] = 0
                        diamond_visible[8] = 0
                        diamond_visible[9] = 0
                        diamond_visible[10] = 0
                        diamond_visible[11] = 0
                        diamond_visible[12] = 0
                        diamond_visible[13] = 0
                    }
                if (o.hurt[0] = 0
                and o.hurt[1] = 0
                and o.shield_invuln = 32 
                and point_in_rectangle(o.universal_player_x,o.universal_player_y,x-diamond_hitbox,diamond_height-16,x+diamond_hitbox,diamond_height+16))
                    {
                        scr_enemy_deal_damage(0.4,1,2);
                        if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprites and Bullet
event_inherited()
//Draw Bullet
var bullet_count = 0;
    while(bullet_count &lt;= 2)
        {
            draw_sprite_ext(spr_pushup_bullet,bullet_frame[bullet_count],
            bullet_x[bullet_count],bullet_y[bullet_count],1,1,bullet_angle[bullet_count],c_white,1)
            bullet_count += 1
        }

var diamond_count = 0;
    while(diamond_count &lt;= 12)
        {
            if diamond_visible[diamond_count] = 1
                {
                    draw_sprite(spr_pushup_bullet,diamond_frame[diamond_count],diamond_x[diamond_count],diamond_height)
                }
            diamond_count += 1
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
