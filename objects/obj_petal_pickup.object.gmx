<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_petal_flower</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_petal</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()

spawned_by_smart_pool = 0

//Movement Positions
start_x = x
start_y = y

if y &gt; obj_game_logic.water_height
    depth = -5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animations

//Pause Safety Check
if obj_game_logic.pause = 0

{

//      Static Particle System      //
//----------------------------------//

//If we are a heart particle, produce a particle effect before disappearing
if (is_collected = 0)
    {
        if (y&gt;=view_yview[view_port]+40)
            {
                //Play Sound
                if is_sound = 0 {audio_play_sound(petal_grab,50,false) is_sound=1}
                //Point us towards the top-left corner of the screen
                direction = point_direction(x,y,view_xview[view_port],view_yview[view_port])
                //Move towards the top-left corner of the screen
                speed = 16
            }
        //Once we have reached the HUD, give the player a health petal and create a heart particle
        if (y&lt;view_yview[view_port]+40 or obj_game_logic.petals &lt;= 2)
            {
                //Give the player a health petal.
                if obj_game_logic.petals &lt; 0 petals = 0;
                var petal_value = 1;
                if obj_game_logic.user_enemy_level = 0
                    petal_value = 2;
                obj_game_logic.petals += petal_value
                if obj_game_logic.petals &gt; obj_game_logic.petalsmax
                    obj_game_logic.petals = obj_game_logic.petalsmax;
                obj_game_logic.petals = ceil(obj_game_logic.petals)
                obj_game_logic.accident_forgiveness = 1
                //(Or a gem, if the player's health is already at maximum.)
                if obj_game_logic.petals &gt;= obj_game_logic.petalsmax
                    {
                        var yes = 1;
                            yes = scr_get_restart_map_exceptions_list();
                        if (yes = 1 or room != rm_campaign)
                            {
                                obj_game_logic.gems -= 1
                                obj_game_logic.player_best_crystals_count += 1
                                obj_game_logic.player_gems[obj_game_logic.player_current] += 1
                                obj_game_logic.hud_gem_value += 1
                                //Add Energy to the Stamina Bar
                                if obj_game_logic.stamina &lt; 100
                                    {
                                        obj_game_logic.stamina += 5
                                        obj_game_logic.milla_flutter_stamina_bar += 4.3333333333333333333333333333334
                                        //Cull Stamina Bar if Added Energy is Too Much
                                        //if obj_game_logic.stamina &gt; 100 obj_game_logic.stamina = 100;
                                        obj_game_logic.stamina_boosted = 0
                                    }
                                //Stamina Bar Flash
                                obj_game_logic.stamina_gem = 0
                                obj_game_logic.stamina_gem_con = 1
                                //Trigger Drawing of Gem Particles
                                if obj_game_logic.performance_profile = 1 obj_game_logic.gem_particle_trigger = 1;
                                //Trigger Drawing of Certain Gem Particles Based On Offset
                                switch(obj_game_logic.gem_plus_pos)
                                    {
                                        //Particle 1
                                        case 0:
                                            {
                                                obj_game_logic.gem_particle_alpha_0 = 1
                                                obj_game_logic.gem_waiting_0        = 0
                                                obj_game_logic.gem_ispeed_0         = 0
                                                obj_game_logic.gem_particle_frame_0 = 0
                                                obj_game_logic.gem_particle_trig_0  = 1
                                                break;
                                            }
                                        //Particle 2
                                        case 1:
                                            {
                                                obj_game_logic.gem_particle_alpha_1 = 1
                                                obj_game_logic.gem_waiting_1        = 0
                                                obj_game_logic.gem_ispeed_1         = 0
                                                obj_game_logic.gem_particle_frame_1 = 0
                                                obj_game_logic.gem_particle_trig_1  = 1
                                                break;
                                            }
                                        //Particle 3
                                        case 2:
                                            {
                                                obj_game_logic.gem_particle_alpha_2 = 1
                                                obj_game_logic.gem_waiting_2        = 0
                                                obj_game_logic.gem_ispeed_2         = 0
                                                obj_game_logic.gem_particle_frame_2 = 0
                                                obj_game_logic.gem_particle_trig_2  = 1
                                                break;
                                            }
                                        //Particle 4
                                        case 3:
                                            {
                                                obj_game_logic.gem_particle_alpha_3 = 1
                                                obj_game_logic.gem_waiting_3        = 0
                                                obj_game_logic.gem_ispeed_3         = 0
                                                obj_game_logic.gem_particle_frame_3 = 0
                                                obj_game_logic.gem_particle_trig_3  = 1
                                                break;
                                            }
                                        //Particle 5
                                        case 4:
                                            {
                                                obj_game_logic.gem_particle_alpha_4 = 1
                                                obj_game_logic.gem_waiting_4        = 0
                                                obj_game_logic.gem_ispeed_4         = 0
                                                obj_game_logic.gem_particle_frame_4 = 0
                                                obj_game_logic.gem_particle_trig_4  = 1
                                                break;
                                            }
                                        //Particle 6
                                        case 5:
                                            {
                                                obj_game_logic.gem_particle_alpha_5 = 1
                                                obj_game_logic.gem_waiting_5        = 0
                                                obj_game_logic.gem_ispeed_5         = 0
                                                obj_game_logic.gem_particle_frame_5 = 0
                                                obj_game_logic.gem_particle_trig_5  = 1
                                                break;
                                            }
                                        //Particle 7
                                        case 6:
                                            {
                                                obj_game_logic.gem_particle_alpha_6 = 1
                                                obj_game_logic.gem_waiting_6        = 0
                                                obj_game_logic.gem_ispeed_6         = 0
                                                obj_game_logic.gem_particle_frame_6 = 0
                                                obj_game_logic.gem_particle_trig_6  = 1
                                                break;
                                            }
                                        //Particle 8
                                        case 7:
                                            {
                                                obj_game_logic.gem_particle_alpha_7 = 1
                                                obj_game_logic.gem_waiting_7        = 0
                                                obj_game_logic.gem_ispeed_7         = 0
                                                obj_game_logic.gem_particle_frame_7 = 0
                                                obj_game_logic.gem_particle_trig_7  = 1
                                                break;
                                            }
                                        //Particle 9
                                        case 8:
                                            {
                                                obj_game_logic.gem_particle_alpha_8 = 1
                                                obj_game_logic.gem_waiting_8        = 0
                                                obj_game_logic.gem_ispeed_8         = 0
                                                obj_game_logic.gem_particle_frame_8 = 0
                                                obj_game_logic.gem_particle_trig_8  = 1
                                                break;
                                            }
                                        //Particle 10
                                        case 9:
                                            {
                                                obj_game_logic.gem_particle_alpha_9 = 1
                                                obj_game_logic.gem_waiting_9        = 0
                                                obj_game_logic.gem_ispeed_9         = 0
                                                obj_game_logic.gem_particle_frame_9 = 0
                                                obj_game_logic.gem_particle_trig_9  = 1
                                                break;
                                            }
                                        //Particle 11
                                        case 10:
                                            {
                                                obj_game_logic.gem_particle_alpha_10 = 1
                                                obj_game_logic.gem_waiting_10        = 0
                                                obj_game_logic.gem_ispeed_10         = 0
                                                obj_game_logic.gem_particle_frame_10 = 0
                                                obj_game_logic.gem_particle_trig_10  = 1
                                                break;
                                            }
                                        //Particle 12
                                        case 11:
                                            {
                                                obj_game_logic.gem_particle_alpha_11 = 1
                                                obj_game_logic.gem_waiting_11        = 0
                                                obj_game_logic.gem_ispeed_11         = 0
                                                obj_game_logic.gem_particle_frame_11 = 0
                                                obj_game_logic.gem_particle_trig_11  = 1
                                                break;
                                            }
                                        //Particle 13
                                        case 12:
                                            {
                                                obj_game_logic.gem_particle_alpha_12 = 1
                                                obj_game_logic.gem_waiting_12        = 0
                                                obj_game_logic.gem_ispeed_12         = 0
                                                obj_game_logic.gem_particle_frame_12 = 0
                                                obj_game_logic.gem_particle_trig_12  = 1
                                                break;
                                            }
                                        //Particle 14
                                        case 13:
                                            {
                                                obj_game_logic.gem_particle_alpha_13 = 1
                                                obj_game_logic.gem_waiting_13        = 0
                                                obj_game_logic.gem_ispeed_13         = 0
                                                obj_game_logic.gem_particle_frame_13 = 0
                                                obj_game_logic.gem_particle_trig_13  = 1
                                                break;
                                            }
                                    }
                                //Update gem particle offset for the next gem particle
                                obj_game_logic.gem_plus_pos += 1
                                //If the gem particle offset is too high, reset its value
                                if obj_game_logic.gem_plus_pos &gt; 13 {obj_game_logic.gem_plus_pos = 0;}
                                //obj_particle_gems = instance_create(x,y,obj_gem_particle)
                                //obj_particle_gems.x = view_xview[view_port]+13
                                //obj_particle_gems.y = view_yview[view_port]+53
                                //Reset Gem Counter (And Spawn 1up Faerie) If It's Below 0
                                scr_gem_reset_counter()
                            }
                    }
                //Play Sound
                audio_play_sound(petal_absorbed,50,false)
                //Create Heart Particle 1
                heart_visible_0 = 1
                heart_offset[0] = abs(view_xview[view_port]-x) + random_range(-16,16)
                heart_offset[1] = abs(view_yview[view_port]-y) + random_range(-16,16)
                //Create Heart Particle 2
                heart_offset[2] = abs(view_xview[view_port]-x) + random_range(-16,16)
                heart_offset[3] = abs(view_yview[view_port]-y) + random_range(-16,16)
                //Set Our Depth To Be Above The Logic Object's Priority
                depth = -7
                //Set Our Visibility To 0
                gem_visible = 0
                //Set Our Speed To 0
                speed = 0
                //Keep Ourselves Clipped Within Object Activation Range During
                //Heart Particle Animations
                x = view_xview[view_port]
                y = view_yview[view_port]
                //Initialize New Collection State
                //Refer to Hearts Logic Code Below For Secondary Phase Of Heart Particle Logic
                is_collected = 1
            }
    } //End of Collected Safety Check

//Produce a particle effect before disappearing
if is_collected = 1
    {
        //Keep Ourselves Clipped Within Object Activation Range During
        //Heart Particle Animations
        x = view_xview[view_port]
        y = view_yview[view_port]
        //Sway heart particle side-by-side
        heart_x_0 = heart_offset[0]+heart_speed_0
        heart_y_0 = heart_offset[1]-heart_speed_alt_0
        //Sway heart particle side-by-side
        heart_x_1 = heart_offset[2]+heart_speed_1
        heart_y_1 = heart_offset[3]-heart_speed_alt_1
        heart_timer_0+=0.5
        //Phase 1: Sway
        if (heart_timer_0 &lt; 12)
            {
                //Heart 1
                heart_frame_0=0;
                heart_speed_0+=1;
                heart_speed_alt_0+=1
                //Heart 2
                heart_speed_1-=1
                heart_speed_alt_1+=1
            }
        //Phase 2: Sway In The Opposite Direction
        if (heart_timer_0 &gt;= 12 and heart_timer_0&lt;=15)
            {
                //Heart 1
                heart_frame_0=0;
                heart_speed_0-=1;
                heart_speed_alt_0+=1
                //Heart 2
                heart_speed_1+=1
                heart_speed_alt_1+=1
            }
        //Phase 3: Playback Animations
        if (heart_timer_0 &gt; 15) heart_frame_0+=0.24;

        //Destroy self once heart frame animations have completed
        if (heart_frame_0 &gt;= 3 or obj_game_logic.performance_profile = 0)
            instance_destroy();
    }
} //End of Pause Safety Check

else
    {
        //Freeze Movement Speed If We Are Paused
        move_towards_point(x,y,0)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
