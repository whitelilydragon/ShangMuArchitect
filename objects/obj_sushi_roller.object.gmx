<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sushi_roller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_dropper</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
scr_enemy_hp(9)
hp_offset = -60
flash_palette = spr_sushi_roller_palette
death_frame = 4
turn  = 0                           //Sprite Turning
xdir_previous = 0                   //Previous Facing Direction
tile_scanner_timer = 0
water_ID = noone
dropped_goodies = obj_gold_gem
can_draw_healthbar = 1
//Editor Mode Variables
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2

spring_particle_frame = 0
spring_triggered = 0
spring_speed = 10.7
spring_timer = obj_game_logic.spring_timer_blue
spring_rotated = 90
spring_left = -24
spring_top = -40
spring_right = 24
spring_bottom = -16
spring_offset_x = 0
spring_offset_y = -24
spring_sound_id = 0
player_axis_x = 0
player_apply_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()
if o.pause = 0 and freeze = 0
    {
        if death &gt; 0 and sprite_index = spr_sushi_roller
            {
                sprite_index = spr_sushi_roller_death
            }

        //Reduce Turning If It Is Applied
        if turn &gt; 0 turn -= 0.2;

        //Check If Our Direction Has Changed, And Turn Around, Before Copying What Our Current Direction Is
        if xdir_previous!=xdir turn = 5;
        //Copy Current Direction
        xdir_previous = xdir

        //Animation Loops
        if state = 0 and death = 0
            {
                //Iterate Animations
                if spring_particle_frame = 0
                    {
                        if frame &gt; 3.5 frame = 0; frame += 0.45;
                    }
                else
                    {
                        if frame &lt; 4 frame = 4;
                        frame += 0.45;
                        if frame &gt; 5 frame = 5;
                    }
                //Enemy Movement
                var var_speed = 1;
                if item = spr_mod_chip_speed var_speed = 2;
                if scale = 1 x += var_speed*xdir;

                //Sideways Collisions
                tile_scanner_timer += 1
                if tile_scanner_timer &gt;= 5
                    {
                        if xdir = 1
                            {
                                if tile_layer_find(surface_flats,x+36,y-18) or x &gt; room_width -32 xdir = -1;
                            }
                        else
                            {
                                if tile_layer_find(surface_flats,x-36,y-18) or x &lt; 32 xdir = 1;
                            }
                        //Directional Switching Tiles
                        var tile_flag = tile_layer_find(surface_flags,x+(4*xdir),y-18);
                        var turn_on_tile = 0;
                        if tile_exists(tile_flag)
                            {
                                var tile_flag_bg = tile_get_background(tile_flag);
                                if tile_flag_bg = tile_layer_changer
                                    {
                                        if xdir = 1  and turn_on_tile = 0 {xdir = -1; x -= 4; turn_on_tile = 1;}
                                        if xdir = -1 and turn_on_tile = 0 {xdir =  1; x += 4; turn_on_tile = 1;}
                                    }
                            }
                        tile_scanner_timer = 0
                    }
                //Floor Collisions
                var floor_left   = tile_layer_find(surface_flats,x-36,y+2)
                var floor_right  = tile_layer_find(surface_flats,x+36,y+2)
                var floor_center = tile_layer_find(surface_flats,x,y+2)

                //---Turning System---//

                //Turn Around If There Are No Floors Ahead
                if gravity_slope = 0
                    {
                        if tile_exists(floor_left) and tile_exists(floor_center) and !tile_exists(floor_right) xdir=-1;
                        if !tile_exists(floor_left) and tile_exists(floor_center) and tile_exists(floor_right) xdir=1;
                    }
                //Clip To Slope
                if gravity_slope = 1
                    {
                        //Edge Detection For Slopes
                        var tile_check_id = tile_layer_find(surface_slopes,x+(16*xdir),y);
                        var tile_already_turned = 0;
                        if (tile_check_id = -1 and xdir = 1 and tile_already_turned = 0 and floor_right = -1) {xdir = -1; tile_already_turned = 1;}
                        if (tile_check_id = -1 and xdir = -1 and tile_already_turned = 0 and floor_left = -1) {xdir = 1; tile_already_turned = 1;}
                    }
            }
    } //End of pause check
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
