<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logic_processor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_interact_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>o = obj_game_logic
p = obj_level_editor
sheet = 0
state = 0
    frame = 0
    item = 0
    give_item = 0
    joy_press = 0
    joy_flash = 0
    prompt_flash = 0
    runaway_npc_prompt = 0
    cutscene_frame = spr_npc_ui_talk
npc_emotion_range = 4
npc_emotion_index = 0
npc_emotion_selected = sprite_index
npc_frame = 0
npc_interact_minimized = 0
npc_interact_timer = 0
    npc_emotion_idle  = 0
    npc_emotion_happy = 1
    npc_emotion_angry = 2
    npc_emotion_sad   = 3
    npc_emotion_sus   = 4
    npc_emotion_omg   = 5
    npc_emotion_mad   = 6
    npc_emotion_lmao   = 7
    npc_emotion_scared = 8
    npc_emotion_dancing = 9
npc_emotion_label_idle   = "Idle"
npc_emotion_label_happy  = "Happy"
npc_emotion_label_angry  = "Angry"
npc_emotion_label_sad    = "Sad"
npc_emotion_label_sus    = "Suspicious"
npc_emotion_label_omg    = "Surprise"
npc_emotion_label_mad    = "Upset"
npc_emotion_label_lmao   = "Laughing"
npc_emotion_label_scared = "Scared"
npc_emotion_label_dancing = "Dancing"
npc_name = "Test"
npc_count = 0
npc_speed = 0.15
npc_ignore = 0
npc_offset = 50
    npc_page = 0
    npc_interface_focus = 0
    npc_interface_keyboard_focus = 0
    npc_interface_blinking_cursor = 0
    npc_interface_switch_direction = 0    
    npc_interface_switch_control_type = 0
npc_dance_frame_start = 223
npc_dance_frame_end = 236
npc_dance_frame_speed = 0.22
npc_direction = 1
    npc_follow = 0
//Generic story mode trigger so NPCs can execute their own code, where needed
npc_story_trigger = 0
//Default controller strings
controller_type_left  = o.key_left_s
controller_type_up    = o.key_up_s
controller_type_down  = o.key_down_s
controller_type_right = o.key_right_s
controller_type_a     = o.key_a_s
controller_type_b     = o.key_b_s
controller_type_c     = o.key_c_s
controller_type_d     = o.key_d_s
controller_type_start = o.key_start_s
//Defeult emotion, unless otherwise configured
sprite_index = npc_emotion_idle
npc_dialog_string_p1 = ""
npc_dialog_string_p2 = ""
npc_dialog_string = npc_dialog_string_p1
npc_dialog_iterate = 0
npc_dialog_sound = 0
npc_dialog_page = 0
npc_dialog_gender = 0
npc_dialog_emotion_p1 = 0
npc_dialog_emotion_p2 = 0
npc_talk_while_idle = 0
npc_shopkeeper_gui = 0
//Alt Character Text Strings
girls_dialog_string_p1 = ""
girls_dialog_string_p2 = ""
lilac_dialog_string_p1 = ""
lilac_dialog_string_p2 = ""
carol_dialog_string_p1 = ""
carol_dialog_string_p2 = ""
milla_dialog_string_p1 = ""
milla_dialog_string_p2 = ""
spade_dialog_string_p1 = ""
spade_dialog_string_p2 = ""
spade_dialog_timer = 0
if room != rm_editor
    alarm_set(0,1);
//Determine Who We Are Not For Story Mode
npc_normal_npc = 1
if object_index = obj_shop_milla
or object_index = obj_kiosk_npc
or object_index = obj_story_sign
or object_index = obj_story_dean
or object_index = obj_story_job_npc
or object_index = obj_story_shovel_knight
    npc_normal_npc = 0;
npc_talk_voice = snd_text_scrolling
if room = rm_editor and p.use_npc_startup_timer = 1
    {
        //Also check if we are too close to other NPCs
        var collision_check = collision_circle(x,y,32,obj_npc_parent,false,true);
        if collision_check != noone
            {
                scr_set_message("NPC instance placed too close to another!")
                instance_destroy();
            }
    }
//Localization Text
scr_lang_npc_editor();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change to alt text based on characters
if npc_normal_npc = 1
    scr_dialog_string_character();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.pause = 0
    {
        switch(npc_emotion_index)
            {
                case 0: {npc_emotion_selected = npc_emotion_idle;    break;}
                case 1: {npc_emotion_selected = npc_emotion_happy;   break;}
                case 2: {npc_emotion_selected = npc_emotion_angry;   break;}
                case 3: {npc_emotion_selected = npc_emotion_sad;     break;}
                case 4: {npc_emotion_selected = npc_emotion_sus;     break;}
                case 5: {npc_emotion_selected = npc_emotion_omg;     break;}
                case 6: {npc_emotion_selected = npc_emotion_mad;     break;}
                case 7: {npc_emotion_selected = npc_emotion_lmao;    break;}
                case 8: {npc_emotion_selected = npc_emotion_scared;  break;}
                case 9: {npc_emotion_selected = npc_emotion_dancing; break;}
            }
        //Input pressed check
        if (o.joy_input[1,0] = 1 or o.joy_input[1,3] = 1)
        and (o.user_cursor_mode = 0)
        
            {
                if (state = 1) npc_dialog_iterate += 0.6;
                joy_press += 1;
                if keyboard_check(vk_anykey) or mouse_check_button(mb_any)
                    npc_interface_switch_control_type = 0;
                //Check Controller's Action Buttons
                if gamepad_button_check(o.joy_modern_id,o.joy_a_mod) = 1
                or gamepad_button_check(o.joy_modern_id,o.joy_c_mod) = 1
                    npc_interface_switch_control_type = 1;
            }
        else
            joy_press = 0;
        if npc_follow = 1
            {
                if npc_direction = 0
                    npc_follow = 1;
                if o.px &gt; x
                    npc_direction = 1;
                if o.px &lt; x
                    npc_direction = -1;
            }
        //Clickable interface
        if (room = rm_editor and npc_normal_npc = 1)
            {
                if npc_interact_timer &gt; 0
                    npc_interact_timer -= 1;
                if sheet = 2
                    {
                        npc_dialog_gender = 0
                        npc_dialog_page = 0
                        npc_page = 0
                    }
                //Stop Talking If The Player Is Disabled
                if (o.user_cursor_mode = 1 and state &gt; 0)
                or (p.use_write_delay &gt; 0)
                    {
                        npc_dialog_string_p1 = girls_dialog_string_p1
                        npc_dialog_string_p2 = girls_dialog_string_p2
                        npc_dialog_string = npc_dialog_string_p1
                        npc_emotion_index = npc_dialog_emotion_p1
                        npc_dialog_iterate = 0
                        npc_dialog_gender = 0
                        npc_dialog_page = 0
                        joy_flash = 0
                        state = 0
                    }
                if o.user_cursor_mode = 0
                    {
                        spade_dialog_timer += 1
                        if spade_dialog_timer &gt;= 16
                            {
                                scr_editor_string_character()
                                spade_dialog_timer = 0
                            }
                    }
                if p.use_tile_menu != 0
                or p.side_bar_allow = 1
                    {
                        npc_dialog_gender = 0
                    }
                var text_anchor_x = x-64;
                var text_anchor_w = 156;
                var text_anchor_y = y-126-npc_offset;
                var text_box_height = 117;
                if npc_interact_minimized = 1
                    {
                        text_anchor_x = x-28
                        text_anchor_y = y-18-npc_offset
                        text_anchor_w = 48
                        text_box_height = 10
                    }
                //Display FOF Overlay If Hovered Over
                if (point_in_rectangle(p.use_cursor_x,p.use_cursor_y,text_anchor_x,text_anchor_y-6,text_anchor_x+text_anchor_w,text_anchor_y+text_box_height)
                and p.use_tile_menu = 0 and p.side_bar_allow = 0 and o.user_cursor_mode = 1)
                    npc_interface_focus = 1;
                if npc_interface_focus = 1 and npc_interact_minimized = 0
                and npc_interact_timer = 0
                    {
                        //Define rules for clicking inside of dialogue menu
                        if p.side_bar_allow = 0
                            p.use_float_window = 1;
                        if !point_in_rectangle(p.use_cursor_x,p.use_cursor_y,text_anchor_x,text_anchor_y-6,text_anchor_x+text_anchor_w,text_anchor_y+text_box_height)
                        or p.side_bar_allow = 1 or p.use_tile_menu != 0
                            {
                                npc_interface_focus = 0
                                p.use_float_window = 0
                                p.user_cursor_mode = 0
                                npc_interface_keyboard_focus = 0
                            }
                        if o.user_cursor_mode = 0
                            {
                                npc_interface_focus = 0
                                p.use_float_window = 0
                                p.user_cursor_mode = 0
                                npc_interface_keyboard_focus = 0
                            }
                        //Minimize NPC editor window
                        if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                        and p.use_cursor_y &gt;= text_anchor_y-6 and p.use_cursor_y &lt;= text_anchor_y+6
                        and p.use_cursor_x &gt;= text_anchor_x+136
                            {
                                npc_interact_timer = 8
                                npc_interact_minimized = 1
                                p.use_float_window = 0
                                audio_play_sound(pause_select,50,false)
                            }
                        if npc_interact_timer = 0
                            {
                                //Change facing direction
                                if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                                and p.use_cursor_y &lt;= text_anchor_y+16
                                    {
                                        if sheet != 2
                                            {
                                                npc_interface_switch_direction += 1
                                                if npc_interface_switch_direction &gt; 2
                                                    npc_interface_switch_direction = 0;
                                                switch(npc_interface_switch_direction)
                                                    {
                                                        case 0: {npc_direction = 1; npc_follow = 0; break;}
                                                        case 1: {npc_direction = -1; npc_follow = 0; break;}
                                                        case 2: {npc_direction = 0; npc_follow = 1; break;}
                                                    }
                                                npc_interface_keyboard_focus = 0
                                                p.user_cursor_mode = 0
                                                audio_play_sound(pause_select,50,false)
                                            }
                                        //if sheet = 2
                                        //    scr_set_message("Running NPCs have dynamic directions!");
                                    }
                                //Change emotional state
                                if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                                and p.use_cursor_y &gt;= text_anchor_y+18 and p.use_cursor_y &lt;= text_anchor_y+30
                                    {
                                        if sheet != 2
                                            {
                                                if npc_page = 0
                                                    {
                                                        npc_dialog_emotion_p1 += 1
                                                        if npc_dialog_emotion_p1 &gt; npc_emotion_range
                                                            npc_dialog_emotion_p1 = 0;
                
                                                        npc_emotion_index = npc_dialog_emotion_p1
                                                    }
                                                if npc_page = 1
                                                    {
                                                        npc_dialog_emotion_p2 += 1
                                                        if npc_dialog_emotion_p2 &gt; npc_emotion_range
                                                            npc_dialog_emotion_p2 = 0;
                
                                                        npc_emotion_index = npc_dialog_emotion_p2
                                                    }
                                                npc_interface_keyboard_focus = 0
                                                p.user_cursor_mode = 0
                                                audio_play_sound(pause_select,50,false)
                                            }
                                        //if sheet = 2
                                        //    scr_set_message("Emotions not supported for Running NPCs!");
                                    }
                                //Type in dialogue text
                                if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                                and p.use_cursor_y &gt;= text_anchor_y+32 and p.use_cursor_y &lt;= text_anchor_y+80
                                    {
                                        npc_interface_keyboard_focus += 1
                                        if npc_interface_keyboard_focus &gt; 1
                                            npc_interface_keyboard_focus = 0;
                                        keyboard_string = ""
                                        //All characters
                                        if npc_dialog_gender = 0
                                            {
                                                if npc_page = 0
                                                    npc_dialog_string_p1 = "";
                                                if npc_page = 1
                                                    npc_dialog_string_p2 = "";
                                            }
                                        //Lilac
                                        if npc_dialog_gender = 1
                                            {
                                                if npc_page = 0
                                                    lilac_dialog_string_p1 = "";
                                                if npc_page = 1
                                                    lilac_dialog_string_p2 = "";
                                            }
                                        //Carol
                                        if npc_dialog_gender = 2
                                            {
                                                if npc_page = 0
                                                    carol_dialog_string_p1 = "";
                                                if npc_page = 1
                                                    carol_dialog_string_p2 = "";
                                            }
                                        //Milla
                                        if npc_dialog_gender = 3
                                            {
                                                if npc_page = 0
                                                    milla_dialog_string_p1 = "";
                                                if npc_page = 1
                                                    milla_dialog_string_p2 = "";
                                            }
                                        //Spade
                                        if npc_dialog_gender = 4
                                            {
                                                if npc_page = 0
                                                    spade_dialog_string_p1 = "";
                                                if npc_page = 1
                                                    spade_dialog_string_p2 = "";
                                            }
                                        audio_play_sound(pause_select,50,false)
                                    }
                                if npc_interface_keyboard_focus = 1
                                    {
                                        p.user_cursor_mode = -1
                                        //Check against non-lettered characters
                                        if keyboard_check_pressed(vk_anykey)
                                            {
                                                var check_key = string_char_at(keyboard_string,string_length(keyboard_string));
                        
                                                if check_key = '"'
                                                    {
                                                        scr_set_message("Please use single quotation marks instead!")
                                                        keyboard_string = string_delete(keyboard_string,string_length(keyboard_string),1);
                                                    }
                                            }
                                        if string_length(keyboard_string) &gt; 96
                                            keyboard_string = string_copy(keyboard_string,1,96);
                                        if npc_page = 0
                                            {
                                                npc_dialog_string = string_copy(keyboard_string,1,96)
                                                draw_set_font(o.text_font_academy);
                                                //All characters (Or Running NPCs)
                                                if npc_dialog_gender = 0 or sheet = 2
                                                    {
                                                        npc_dialog_string_p1 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        girls_dialog_string_p1 = npc_dialog_string_p1;
                                                        scr_dialog_string_length(npc_dialog_string_p1)
                                                    }
                                                //Lilac
                                                if npc_dialog_gender = 1
                                                    {
                                                        lilac_dialog_string_p1 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(lilac_dialog_string_p1)
                                                    }
                                                //Carol
                                                if npc_dialog_gender = 2
                                                    {
                                                        carol_dialog_string_p1 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(carol_dialog_string_p1)
                                                    }
                                                //Milla
                                                if npc_dialog_gender = 3
                                                    {
                                                        milla_dialog_string_p1 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(milla_dialog_string_p1)
                                                    }
                                                //Spade
                                                if npc_dialog_gender = 4
                                                    {
                                                        spade_dialog_string_p1 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(spade_dialog_string_p1)
                                                    }
                                            }
                                        if npc_page = 1 or sheet = 2
                                            {
                                                draw_set_font(o.text_font_academy);
                                                //All characters
                                                if npc_dialog_gender = 0
                                                    {
                                                        npc_dialog_string_p2 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        girls_dialog_string_p2 = npc_dialog_string_p2;
                                                        scr_dialog_string_length(npc_dialog_string_p2)
                                                    }
                                                //Lilac
                                                if npc_dialog_gender = 1
                                                    {
                                                        lilac_dialog_string_p2 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(lilac_dialog_string_p2)
                                                    }
                                                //Carol
                                                if npc_dialog_gender = 2
                                                    {
                                                        carol_dialog_string_p2 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(carol_dialog_string_p2)
                                                    }
                                                //Milla
                                                if npc_dialog_gender = 3
                                                    {
                                                        milla_dialog_string_p2 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(milla_dialog_string_p2)
                                                    }
                                                //Spade
                                                if npc_dialog_gender = 4
                                                    {
                                                        spade_dialog_string_p2 = string_wordwrap_width(string_copy(keyboard_string,1,96),121,"#",true);
                                                        scr_dialog_string_length(spade_dialog_string_p2)
                                                    }
                                            }
                                    }
                                //Change character
                                if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                                and (p.use_cursor_y &gt;= text_anchor_y+82 and p.use_cursor_y &lt; text_anchor_y+92
                                and sheet != 2)
                                    {
                                        //All
                                        if p.use_cursor_x &gt;= text_anchor_x+5 and p.use_cursor_x &lt;= text_anchor_x+20
                                            {
                                                npc_page = 0
                                                npc_interface_keyboard_focus = 0
                                                npc_dialog_gender = 0
                                                p.user_cursor_mode = 0
                                                audio_play_sound(snd_turn_page,50,false)
                                            }
                                        //Lilac
                                        if p.use_cursor_x &gt;= text_anchor_x+22 and p.use_cursor_x &lt;= text_anchor_x+35
                                            {
                                                npc_page = 0
                                                npc_interface_keyboard_focus = 0
                                                npc_dialog_gender = 1
                                                p.user_cursor_mode = 0
                                                audio_play_sound(snd_turn_page,50,false)
                                            }
                                        //Carol
                                        if p.use_cursor_x &gt;= text_anchor_x+37 and p.use_cursor_x &lt;= text_anchor_x+50
                                            {
                                                npc_page = 0
                                                npc_interface_keyboard_focus = 0
                                                npc_dialog_gender = 2
                                                p.user_cursor_mode = 0
                                                audio_play_sound(snd_turn_page,50,false)
                                            }
                                        //Milla
                                        if p.use_cursor_x &gt;= text_anchor_x+52 and p.use_cursor_x &lt;= text_anchor_x+65
                                            {
                                                npc_page = 0
                                                npc_interface_keyboard_focus = 0
                                                npc_dialog_gender = 3
                                                p.user_cursor_mode = 0
                                                audio_play_sound(snd_turn_page,50,false)
                                            }
                                        //Spade
                                        if p.use_cursor_x &gt;= text_anchor_x+67 and p.use_cursor_x &lt;= text_anchor_x+80
                                            {
                                                npc_page = 0
                                                npc_interface_keyboard_focus = 0
                                                npc_dialog_gender = 4
                                                p.user_cursor_mode = 0
                                                audio_play_sound(snd_turn_page,50,false)
                                            }
                                    }
                                //Change dialogue page
                                if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                                and p.use_cursor_y &gt;= text_anchor_y+96 and p.use_cursor_x &lt;= text_anchor_x+64
                                and sheet != 2
                                    {
                                        npc_page = 0
                                        npc_interface_keyboard_focus = 0
                                        npc_emotion_index = npc_dialog_emotion_p1
                                        p.user_cursor_mode = 0
                                        audio_play_sound(snd_turn_page,50,false)
                                    }
                                //Change dialogue page
                                if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                                and p.use_cursor_y &gt;= text_anchor_y+96 and p.use_cursor_x &gt;= text_anchor_x+65
                                and sheet != 2
                                    {
                                        npc_page = 1
                                        npc_interface_keyboard_focus = 0
                                        npc_emotion_index = npc_dialog_emotion_p2
                                        p.user_cursor_mode = 0
                                        audio_play_sound(snd_turn_page,50,false)
                                    }
                            }
                    }
                //Maximize NPC editor window
                if npc_interface_focus = 1 and npc_interact_minimized = 1
                and npc_interact_timer = 0
                    {
                        //Define rules for clicking inside of dialogue menu
                        if p.side_bar_allow = 0
                            p.use_float_window = 1;
                        if !point_in_rectangle(p.use_cursor_x,p.use_cursor_y,text_anchor_x,text_anchor_y-6,text_anchor_x+text_anchor_w,text_anchor_y+text_box_height)
                        or p.side_bar_allow = 1
                            {
                                npc_interface_focus = 0
                                p.use_float_window = 0
                                npc_interface_keyboard_focus = 0
                            }
                        if o.user_cursor_mode = 0
                            {
                                npc_interface_focus = 0
                                p.use_float_window = 0
                                npc_interface_keyboard_focus = 0
                            }
                        //Maximize NPC editor window
                        if (mouse_check_button_pressed(p.joy_mouse_button_left) or p.use_put_here = 1)
                        and p.use_cursor_y &gt;= text_anchor_y and p.use_cursor_y &lt;= text_anchor_y+text_box_height
                        and p.use_cursor_x &gt;= text_anchor_x and p.use_cursor_x &lt;= text_anchor_x+text_anchor_w
                            {
                                npc_interact_timer = 8
                                p.use_float_window = 1
                                npc_interact_minimized = 0
                                audio_play_sound(pause_select,50,false)
                            }
                    }
            }
        //Only talk if the player is nearby
        if state = 0
            {
                //Animations
                if npc_emotion_index = 9 //Make sure we're dancing
                    {
                        if npc_frame &lt; npc_dance_frame_start
                            npc_frame = npc_dance_frame_start;

                        npc_frame += npc_dance_frame_speed;

                        if npc_frame &gt; npc_dance_frame_end
                            npc_frame = npc_dance_frame_start;
                    }
                //Execute normal animations if not dancing
                else
                    {
                        if npc_talk_while_idle = 0 and npc_emotion_index != 9
                            {
                                npc_frame += npc_speed;
                                if npc_frame &gt; sprite_get_number(npc_emotion_selected)-0.2
                                    npc_frame = 0;
                            }
                        else
                            {
                                npc_frame = 0;
                                image_index = 0;
                            }
                    }
                if runaway_npc_prompt = 1
                    {
                        state = 1
                        if npc_normal_npc = 1 and room != rm_west_district_0
                            scr_dialog_string_character();
                        npc_emotion_index = npc_dialog_emotion_p1
                        draw_set_font(o.text_font_academy);
                        npc_dialog_string = string_wordwrap_width(npc_dialog_string_p1,148,"#",true);
                    }
                if point_distance(o.px,o.py,x,y) &lt;= 64
                    {
                        //Story Mode Trigger
                        if o.story_mode = 1 npc_story_trigger = 1;

                        //Confirm Whether We're Allowed To Scroll Text
                        var yes = 0;
                        if (npc_dialog_string_p1 != "")
                        or (lilac_dialog_string_p1 != "")
                        or (carol_dialog_string_p1 != "")
                        or (milla_dialog_string_p1 != "")
                        or (spade_dialog_string_p1 != "")
                            yes = 1;
                        //Initiate text
                        if o.ground = 1 and joy_press = 1 and yes = 1
                        and ((o.px &gt; x and o.xdir = -1) or (o.px &lt;= x and o.xdir = 1))
                            {
                                state = 1
                                if npc_normal_npc = 1
                                    scr_dialog_string_character();
                                npc_emotion_index = npc_dialog_emotion_p1
                                draw_set_font(o.text_font_academy);
                                npc_dialog_string = string_wordwrap_width(npc_dialog_string_p1,148,"#",true);
                                if o.joy_input[2,1] = 0
                                    {
                                        controller_type_left  = o.key_left_s
                                        controller_type_up    = o.key_up_s
                                        controller_type_down  = o.key_down_s
                                        controller_type_right = o.key_right_s
                                        controller_type_a     = o.key_a_s
                                        controller_type_b     = o.key_b_s
                                        controller_type_c     = o.key_c_s
                                        controller_type_d     = o.key_d_s
                                        controller_type_start = o.key_start_s
                                    }
                                if o.joy_input[2,1] = 1
                                    {
                                        controller_type_left  = o.joy_left_mod_s
                                        controller_type_up    = o.joy_up_mod_s
                                        controller_type_down  = o.joy_down_mod_s
                                        controller_type_right = o.joy_right_mod_s
                                        controller_type_a     = o.joy_a_mod_s
                                        controller_type_b     = o.joy_b_mod_s
                                        controller_type_c     = o.joy_c_mod_s
                                        controller_type_d     = o.joy_d_mod_s
                                        controller_type_start = o.joy_start_mod_s
                                    }
                                audio_play_sound(pause_select,50,false)
                            }
                    }
                else
                    npc_story_trigger = 0;
            }
        if state = 1
            {
                if npc_emotion_index = 9 //Make sure we're dancing
                    {
                        if npc_frame &lt; npc_dance_frame_start
                            npc_frame = npc_dance_frame_start;

                        npc_frame += npc_dance_frame_speed;

                        if npc_frame &gt; npc_dance_frame_end
                            npc_frame = npc_dance_frame_start;
                    }
                //Execute normal animations if not dancing
                else
                    {
                        npc_frame += npc_speed;
                        if npc_frame &gt; sprite_get_number(npc_emotion_selected)-0.2
                            npc_frame = 0;
                    }
                npc_dialog_iterate += 0.4
                //npc_dialog_sound += npc_dialog_iterate
                //Turn page, or stop talking, after the player has pushed their buttons
                //at the end of the "page"
                if npc_dialog_iterate &gt;= string_length(npc_dialog_string)
                    {
                        if npc_dialog_sound = 0
                            {
                                audio_play_sound(snd_text_scrolling,50,false)
                                npc_dialog_sound = 1
                            }
                        if npc_shopkeeper_gui = 0
                            {
                                npc_dialog_iterate = string_length(npc_dialog_string)
                                joy_flash = 1
                                if joy_press = 1
                                    {
                                        npc_dialog_page += 1
                                        if npc_dialog_page = 1
                                            {
                                                npc_emotion_index = npc_dialog_emotion_p2
                                                draw_set_font(o.text_font_academy);
                                                npc_dialog_string = string_wordwrap_width(npc_dialog_string_p2,148,"#",true);
                                            }
                                        if (npc_dialog_page &gt; 1 or npc_dialog_string_p2 = "")
                                            {
                                                draw_set_font(o.text_font_academy);
                                                npc_dialog_string = string_wordwrap_width(npc_dialog_string_p1,148,"#",true);
                                                npc_dialog_page = 0
                                                state = 0
                                                npc_emotion_index = npc_dialog_emotion_p1
                                            }
                                        npc_dialog_iterate = 0
                                        npc_dialog_sound = 0
                                        joy_flash = 0
                                        audio_play_sound(pause_select,50,false)
                                    }
                            }
                        else
                            {
                                joy_flash = 1
                            }
                    }
                //Play text scrolling sound effect
                var current_read_length = string_copy(npc_dialog_string,1,floor(npc_dialog_iterate));
                var current_character = string_char_at(current_read_length,string_length(current_read_length));
                if (npc_dialog_iterate &lt; string_length(npc_dialog_string))
                and (current_character = "a" or current_character = "e" or current_character = "i"
                or current_character = "o" or current_character = "u"
                or current_character = "A" or current_character = "E" or current_character = "I"
                or current_character = "O" or current_character = "U"
                or current_character = " ")
                //and transition_active = 0
                    {
                        audio_sound_pitch(npc_talk_voice,0.95)
                        //Change pitch based on vowel sounds
                        if current_character = "a"
                        or current_character = "A"
                            audio_sound_pitch(npc_talk_voice,0.96);
                        if current_character = "e"
                        or current_character = "E"
                            audio_sound_pitch(npc_talk_voice,0.98);
                        if current_character = "i"
                        or current_character = "I"
                            audio_sound_pitch(npc_talk_voice,0.98);
                        if current_character = "o"
                        or current_character = "O"
                            audio_sound_pitch(npc_talk_voice,0.95);
                        if current_character = "u"
                        or current_character = "U"
                            audio_sound_pitch(npc_talk_voice,0.96);
                        if current_character = " "
                            audio_sound_pitch(npc_talk_voice,0.95);
                            
                        //Play sound
                        audio_play_sound(npc_talk_voice,50,false)
                    }

                //Stop talking if the player leaves the immediate area
                if runaway_npc_prompt = 0 and point_distance(o.px,o.py,x,y) &gt; 64
                    {
                        npc_dialog_string = npc_dialog_string_p1
                        npc_emotion_index = npc_dialog_emotion_p1
                        npc_dialog_iterate = 0
                        npc_dialog_gender = 0
                        npc_dialog_page = 0
                        joy_flash = 0
                        state = 0
                    }
            }
    }
else
    npc_frame = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.pause = 0 and state = 1
    {
        //Draw Box
        draw_sprite_ext(spr_water,0,131,179,166,50,0,c_white,0.8)
        draw_sprite(spr_npc_dialoge_box,0,213,176)
        //Draw NPC Name
        draw_set_font(o.text_font_academy)
        draw_set_color(c_white)
        draw_text(140,165,npc_name)
        draw_text_ext(139,181,string_copy(npc_dialog_string,1,floor(npc_dialog_iterate)),16,164)
        if joy_flash = 1
            {
                if npc_interface_switch_control_type = 0 draw_sprite(spr_keyboard_font,o.key_a,273,221);
                else                                     draw_background(o.user_joystick_a,273,221);
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sheet = 0
    {
        draw_sprite_ext(npc_emotion_selected,npc_frame,x,y,npc_direction,1,0,c_white,1)
    }

if room = rm_editor and o.user_cursor_mode = 1
and npc_normal_npc = 1
    {
        if npc_interact_minimized = 0
            {
                var npc_text_page = npc_page;
                if sheet = 2 npc_text_page = 7;
                draw_sprite(spr_npc_dialogue_menu,npc_text_page,x,y-npc_offset);
                draw_set_font(o.text_font_academy)
                draw_set_color(c_white)
                var text_anchor_x = x-64;
                var text_anchor_y = y-126-npc_offset;
                //Runaway NPC Text
                if sheet = 2
                    {
                        draw_text(text_anchor_x+13,text_anchor_y+4,npc_name)
                        draw_text(text_anchor_x+13,text_anchor_y+18,lang_gui[o.user_language_mode,4])
                    }
                //Facing Direction
                if sheet != 2
                    {
                        if npc_follow = 0
                            {
                                if npc_direction = 1
                                    draw_text(text_anchor_x+13,text_anchor_y+4,lang_gui[o.user_language_mode,0]);
                                else
                                    draw_text(text_anchor_x+13,text_anchor_y+4,lang_gui[o.user_language_mode,1]);
                            }
                        else
                            draw_text(text_anchor_x+13,text_anchor_y+4,lang_gui[o.user_language_mode,2]);
                        //Emotional State
                        if npc_page = 0
                            {
                                var emotional_state = npc_emotion_label_idle;
                                switch(npc_dialog_emotion_p1)
                                    {
                                        case 1: {emotional_state = npc_emotion_label_happy; break;}
                                        case 2: {emotional_state = npc_emotion_label_angry; break;}
                                        case 3: {emotional_state = npc_emotion_label_sad; break;}
                                        case 4: {emotional_state = npc_emotion_label_sus; break;}
                                        case 5: {emotional_state = npc_emotion_label_omg; break;}
                                        case 6: {emotional_state = npc_emotion_label_mad; break;}
                                        case 7: {emotional_state = npc_emotion_label_lmao; break;}
                                        case 8: {emotional_state = npc_emotion_label_scared; break;}
                                    }
                            }
                        if npc_page = 1
                            {
                                var emotional_state = npc_emotion_label_idle;
                                switch(npc_dialog_emotion_p2)
                                    {
                                        case 1: {emotional_state = npc_emotion_label_happy; break;}
                                        case 2: {emotional_state = npc_emotion_label_angry; break;}
                                        case 3: {emotional_state = npc_emotion_label_sad; break;}
                                        case 4: {emotional_state = npc_emotion_label_sus; break;}
                                        case 5: {emotional_state = npc_emotion_label_omg; break;}
                                        case 6: {emotional_state = npc_emotion_label_mad; break;}
                                        case 7: {emotional_state = npc_emotion_label_lmao; break;}
                                        case 8: {emotional_state = npc_emotion_label_scared; break;}
                                    }
                            }
                        draw_text(text_anchor_x+13,text_anchor_y+18,lang_gui[o.user_language_mode,3]+emotional_state);
                    }
                //Blinking Cursor
                var npc_blinking_cursor_string = "|";
                var npc_blinking_cursor_offset = 2;
                //Dialogue Text
                var temp_string = npc_dialog_string_p1
                if npc_page = 1 temp_string = npc_dialog_string_p2;
                //Define Overlap Bar's menu frame (All Characters By Default)
                var gender_frame = 2;
                //Character-Specific Dialog Text Overrides
                switch(npc_dialog_gender)
                    {
                        //All
                        case 0:
                            {
                                temp_string = girls_dialog_string_p1
                                if (npc_page = 1) temp_string = girls_dialog_string_p2;
                                gender_frame = 2
                                break;
                            }
                        //Lilac
                        case 1:
                            {
                                temp_string = lilac_dialog_string_p1
                                if (npc_page = 1) temp_string = lilac_dialog_string_p2;
                                gender_frame = 3
                                break;
                            }
                        //Carol
                        case 2:
                            {
                                temp_string = carol_dialog_string_p1
                                if (npc_page = 1) temp_string = carol_dialog_string_p2;
                                gender_frame = 4
                                break;
                            }
                        //Milla
                        case 3:
                            {
                                temp_string = milla_dialog_string_p1
                                if (npc_page = 1) temp_string = milla_dialog_string_p2;
                                gender_frame = 5
                                break;
                            }
                        //Spade
                        case 4:
                            {
                                temp_string = spade_dialog_string_p1
                                if (npc_page = 1) temp_string = spade_dialog_string_p2;
                                gender_frame = 6
                                break;
                            }
                    }
        
                if npc_interface_keyboard_focus = 1
                    {
                        npc_interface_blinking_cursor += 1
                        if npc_interface_blinking_cursor = 1
                                npc_blinking_cursor_string = "|";
                        if npc_interface_blinking_cursor &gt; 40
                                npc_interface_blinking_cursor = 0;
                        if npc_interface_blinking_cursor &lt;= 20
                            {
                                npc_blinking_cursor_string = ""
                            }
                    }
                else
                    {
                        npc_blinking_cursor_string = ""
                    }
                draw_text_ext(text_anchor_x+6,text_anchor_y+35,temp_string+npc_blinking_cursor_string,16,148);;
                //Draw Overlap Bar
                if sheet != 2
                    draw_sprite(spr_npc_dialogue_menu,gender_frame,x,y-npc_offset);
            }
        else
            draw_sprite(spr_npc_dialog_menu_minimized,0,x,y-npc_offset);
    }
else
    {
        prompt_flash += 1
        if prompt_flash &gt; 40 prompt_flash = 0;
        if state = 0 and prompt_flash &lt; 20 and npc_dialog_string_p1 != ""
        and ((o.px &gt; x and o.xdir = -1) or (o.px &lt;= x and o.xdir = 1))
            {
                draw_sprite(cutscene_frame,0,x,y-sprite_height-8);
                if npc_interface_switch_control_type = 0 draw_sprite(spr_keyboard_font,o.key_a,x-8,y-sprite_height-37);
                else                                     draw_background(o.user_joystick_a,x-8,y-sprite_height-36);
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
