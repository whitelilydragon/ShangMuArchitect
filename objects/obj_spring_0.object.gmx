<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spring_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_spring_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spring Parameters
frame = 0
spring_particle_frame = 0
spring_triggered = 0
spring_speed = 10.7
spring_timer = obj_game_logic.spring_timer_blue
spring_rotated = 90
spring_left = -9
spring_top = -16
spring_right = 42
spring_bottom = 8
spring_offset_x = 16
spring_offset_y = 0
spring_sound_id = 0
player_axis_x = 0
player_apply_speed = 0
//Are We Allowed To Hold Items?
give_item = 0
item = 0
attacked = 0
tile_mask = -1
var tile_search = tile_layer_find(surface_flats,x+16,y+24);
var slope_search = tile_layer_find(surface_slopes,x+16,y+24);
if tile_exists(tile_search) or tile_exists(slope_search)
    {
        tile_mask = tile_add(mu_door_1,0,0,32,16,x,y,surface_flats)
        tile_set_visible(tile_mask,false)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tile_exists(tile_mask) tile_delete(tile_mask);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var o = obj_game_logic;

if o.pause = 0
    {
        //Check For Collisions With Spring's Surface
        var axis_x = o.px;
        var axis_y = o.py;
        if player_axis_x = 1
            {
                axis_y = o.universal_player_y;
            }
        if point_in_rectangle(axis_x,axis_y,x+spring_left,y+spring_top,x+spring_right,y+spring_bottom)
        and o.spring_rotate != spring_rotated
        and o.user_cursor_mode = 0
            {
                scr_set_spring_launch(spring_speed,spring_timer,spring_rotated)
                if spring_sound_id = 0
                    {
                        if object_index = obj_spring_24
                        or object_index = obj_spring_25
                        or object_index = obj_spring_26
                        or object_index = obj_spring_27
                            {
                                audio_stop_sound(character_spring_weak)
                                audio_play_sound(character_spring_weak,50,false)
                            }
                        else
                            {
                                audio_stop_sound(character_spring)
                                audio_play_sound(character_spring,50,false)
                            }
                        spring_sound_id = 4
                    }
                spring_triggered = 1
                frame = 1
                spring_particle_frame = 0
                if spring_rotated = 0
                    {
                        if o.px &lt; x+16 o.px = x+24;
                        o.hsp = spring_speed;
                        player_apply_speed = 2
                    }
                if spring_rotated = 180
                    {
                        if o.px &gt; x+16 o.px = x+16;
                        o.hsp = -spring_speed;
                        player_apply_speed = -2
                    }
                if spring_rotated = 270 o.py = y+48;
            }
        //Animation System
        if spring_triggered = 1
            {
                spring_particle_frame += 0.48
                if spring_particle_frame &gt;= 2
                    frame = 0;
                if spring_particle_frame &gt;= 10.8
                    {
                        spring_particle_frame = 0
                        spring_triggered = 0
                        frame = 0
                    }
                if player_apply_speed != 0
                    {
                        if player_apply_speed &gt; 0
                            {
                                o.hsp = spring_speed;
                                player_apply_speed -= 1;
                            }
                        if player_apply_speed &lt; 0
                            {
                                o.hsp = -spring_speed;
                                player_apply_speed += 1;
                            }
                    }
            }
        if spring_sound_id &gt; 0
            spring_sound_id -= 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite
draw_sprite(sprite_index,frame,x,y)
//Draw Spring Particle
if spring_particle_frame &gt; 0 draw_sprite_ext(spr_spring_explosion,spring_particle_frame,x+spring_offset_x,y+spring_offset_y,1,1,spring_rotated,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
