<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_iris</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_floater</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
scr_enemy_hp(2)
legframe = 0
legoffset = 15
legsound = 0
var_scale = 1
can_hold_items = 0
dropped_goodies = obj_gold_gem
//Wasp Variables
player_y = 0
timer = 0
blink = 0
sub_state = 0
first_bite = 0
tile_scanner_timer = 0
//Editor Mode Variables
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
flash_palette = spr_iris_palette
death_type = 1
death_frame = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()
if o.pause = 0 and death = 0 and freeze = 0
    {
        var_scale = 1;
        if item = spr_mod_chip_extra_large var_scale = 2;
        if room = rm_editor and o.user_cursor_mode = 1
        and sub_state != 0
            {
                sub_state = 0
                frame = 0
                state = 0
                x = start_x
                y = start_y
            }
        //Animation Loops
        switch(state)
            {
                //Idle
                case 0:
                    {
                        //Fly quickly based on difficulty scaling
                        var flight_speed = 6;
                        switch(o.user_enemy_level)
                            {
                                case 0: {flight_speed = 1; break;} //Easy
                                case 1: {flight_speed = 3; break;} //Normal
                                case 2: {flight_speed = 4; break;} //Hard
                                case 3: {flight_speed = 8; break;} //Hardcore
                                case 4: {flight_speed = 12; break;} //Insanity
                            }

                        //Idle
                        if sub_state = 0
                            {
                                speed = 0
                                //Clip to Spawn Height
                                if (y &lt; start_y) y = start_y;
                                //Animations
                                blink += 1
                                if blink &gt;= 20
                                    {
                                        frame += 0.30
                                        if (frame &gt; 3.8)
                                            frame = 0;
                                        if blink &gt;= 48
                                            {
                                                frame = 0
                                                blink = 0
                                            }
                                    }
                                //Search for Player's X/Y Position Below Facing Direction
                                if point_in_rectangle(o.px,o.py,x-32,y,x+32,y+200)
                                and o.user_cursor_mode = 0
                                    {
                                        timer = 0
                                        sub_state = 1
                                        first_bite = 1
                                    }
                            }
                        //Seeking Target
                        if sub_state = 1
                            {
                                timer += 1
                                if first_bite = 1
                                    timer += 5;
                                //Animations
                                frame += 0.35
                                if (frame &lt; 7) frame = 7;
                                if (frame &gt; 11.8) frame = 7;
                                //Movement
                                speed = flight_speed
                                direction = point_direction(x,y,o.px,o.py-72)
                                //Wall Avoidance
                                var yes = 0;
                                if tile_layer_find(surface_flats,x,y)
                                    yes = 1;
                                //Dive Onto The Player
                                if point_in_rectangle(o.px,o.py,x-32,y,x+32,y+168)
                                and timer &gt;= 120 and yes = 0 and o.user_cursor_mode = 0
                                    {
                                        player_y = o.py
                                        state = 1
                                        timer = 0
                                    }
                            }
                        //Returning to Mid-Air
                        if sub_state = 2
                            {
                                speed = 0
                                y -= 2
                                timer += 1
                                
                                if timer = 45
                                    {
                                        timer = 0
                                        sub_state = 1
                                    }
                                //Animations
                                frame += 0.35
                                if (frame &lt; 5) frame = 5;
                                if (frame &gt; 11.8) frame = 7;
                            }
                        break;
                    }
                //Dive Attack
                case 1:
                    {
                        speed = 0
                        //Animations
                        frame += 0.20
                        if (frame &lt; 12) frame = 12;
                        if (frame &gt; 14.8) frame = 14;

                        //Fly quickly based on difficulty scaling
                        var flight_speed = 6;
                        switch(o.user_enemy_level)
                            {
                                case 0: {flight_speed = 3; break;} //Easy
                                case 1: {flight_speed = 4; break;} //Normal
                                case 2: {flight_speed = 8; break;} //Hard
                                case 3: {flight_speed = 12; break;} //Hardcore
                                case 4: {flight_speed = 15; break;} //Insanity
                            }

                        timer += 1
                        if timer = 1
                            audio_play_sound(snd_enemy_sword,50,false);
                        if timer &gt; 16
                            {
                                y += flight_speed
                                //Search For Positions To Deal Damage
                                if point_distance(o.universal_player_x,o.universal_player_y,x,y) &lt; 32
                                    {
                                        if o.hurt[0] = 0 and o.hurt[1] = 0 and o.shield_invuln = 32
                                        and not (o.shield_active = 1 and o.shield=spr_shield_metal)
                                            scr_enemy_deal_damage(0.2,0.4,1);
                                    }
                                //Bomb Cube
                                var instance_ID = collision_circle(x,y,32,obj_player_cube_alt,false,true);
                                if instance_exists(instance_ID)
                                    scr_enemy_bomb_cube_damage(instance_ID);
                            }

                        //Dive
                        if y &gt; player_y-28
                            {
                                state = 0
                                timer = 0
                                frame = 5
                                sub_state = 2
                            }
                        break;
                    }
            }
    } //End of pause check
else
    speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
