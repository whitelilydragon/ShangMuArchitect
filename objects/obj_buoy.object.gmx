<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_buoy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>savvy_dangle = 0
savvy_direction = 1
o = obj_game_logic
item = 0
give_item = 0
asset_check = 0
attacked = 0
gravity_speed = 0
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
segment_float_timer = 0
segment_float_offset = y
segment_float_enable = 0

tile_0 = tile_add(tile_flat_24,0,0,84,32,x-40,y-16,surface_flats)
tile_set_visible(tile_0,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tile_exists(tile_0) tile_delete(tile_0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_game_logic.pause = 0
    {
        //Sound Playback Conditions
        var play_sound = 1;
        if x &lt; view_xview[view_port]-196
        or x &gt; view_xview[view_port]+view_wview[view_port]+196
            play_sound = 0;
        if y &lt; view_yview[view_port]-196
        or y &gt; view_yview[view_port]+view_hview[view_port]+196
            play_sound = 0;

        if room = rm_editor
            {
                var parent = obj_level_editor
                if parent.use_write_delay &gt; 0
                or ((point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,start_x-width_x,start_y-height_y,start_x+width_x,start_y)
                or point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,x-width_x,y-height_y,x+width_x,y))
                and parent.user_cursor_mode = 0 and parent.use_tile_menu = 0)
                or (parent.use_enemy_mode_iterations = 2)
                    {
                        x = start_x
                        y = start_y
                        state = 0
                        frame = 0
                        segment_float_timer = 0
                        segment_float_enable = 0
                    }
                if o.use_zoom_scale_factor != 1
                    play_sound = 0;
            }

        //Gravity
        var water_id = collision_rectangle(x-40,y-8,x+40,y,obj_smart_pools,false,true);
        if !instance_exists(water_id) and y &lt; o.water_height
            gravity_speed += 0.24;

        //Clip to Water's Surface
        if instance_exists(water_id) or y &gt; o.water_height
            {
                var boat_height = y;
                var surface_type = 0;

                if boat_height &gt;= o.water_height
                    {
                        if segment_float_enable = 0
                            {
                                segment_float_enable = 1
                                segment_float_offset = o.water_height
                                if play_sound = 1
                                    {
                                        audio_stop_sound(snd_heavy_splash)
                                        audio_play_sound(snd_heavy_splash,50,false)
                                    }
                            }
                    }
                else
                    segment_float_timer = 0;
                if boat_height &gt; o.water_height and boat_height &lt; o.water_height+8
                    {
                        y = o.water_height
                        surface_type = 1
                        gravity_speed = 0
                    }
                if boat_height &gt;= o.water_height+8
                    {
                        segment_float_enable = 0
                        gravity_speed -= 0.24
                        surface_type = 1
                    }
                if instance_exists(water_id) and surface_type = 0
                    {
                        if boat_height &gt;= water_id.y and boat_height &lt;= water_id.y+8
                            {
                                gravity_speed = 0
                                y = water_id.y
                            }
                        if boat_height &gt; water_id.y+8
                            {
                                gravity_speed -= 0.24
                                segment_float_enable = 0
                            }
                    }
            }
        if segment_float_enable = 1
            segment_float_timer += 0.5;
        else
            segment_float_timer += 0;

        //Gravity Cap
        if gravity_speed &lt; -4
            gravity_speed = -4;
        if gravity_speed &gt;  4
            gravity_speed =  4;

        //Apply Gravity Speed
        y += gravity_speed

        if tile_exists(tile_0)
            tile_set_position(tile_0,x-40,y-16);

        //Dangling
        if gravity_speed = 0
            {
                savvy_dangle += 0.025*savvy_direction
                if savvy_dangle &gt; 1
                    savvy_direction = -1;
                if savvy_dangle &lt; -1 and savvy_direction = -1
                    {
                        savvy_direction = 1;
                        if play_sound = 1
                            audio_play_sound(snd_buoy_bell,50,false);
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_editor and y != start_y
    draw_sprite_ext(sprite_index,0,start_x,start_y,1,1,0,c_white,0.5);
draw_sprite_ext(sprite_index,0,x,y,1,1,savvy_dangle,c_white,1)

if (segment_float_timer &gt; 0.25 and segment_float_timer &lt; 8.8)
    draw_sprite_ext(spr_water_splash_2x,segment_float_timer,x,segment_float_offset,1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
