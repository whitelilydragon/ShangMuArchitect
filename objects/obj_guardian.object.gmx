<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_guardian_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_floater</parentName>
  <maskName>spr_guardian_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
heart = 352                          //Enemy Health
heartmax = 352                       //Enemy Health
hp_mod = 0.26041667
hp_target = heart
heart_bar_target = ((heart/2)-(heartmax/4))+2
heart_bar_target_2 = heart/2
can_draw_healthbar = 0
can_die_upon_impact = 0
scr_enemy_boss_init(spr_guardian_palette)

startup_alpha = 1
rising_phase = 1
back_alpha = 0
lens_flare_angle = 0
lens_flare_alpha = 0
rising_fog_color = make_colour_rgb(0,0,32)

head_frame = 0
head_timer = 0
head_float = 0
head_accel = 0
slam_count = 0
slam_timer = 0
slam_enable = 0
slam_override = 0
fire_timer = 0
fire_enable_timer = 0

death_timer = 0
pounce_timer = 0
pounce_direction = 1

max_rocks = 34
var count = 0;
while(count &lt;= max_rocks+4)
    {
        rock_angle[count] = 0
        rock_lerp[count] = random_range(0.015,0.10)
        rock_target[count] = random_range(4,6)
        count += 1
    }
//Manual Speeds
rock_lerp[16] = 0.065
rock_lerp[15] = 0.035
rock_lerp[0] = 0.050
rock_lerp[1] = 0.025
rock_target[16] = 12
tail_segment_2_lerp = 0
tail_segment_2_target = 16
//Startup
startup_timer = 0
startup_anchor_x = start_x+160
startup_anchor = y
startup_bounds_x_left = x-256
startup_bounds_x_right = x+256
//Movement States
move_state = 0
move_direction = 0
move_attack = 0
move_sound = 0
move_alpha = 1
move_timer = 0
disappear_timer = 240
disappear_phase_0 = 240
disappear_phase_1 = 360

//Ghosts
ghosts_enabled = 0
ghosts_timer = 0
ghosts_alpha = 0
ghost_x[0] = x
ghost_y[0] = y
ghost_x[1] = x
ghost_y[1] = y
ghost_claws_x[0] = x
ghost_claws_y[0] = y
ghost_claws_x[1] = x
ghost_claws_y[1] = y
ghost_direction[0] = 1
ghost_direction[1] = -1

claw_id_0 = instance_create(x,y,obj_guardian_claws); //Left
claw_id_1 = instance_create(x,y,obj_guardian_claws); //Right
claw_id_0.xdir = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.targets_mode = spr_hud_target_boss and room != rm_editor
and object_index != obj_guardian_story
    o.targets_ready = 3;
if instance_exists(claw_id_0)
    instance_destroy(claw_id_0);
if instance_exists(claw_id_1)
    instance_destroy(claw_id_1);
if instance_exists(obj_guardian_clone_head)
    instance_destroy(obj_guardian_clone_head);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()

//Startup Phase
if o.pause = 0 and rising_phase &gt; 0
    {
        back_alpha += 0.025
        if back_alpha &gt; 1
            back_alpha = 1;

        if o.px &gt; x+128 and o.px &lt; x+256 and rising_phase &lt; 2
            {
                audio_play_sound(snd_dragon_flare,50,false)
                rising_phase = 2
            }

        if rising_phase = 2
            {
                lens_flare_alpha += 0.1
                lens_flare_angle += 2.5;
            }

        if lens_flare_angle &gt; 180
            {
                rising_phase = 3
                lens_flare_angle += 2.5
                lens_flare_alpha -= 0.1
                if lens_flare_alpha &lt;= 0
                    rising_phase = 0;
            }
    }

//Boss Logic
if o.pause = 0 and death = 0 and freeze = 0 and rising_phase = 0
    {
        if startup_timer &lt; 120
            {
                if y &gt; startup_anchor-200
                    y -= 4;
                startup_timer += 1
                if startup_timer = 60
                    {
                        audio_play_sound(snd_dragon_roar,50,false)
                        audio_play_sound(snd_dragon_roar,50,false)
                        audio_play_sound(snd_dragon_roar,50,false)
                        head_frame = 1
                        scr_set_screen_shake(24,3)
                    }
                if startup_timer = 80
                or startup_timer = 100
                    scr_set_screen_shake(24,3);
                if startup_timer = 119
                    {
                        head_frame = 0;
                        move_direction = 1;
                    }
            }
        var rock_count = 0;
        while(rock_count &lt;= max_rocks)
            {
                rock_angle[rock_count] = lerp(rock_angle[rock_count],rock_target[rock_count],rock_lerp[rock_count])
                if rock_angle[rock_count] &gt;= rock_target[rock_count]-0.90
                    rock_target[rock_count] = -abs(rock_target[rock_count]);
                if rock_angle[rock_count] &lt;= rock_target[rock_count]+0.90
                    rock_target[rock_count] = abs(rock_target[rock_count]);
                rock_count += 1
            }
        tail_segment_2_lerp = lerp(tail_segment_2_lerp,tail_segment_2_target,0.25)
        if tail_segment_2_lerp &gt;= tail_segment_2_target-0.90
            tail_segment_2_target = -abs(tail_segment_2_target);
        if tail_segment_2_lerp &lt;= tail_segment_2_target+0.90
            tail_segment_2_target = abs(tail_segment_2_lerp);

        //Movement
        if x &lt; startup_bounds_x_left
            move_direction += 0.1;
        if x &gt; startup_bounds_x_right
            move_direction -= 0.1;
        if move_direction &lt; -1
            move_direction = -1;
        if move_direction &gt; 1
            move_direction = 1;
        if y &gt; startup_anchor-64
            y = startup_anchor-64;

        //Ceiling Pouncing Cooldown Timer
        if pounce_timer &gt; 0
            pounce_timer -= 1;

        //Disable movement while attacking
        if move_attack &gt; 0 and move_attack &lt; 6
            move_direction = 0;

        //Timers
        timer += 1
        head_timer += 1
        disappear_timer -= 1;
        if (disappear_timer &lt; 0) disappear_timer = 0;

        //Decide From Attack Movepool Based on Context
        if o.user_cursor_mode = 0 and point_in_rectangle(o.px,o.py,x+112,y-16,x+208,startup_anchor+16)
            {
                //Fire Breathing
                if (((head_timer &gt;= 60 and phase = 0) or (head_timer &gt;= 300 and phase = 1))
                and (alpha &gt; 0 and move_attack &lt; 6))
                or (!instance_exists(claw_id_0) or !instance_exists(claw_id_1) and phase = 1
                and head_timer &gt;= 30)
                    {
                        move_attack = 6
                        head_frame  = 1
                        move_sound  = 0
                        head_timer  = 0
                        move_alpha  = 1
                        audio_play_sound(snd_dragon_roar,50,false)
                    }
                //Disappearing Act
                if disappear_timer &lt;= 0 and move_attack = 0
                and y &gt; startup_anchor-264
                and !instance_exists(obj_guardian_clone_head)
                    {
                        move_attack = 7
                        head_frame  = 1
                        fire_timer  = 0
                        fire_enable_timer = 0
                        audio_play_sound(snd_dragon_phase,50,false)
                    }
                //Pound the Ceiling If Our HP is Below a Certain Threshold
                if pounce_timer = 0 and move_attack = 0
                and o.py &lt; y+92 and y &gt;= startup_anchor-196
                and !instance_exists(obj_guardian_clone_head)
                    {
                        move_attack = 3
                        if o.px &lt;= x
                            pounce_direction = 6;
                        if o.px &gt; x
                            pounce_direction = -6;
                        head_frame = 1
                        move_sound = 0
                        head_timer = 0
                        move_alpha  = 1
                        pounce_timer = 120
                        audio_play_sound(snd_dragon_roar,50,false)
                    }
                if alpha = 0
                    {
                        //Claw Attack
                        if head_timer &gt;= 120 and move_attack = 0 and o.py &gt;= startup_anchor-80
                        and (instance_exists(claw_id_0) or instance_exists(claw_id_1))
                            {
                                audio_play_sound(snd_enemy_sword,50,false)
                                var claw_random = floor(random_range(0,1.9));
                                if (instance_exists(claw_id_0) and claw_random = 0)
                                    {
                                        claw_id_0.state = 1
                                        claw_id_0.subangle = 0
                                        move_direction = 0
                                        move_attack = 5
                                        head_frame = 1
                                        move_sound = 0
                                        head_timer = 0
                                        move_alpha = 1
                                    }
                                if (instance_exists(claw_id_1) and claw_random = 1)
                                    {
                                        claw_id_1.state = 1
                                        claw_id_1.subangle = 0
                                        move_direction = 0
                                        move_attack = 5
                                        head_frame = 1
                                        move_sound = 0
                                        head_timer = 0
                                        move_alpha = 1
                                    }
                            }
                    }
            }

        //Floating Behavior
        if move_attack = 0
            {
                if phase = 0
                    head_accel += 0.12;
                if phase = 1
                    head_accel += 0.06;

                if head_accel &gt; 2
                     head_accel = 2;
                if head_float = 0
                    y += head_accel;
                if head_float = 1
                    y -= head_accel;
                    
                if y &gt; startup_anchor-184
                    {
                        head_float = 1
                        head_accel = 0
                    }
                if y &lt; startup_anchor-200
                    {
                        head_float = 0
                        head_accel = 0
                    }
                //If the Guardian is stuck at a certain position in mid-air, correct for this in the default movement state
                if y &lt; startup_anchor-200
                    {
                        y += 4
                    }
            }
        //Ground Pound Attack
        if slam_count &gt;= 1
            {
                slam_timer += 1
                if slam_timer &gt; 48
                    {
                        slam_count += 1
                        slam_timer = 0
                        slam_enable = 1
                        if slam_count &gt; 3
                            {
                                slam_count = 0
                                slam_timer = 0
                                slam_enable = 0
                            }
                    }
            }
        if (o.user_cursor_mode = 0 and slam_override = 0 and
        ((phase = 0 and head_timer &gt;= 300) or (phase = 1 and head_timer &gt;= 300))
        and !point_in_rectangle(o.px,o.py,x+120,y+80,x+200,startup_anchor+16))
        or (slam_enable = 1 and slam_override = 0)
            {
                move_attack = 1
                head_frame = 1
                move_sound = 0
                head_timer = 0
                if slam_count = 0
                    slam_count = 1;
                slam_enable = 0
                if x &lt; o.px
                    pounce_direction = 6;
                if x &gt; o.px
                    pounce_direction = -6;
                if instance_exists(claw_id_0)
                    {
                        claw_id_0.state = 2
                        claw_id_0.subangle = 0
                        claw_id_0.claw_state = 0
                        claw_id_0.claw_timer = 0
                    }
                if instance_exists(claw_id_1)
                    {
                        claw_id_1.state = 2
                        claw_id_1.subangle = 0
                        claw_id_1.claw_state = 0
                        claw_id_1.claw_timer = 0
                    }
                audio_play_sound(snd_dragon_roar,50,false)
            }
        if move_attack = 1 and slam_count &gt; 0
            {
                move_direction = 0
                y += 4

                if y &gt; startup_anchor-96
                    {
                        y = startup_anchor-96

                        if move_sound = 0
                            {
                                move_sound = 1
                                move_attack = 2
                                scr_set_screen_shake(24,3)
                                audio_play_sound(snd_explosion,50,false)
                                instance_create(random_range(o.px-256,o.px),startup_anchor-520,obj_guardian_rocks)
                                instance_create(random_range(o.px,o.px+512),startup_anchor-532,obj_guardian_rocks)
                                instance_create(random_range(o.px-512,o.px),startup_anchor-564,obj_guardian_rocks)
                                instance_create(random_range(o.px,o.px+256),startup_anchor-500,obj_guardian_rocks)
                                instance_create(random_range(o.px-256,o.px+256),startup_anchor-564,obj_guardian_rocks)
                                instance_create(random_range(o.px-296,o.px),startup_anchor-596,obj_guardian_rocks)
                                instance_create(random_range(o.px,o.px+512),startup_anchor-516,obj_guardian_rocks)
                                instance_create(random_range(o.px-512,o.px+512),startup_anchor-512,obj_guardian_rocks)

                                if o.user_enemy_level &gt; 0
                                    {
                                        instance_create(o.px-512,startup_anchor-520,obj_guardian_spikes)
                                        instance_create(o.px+512,startup_anchor-532,obj_guardian_spikes)
                                        instance_create(o.px+768,startup_anchor-564,obj_guardian_spikes)
                                        instance_create(o.px-256,startup_anchor-596,obj_guardian_spikes)
                                        instance_create(o.px-768,startup_anchor-516,obj_guardian_spikes)
                                        instance_create(o.px+128,startup_anchor-512,obj_guardian_spikes)
                                    }
                            }
                    }
            }
        if move_attack = 2
            {
                y -= 4;
                if y &lt; startup_anchor-196
                    {
                        move_direction = 1
                        move_attack = 0
                        head_frame = 0
                        head_float = 0
                    }
            }
        //Ceiling Pound Attack
        if move_attack = 3
            {
                move_direction = 0

                if x &lt; startup_bounds_x_left
                    {
                        x = startup_bounds_x_left
                    }
                if x &gt; startup_bounds_x_right
                    {
                        x = startup_bounds_x_right
                    }

                x += pounce_direction
                y -= 4

                if y &lt; startup_anchor-356
                    {
                        y = startup_anchor-356
                        if move_sound = 0
                            {
                                move_sound = 1
                                move_attack = 4
                                scr_set_screen_shake(24,3)
                                audio_play_sound(snd_explosion,50,false)
                                instance_create(o.px-512,startup_anchor-520,obj_guardian_spikes)
                                instance_create(o.px+512,startup_anchor-532,obj_guardian_spikes)
                                instance_create(o.px+768,startup_anchor-564,obj_guardian_spikes)
                                instance_create(o.px-256,startup_anchor-596,obj_guardian_spikes)
                                instance_create(o.px-768,startup_anchor-516,obj_guardian_spikes)
                                instance_create(o.px+128,startup_anchor-512,obj_guardian_spikes)

                                instance_create(random_range(o.px-256,o.px),startup_anchor-520,obj_guardian_rocks)
                                instance_create(random_range(o.px,o.px+512),startup_anchor-532,obj_guardian_rocks)
                                instance_create(random_range(o.px-512,o.px),startup_anchor-564,obj_guardian_rocks)
                                instance_create(random_range(o.px,o.px+256),startup_anchor-500,obj_guardian_rocks)
                                instance_create(random_range(o.px-256,o.px+256),startup_anchor-564,obj_guardian_rocks)
                                instance_create(random_range(o.px-296,o.px),startup_anchor-596,obj_guardian_rocks)
                                instance_create(random_range(o.px,o.px+512),startup_anchor-516,obj_guardian_rocks)
                                instance_create(random_range(o.px-512,o.px+512),startup_anchor-512,obj_guardian_rocks)
                            }
                    }
            }
        if move_attack = 4
            {
                y += 4;
                if y &gt; startup_anchor-196
                    {
                        move_direction = 1
                        move_attack = 0
                        head_frame = 0
                        head_float = 0
                    }
            }
        //Claw Swipes
        if move_attack = 5
            {
                move_direction = 0
                //If claws are defeated before a swipe is complete, stop attacking
                if !instance_exists(obj_guardian_claws)
                    {
                        move_attack = 0
                        move_direction = 1
                    }
                if instance_exists(claw_id_0)
                    {
                        if state = 0
                            {
                                move_attack = 0
                                move_direction = 1
                            }
                    }
                if instance_exists(claw_id_1)
                    {
                        if state = 0
                            {
                                move_attack = 0
                                move_direction = 1
                            }
                    }
            }
        //Breathing Fire
        if move_attack = 6
            {
                head_frame = 1
                fire_timer += 1
                fire_enable_timer += 1
                if fire_timer &gt; 4
                    {
                        var anchor_x = x+160+(lengthdir_x(64,270+rock_angle[16]));
                        var anchor_y = y+80+(lengthdir_y(64,270+rock_angle[16]));
                        instance_create(anchor_x,anchor_y,obj_guardian_fire)
                        audio_play_sound(snd_enemy_flame,50,false)
                        fire_timer = 0
                    }
                if (phase = 0 and fire_enable_timer &gt; 90)
                or (phase = 1 and fire_enable_timer &gt; 120)
                    {
                        head_frame  = 0
                        move_attack = 0
                        fire_timer  = 0
                        fire_enable_timer = 0
                    }
            }
        //Disappearing Act
        if move_attack = 7
            {
                move_alpha -= 0.05
                if instance_exists(claw_id_0) claw_id_0.ghost_alpha -= 0.05;
                if instance_exists(claw_id_1) claw_id_1.ghost_alpha -= 0.05;
                head_timer = 0
                if move_alpha &lt;= -2
                    {
                        ghosts_enabled = 1
                        move_alpha = 0
                        if o.px &gt;= start_x
                            {
                                ghost_x[0] = start_x
                                ghost_y[0] = startup_anchor-200
                                ghost_x[1] = start_x+200
                                ghost_y[1] = startup_anchor-200
                                x = start_x - 200
                            }
                        if o.px &lt; start_x
                            {
                                ghost_x[0] = start_x
                                ghost_y[0] = startup_anchor-200
                                ghost_x[1] = start_x-200
                                ghost_y[1] = startup_anchor-200
                                x = start_x + 200
                            }
                        audio_play_sound(snd_dragon_roar,50,false)
                        move_attack = 8
                    }
            }
        //Reappearing Act
        if move_attack = 8
            {
                head_timer = 0
                head_frame = 1
                if move_timer &lt; 120
                    move_alpha += 0.5;
                if instance_exists(claw_id_0) {claw_id_0.ghost_alpha += 0.5; if (claw_id_0.ghost_alpha &gt; 1) claw_id_0.ghost_alpha = 1;}
                if instance_exists(claw_id_1) {claw_id_1.ghost_alpha += 0.5; if (claw_id_1.ghost_alpha &gt; 1) claw_id_1.ghost_alpha = 1;}
                if (move_alpha &gt; 1) move_alpha = 1;
                move_timer += 1
                if move_timer &gt;= 120
                    {
                        move_alpha -= 0.05
                        if move_alpha &lt; 0
                            {
                                move_alpha = 0
                                head_frame = 0
                                move_timer = 0
                                move_attack = 9
                            }
                    }
            }
        if move_attack = 9
            {
                head_timer = 0
                move_alpha += 0.5
                if (move_alpha &gt; 1)
                    {
                        move_alpha = 1
                        if instance_exists(claw_id_0) claw_id_0.ghost_alpha = 1;
                        if instance_exists(claw_id_1) claw_id_1.ghost_alpha = 1;
                        move_attack = 0
                        move_timer = 0
                        disappear_timer = disappear_phase_0
                        if phase = 1
                            disappear_timer = disappear_phase_1;
                    }
            }

        //Apply Speed
        var head_speed = 2.5;
        if phase = 1 head_speed = 3;
        if move_attack != 5 and move_attack &lt; 7
            x += move_direction*head_speed

        //Attacks and Movement Unique to Each Phase
        if phase = 0
            {
                //Phase Change
                if heart &lt; heartmax/2 or !instance_exists(obj_guardian_claws)
                    {
                        phase = 1
                        timer = 0
                        head_frame = 1
                        phase_timer = 1
                        scr_set_screen_shake(24,3)
                        audio_play_sound(snd_dragon_phase,50,false)
                        audio_play_sound(snd_dragon_phase,50,false)
                        audio_play_sound(snd_boss_phase_transition,50,false)
                        audio_play_sound(snd_explosion,50,false)
                    }
            }
        if phase = 1
            {
                //Spawn glowing head copies
                if timer = 180
                    {
                        var laser_distance = point_distance(o.px,o.py,x+160,y+80);
                        if (o.user_enemy_level &lt; 2) laser_distance = 0;
                        if laser_distance &gt; 365
                        and (instance_exists(claw_id_0) or instance_exists(claw_id_1))
                        
                            {
                                if instance_exists(claw_id_0)
                                    {
                                        claw_id_0.state = 3
                                        claw_id_0.subangle = 0
                                        claw_id_0.claw_state = 0
                                        claw_id_0.claw_timer = 0
                                    }
                                if instance_exists(claw_id_1)
                                    {
                                        claw_id_1.state = 3
                                        claw_id_1.subangle = 0
                                        claw_id_1.claw_state = 0
                                        claw_id_1.claw_timer = 0
                                    }
                            }
                        if laser_distance &gt; 0 and laser_distance &lt;= 365
                        or (!instance_exists(claw_id_0) and !instance_exists(claw_id_1))
                            {
                                var head_id = instance_create(x,y,obj_guardian_clone_head);
                                head_id.xdir = -1
                                var head_id = instance_create(x,y,obj_guardian_clone_head);
                                audio_play_sound(snd_dragon_roar,50,false)
                                head_id.xdir = 1
                                head_frame = 1
                            }
                    }
                if timer &gt; 240
                    {
                        head_frame = 0
                        timer = 0
                    }

                //Phase Transition
                if phase_timer &gt; 0
                    {
                        phase_flash += 1;
                        phase_timer += 1;
                        if phase_flash &gt; 2
                            phase_flash = 0;
                        if phase_timer &gt; 60
                            {
                                head_frame = 0
                                phase_timer = 0
                            }
                    }
            }

    } //End of pause check

if room != rm_editor and o.pause = 0
    {
        if heart &lt; 0
            {
                if o.timer_stop = 0
                    {
                        timer = 0
                        o.timer_stop = 1
                        move_alpha = 1
                        if instance_exists(claw_id_0) claw_id_0.ghost_alpha = 1;
                        if instance_exists(claw_id_1) claw_id_1.ghost_alpha = 1;
                        scr_stop_boss_music()
                        instance_destroy(obj_guardian_clone_head)
                        if room = rm_campaign
                            {
                                if o.player_bosses[o.player_current] &lt; 4
                                    o.player_bosses[o.player_current] = 4;
                            }
                    }
                head_frame = 1

                back_alpha -= 0.025
                if back_alpha &lt;= 0 
                    back_alpha = 0;
                timer += 1
                death_timer += 1
                enemy_speed = 2
                enemy_direction = 270
                o.death[0] = 0

                if timer = 2
                    audio_play_sound(snd_enemy_explosion,50,false);
                if timer &gt;= 8
                    {
                        var bomb_ID = instance_create(x+160+random_range(-64,64),y+80+random_range(-64,64),obj_bomb);
                        bomb_ID.detonate_for_milla = 1;
                        bomb_ID.dont_leave_decorations = 1;
                        bomb_ID.do_no_harm = 1
                        timer = 0
                    }

                slowdown_timer += 1
                if slowdown_timer = 2
                    {
                        o.pause_logic = 2
                        slowdown_timer = 0
                    }
                if death_timer &gt; 300
                    instance_destroy();
            }
    }
else
    {
        if instance_number(obj_guardian) &gt; 1
            {
                scr_set_message("There can only be one Guardian per stage!")
                instance_destroy();
            }
        if heart &lt; 0 and o.pause = 0
            {
                enemy_speed = 2
                enemy_direction = 270
                death_timer += 1
                if death_timer &gt; 299
                    {
                        var obj_id = instance_create(start_x,start_y,object_index);
                        obj_id.item = item
                        instance_destroy()
                    }
            }
        if item = spr_mod_chip_extra_large
            {
                item = 0
                scr_set_message("Guardian is big enough to take you on!")
            }
        if o.use_write_delay &gt; 0
        or (point_in_rectangle(o.use_cursor_x,o.use_cursor_y,start_x-width_x,start_y-height_y,start_x+width_x,start_y+height_y)
        and o.user_cursor_mode = 0 and o.use_tile_menu = 0 and o.side_bar_allow = 0)
        or (freeze = 1)
            {
                x = start_x
                y = start_y
                captured = 0
                gravity_speed = 0
                startup_timer = 0
                startup_anchor = start_y
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.user_cursor_mode = 0
    {
        draw_sprite(spr_boss_hud,0,159,224)
        if heart &gt; 0
            {
                var heart_scale = heart*0.5681818181818182;
                heart_bar_target = lerp(heart_bar_target,heart_scale,0.15);
                draw_sprite_part_ext(spr_boss_health,0,0,0,heart_bar_target,3,164,226,1,1,c_white,1)
            }
        draw_set_color(c_white)
        draw_set_font(o.text_font)
        draw_set_halign(fa_middle)
        draw_text(213,208,"Guardian")
        draw_set_halign(fa_left)
        if heart &lt; 0 and room != rm_editor and o.pause = 0
            {
                if white_transition_alpha &lt; 1 white_transition_alpha += 0.0025;
                draw_sprite_stretched_ext(spr_thunder,0,0,0,internal_res_width,internal_res_height,c_white,white_transition_alpha)
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_stretched_ext(spr_water,0,view_xview[view_port],view_yview[view_port],view_wview[view_port],view_hview[view_port],c_white,back_alpha)

var pal_alpha = 0; 
if (alpha &gt; 0.5 or phase_flash &gt; 1) pal_alpha = 1;
script_execute(o.pal_swap_script,flash_palette,pal_alpha,false)
if alpha &gt; 0.5 and o.pal_swap_script = pal_swap_dummy
    d3d_set_fog(true,c_yellow,0,0);

if rising_phase &gt; 0 and object_index != obj_guardian_story
    draw_set_blend_mode(bm_subtract);
    
draw_set_alpha(move_alpha)

//Tail Ring Segment Middle
if death = 0
    {
        var anchor_x = x+308+tail_segment_2_lerp;
        var anchor_y = y+140;
        
        var rock_x_1 = anchor_x+lengthdir_x(108,45+rock_angle[5]);
        var rock_y_1 = anchor_y+lengthdir_y(108,45+rock_angle[5]);
        draw_sprite(spr_guardian_tail,2,rock_x_1,rock_y_1)
        
        var rock_x_2 = anchor_x+lengthdir_x(108,68+rock_angle[6]);
        var rock_y_2 = anchor_y+lengthdir_y(108,68+rock_angle[6]);
        draw_sprite(spr_guardian_tail,2,rock_x_2,rock_y_2)
        
        var rock_x_2 = anchor_x+lengthdir_x(108,90+rock_angle[7]);
        var rock_y_2 = anchor_y+lengthdir_y(108,90+rock_angle[7]);
        draw_sprite(spr_guardian_tail,2,rock_x_2,rock_y_2)
        
        var rock_x_3 = anchor_x+lengthdir_x(108,112+rock_angle[8]);
        var rock_y_3 = anchor_y+lengthdir_y(108,112+rock_angle[8]);
        draw_sprite(spr_guardian_tail,2,rock_x_3,rock_y_3)
        
        var rock_x_4 = anchor_x+lengthdir_x(108,135+rock_angle[9]);
        var rock_y_4 = anchor_y+lengthdir_y(108,135+rock_angle[9]);
        draw_sprite(spr_guardian_tail,2,rock_x_4,rock_y_4)
        
        var rock_x_5 = anchor_x+lengthdir_x(106,180+rock_angle[14]);
        var rock_y_5 = anchor_y+lengthdir_y(106,180+rock_angle[14]);
        draw_sprite(spr_guardian_tail,2,rock_x_5,rock_y_5)
        
        var rock_x_6 = anchor_x+lengthdir_x(108,208+rock_angle[10]);
        var rock_y_6 = anchor_y+lengthdir_y(108,208+rock_angle[10]);
        draw_sprite(spr_guardian_tail,2,rock_x_6,rock_y_6)
        
        var rock_x_7 = anchor_x+lengthdir_x(108,227+rock_angle[11]);
        var rock_y_7 = anchor_y+lengthdir_y(108,227+rock_angle[11]);
        draw_sprite(spr_guardian_tail,2,rock_x_7,rock_y_7)
        
        var rock_x_8 = anchor_x+lengthdir_x(108,253+rock_angle[12]);
        var rock_y_8 = anchor_y+lengthdir_y(108,253+rock_angle[12]);
        draw_sprite(spr_guardian_tail,2,rock_x_8,rock_y_8)
    }

//Body Anchor Point
var anchor_x = x+168+(lengthdir_x(70,270+rock_angle[15]));
var anchor_y = y+114+(lengthdir_y(70,270+rock_angle[15]));
draw_sprite(spr_guardian_body,0,anchor_x,anchor_y)

//Head
var anchor_x = x+160+(lengthdir_x(24,270+rock_angle[16]));
var anchor_y = y+80+(lengthdir_y(24,270+rock_angle[16]));
draw_sprite(spr_guardian_head,head_frame,anchor_x,anchor_y)

if death = 0
    {
        //Tail Ring Segment 
        var anchor_x = x+308;
        var anchor_y = y+140;
        
        var rock_x_1 = anchor_x+lengthdir_x(135,220+rock_angle[0]);
        var rock_y_1 = anchor_y+lengthdir_y(135,220+rock_angle[0]);
        draw_sprite(spr_guardian_tail,0,rock_x_1,rock_y_1)
        
        var rock_x_2 = anchor_x+lengthdir_x(130,245+rock_angle[1]);
        var rock_y_2 = anchor_y+lengthdir_y(130,245+rock_angle[1]);
        draw_sprite(spr_guardian_tail,1,rock_x_2,rock_y_2)
        
        var rock_x_3 = anchor_x+lengthdir_x(120,280+rock_angle[2]);
        var rock_y_3 = anchor_y+lengthdir_y(120,280+rock_angle[2]);
        draw_sprite(spr_guardian_tail,0,rock_x_3,rock_y_3)
        
        var rock_x_4 = anchor_x+lengthdir_x(112,304+rock_angle[3]);
        var rock_y_4 = anchor_y+lengthdir_y(112,304+rock_angle[3]);
        draw_sprite(spr_guardian_tail,1,rock_x_4,rock_y_4)
        
        var rock_x_5 = anchor_x+lengthdir_x(106,332+rock_angle[4]);
        var rock_y_5 = anchor_y+lengthdir_y(106,332+rock_angle[4]);
        draw_sprite(spr_guardian_tail,0,rock_x_5,rock_y_5)
        
        var rock_x_6 = anchor_x+lengthdir_x(106,0+rock_angle[13]);
        var rock_y_6 = anchor_y+lengthdir_y(106,0+rock_angle[13]);
        draw_sprite(spr_guardian_tail,1,rock_x_6,rock_y_6)
        
        //Tail Ring Segment 3
        var anchor_x = x+312;
        var anchor_y = y+333;
        
        var rock_x_1 = anchor_x+lengthdir_x(85,64+rock_angle[14]);
        var rock_y_1 = anchor_y+lengthdir_y(85,64+rock_angle[14]);
        draw_sprite(spr_guardian_tail,2,rock_x_1,rock_y_1)
        
        var rock_x_2 = anchor_x+lengthdir_x(85,43+rock_angle[15]);
        var rock_y_2 = anchor_y+lengthdir_y(85,43+rock_angle[15]);
        draw_sprite(spr_guardian_tail,2,rock_x_2,rock_y_2)
        
        var rock_x_3 = anchor_x+lengthdir_x(85,21+rock_angle[16]);
        var rock_y_3 = anchor_y+lengthdir_y(85,21+rock_angle[16]);
        draw_sprite(spr_guardian_tail,2,rock_x_3,rock_y_3)
        
        var rock_x_4 = anchor_x+lengthdir_x(85,0+rock_angle[17]);
        var rock_y_4 = anchor_y+lengthdir_y(85,0+rock_angle[17]);
        draw_sprite(spr_guardian_tail,2,rock_x_4,rock_y_4)
        
        var rock_x_5 = anchor_x+lengthdir_x(85,337+rock_angle[18]);
        var rock_y_5 = anchor_y+lengthdir_y(85,337+rock_angle[18]);
        draw_sprite(spr_guardian_tail,2,rock_x_5,rock_y_5)
        
        var rock_x_6 = anchor_x+lengthdir_x(85,315+rock_angle[19]);
        var rock_y_6 = anchor_y+lengthdir_y(85,315+rock_angle[19]);
        draw_sprite(spr_guardian_tail,2,rock_x_6,rock_y_6)
        
        var rock_x_7 = anchor_x+lengthdir_x(85,270+rock_angle[20]);
        var rock_y_7 = anchor_y+lengthdir_y(85,270+rock_angle[20]);
        draw_sprite(spr_guardian_tail,2,rock_x_7,rock_y_7)
        
        var rock_x_8 = anchor_x+lengthdir_x(85,246+rock_angle[21]);
        var rock_y_8 = anchor_y+lengthdir_y(85,246+rock_angle[21]);
        draw_sprite(spr_guardian_tail,2,rock_x_8,rock_y_8)
        
        var rock_x_9 = anchor_x+lengthdir_x(85,225+rock_angle[22]);
        var rock_y_9 = anchor_y+lengthdir_y(85,225+rock_angle[22]);
        draw_sprite(spr_guardian_tail,2,rock_x_9,rock_y_9)
        
        var rock_x_10 = anchor_x+lengthdir_x(85,202+rock_angle[23]);
        var rock_y_10 = anchor_y+lengthdir_y(85,202+rock_angle[23]);
        draw_sprite(spr_guardian_tail,2,rock_x_10,rock_y_10)
        
        var rock_x_11 = anchor_x+lengthdir_x(85,180+rock_angle[24]);
        var rock_y_11 = anchor_y+lengthdir_y(85,180+rock_angle[24]);
        draw_sprite(spr_guardian_tail,2,rock_x_11,rock_y_11)
        
        //Tail Ring Segment 4
        var anchor_x = x+156;
        var anchor_y = y+333;
        
        var rock_x_1 = anchor_x+lengthdir_x(64,25+rock_angle[25]);
        var rock_y_1 = anchor_y+lengthdir_y(64,25+rock_angle[25]);
        draw_sprite(spr_guardian_tail,3,rock_x_1,rock_y_1)
        
        var rock_x_2 = anchor_x+lengthdir_x(64,66+rock_angle[26]);
        var rock_y_2 = anchor_y+lengthdir_y(64,66+rock_angle[26]);
        draw_sprite(spr_guardian_tail,3,rock_x_2,rock_y_2)
        
        var rock_x_3 = anchor_x+lengthdir_x(64,90+rock_angle[27]);
        var rock_y_3 = anchor_y+lengthdir_y(64,90+rock_angle[27]);
        draw_sprite(spr_guardian_tail,3,rock_x_3,rock_y_3)
        
        var rock_x_4 = anchor_x+lengthdir_x(64,117+rock_angle[28]);
        var rock_y_4 = anchor_y+lengthdir_y(64,117+rock_angle[28]);
        draw_sprite(spr_guardian_tail,3,rock_x_4,rock_y_4)
        
        var rock_x_5 = anchor_x+lengthdir_x(64,139+rock_angle[29]);
        var rock_y_5 = anchor_y+lengthdir_y(64,139+rock_angle[29]);
        draw_sprite(spr_guardian_tail,3,rock_x_5,rock_y_5)
        
        var rock_x_6 = anchor_x+lengthdir_x(64,160+rock_angle[30]);
        var rock_y_6 = anchor_y+lengthdir_y(64,160+rock_angle[30]);
        draw_sprite(spr_guardian_tail,3,rock_x_6,rock_y_6)
        
        var rock_x_7 = anchor_x+lengthdir_x(64,180+rock_angle[31]);
        var rock_y_7 = anchor_y+lengthdir_y(64,180+rock_angle[31]);
        draw_sprite(spr_guardian_tail,3,rock_x_7,rock_y_7)
        
        var rock_x_8 = anchor_x+lengthdir_x(64,202+rock_angle[32]);
        var rock_y_8 = anchor_y+lengthdir_y(64,202+rock_angle[32]);
        draw_sprite(spr_guardian_tail,3,rock_x_8,rock_y_8)
        
        var rock_x_9 = anchor_x+lengthdir_x(64,225+rock_angle[33]);
        var rock_y_9 = anchor_y+lengthdir_y(64,225+rock_angle[33]);
        draw_sprite(spr_guardian_tail,4,rock_x_9,rock_y_9)
    }

shader_reset();
d3d_set_fog(false,0,0,0)
draw_set_blend_mode(bm_normal)
draw_set_alpha(1)

if rising_phase &gt; 0 and object_index != obj_guardian_story
    {
        //Head
        var anchor_x = x+160+(lengthdir_x(24,270+rock_angle[16]));
        var anchor_y = y+80+(lengthdir_y(24,270+rock_angle[16]));
        draw_sprite(spr_guardian_head,2,anchor_x,anchor_y)
        //Lens Flare
        if rising_phase &gt;= 2
            {
                draw_set_blend_mode(bm_add)
                draw_sprite_ext(spr_guardian_lens_flare,0,anchor_x-16,anchor_y-23,1,1,lens_flare_angle,c_white,lens_flare_alpha)
                draw_set_blend_mode(bm_normal)
            }
    }

if (room = rm_editor and (o.user_cursor_mode = 1 or (obj_level_editor.use_debug_hud_mode = 1 and o.user_cursor_mode = 0)))
or (o.debug_hud_mode &gt; 0)
    draw_sprite(spr_user_cursor_minimap,0,startup_anchor_x,startup_anchor);
    
//Guardian "Ghosts"
if ghosts_enabled = 1 and o.pause = 0
    {
        ghosts_timer += 1
        if ghosts_timer &lt; 120
            ghosts_alpha += 0.05;
        if (ghosts_alpha &gt; 1) ghosts_alpha = 1;
        if ghosts_timer &gt; 120
            {
                ghosts_alpha -= 0.05
                if ghosts_alpha &lt; 0
                    {
                        ghosts_alpha = 0
                        ghosts_timer = 0
                        ghosts_enabled = 0
                    }
            }

        var ghosts_count = 0;

        while(ghosts_count &lt;= 1)
            {
                d3d_set_fog(true,c_blue,0,0);
                //draw_set_blend_mode(bm_add)
                draw_set_alpha(ghosts_alpha)
                
                //Tail Ring Segment Middle
                var anchor_x = ghost_x[ghosts_count]+308+tail_segment_2_lerp;
                var anchor_y = ghost_y[ghosts_count]+140;
                
                var rock_x_1 = anchor_x+lengthdir_x(108,45+rock_angle[5]);
                var rock_y_1 = anchor_y+lengthdir_y(108,45+rock_angle[5]);
                draw_sprite(spr_guardian_tail,2,rock_x_1,rock_y_1)
                
                var rock_x_2 = anchor_x+lengthdir_x(108,68+rock_angle[6]);
                var rock_y_2 = anchor_y+lengthdir_y(108,68+rock_angle[6]);
                draw_sprite(spr_guardian_tail,2,rock_x_2,rock_y_2)
                
                var rock_x_2 = anchor_x+lengthdir_x(108,90+rock_angle[7]);
                var rock_y_2 = anchor_y+lengthdir_y(108,90+rock_angle[7]);
                draw_sprite(spr_guardian_tail,2,rock_x_2,rock_y_2)
                
                var rock_x_3 = anchor_x+lengthdir_x(108,112+rock_angle[8]);
                var rock_y_3 = anchor_y+lengthdir_y(108,112+rock_angle[8]);
                draw_sprite(spr_guardian_tail,2,rock_x_3,rock_y_3)
                
                var rock_x_4 = anchor_x+lengthdir_x(108,135+rock_angle[9]);
                var rock_y_4 = anchor_y+lengthdir_y(108,135+rock_angle[9]);
                draw_sprite(spr_guardian_tail,2,rock_x_4,rock_y_4)
                
                var rock_x_5 = anchor_x+lengthdir_x(106,180+rock_angle[14]);
                var rock_y_5 = anchor_y+lengthdir_y(106,180+rock_angle[14]);
                draw_sprite(spr_guardian_tail,2,rock_x_5,rock_y_5)
                
                var rock_x_6 = anchor_x+lengthdir_x(108,208+rock_angle[10]);
                var rock_y_6 = anchor_y+lengthdir_y(108,208+rock_angle[10]);
                draw_sprite(spr_guardian_tail,2,rock_x_6,rock_y_6)
                
                var rock_x_7 = anchor_x+lengthdir_x(108,227+rock_angle[11]);
                var rock_y_7 = anchor_y+lengthdir_y(108,227+rock_angle[11]);
                draw_sprite(spr_guardian_tail,2,rock_x_7,rock_y_7)
                
                var rock_x_8 = anchor_x+lengthdir_x(108,253+rock_angle[12]);
                var rock_y_8 = anchor_y+lengthdir_y(108,253+rock_angle[12]);
                draw_sprite(spr_guardian_tail,2,rock_x_8,rock_y_8)
                
                //Body Anchor Point
                var anchor_x = ghost_x[ghosts_count]+168+(lengthdir_x(70,270+rock_angle[15]));
                var anchor_y = ghost_y[ghosts_count]+114+(lengthdir_y(70,270+rock_angle[15]));
                draw_sprite(spr_guardian_body,0,anchor_x,anchor_y)
                
                //Head
                var anchor_x = ghost_x[ghosts_count]+160+(lengthdir_x(24,270+rock_angle[16]));
                var anchor_y = ghost_y[ghosts_count]+80+(lengthdir_y(24,270+rock_angle[16]));
                draw_sprite(spr_guardian_head,head_frame,anchor_x,anchor_y)
                
                //Tail Ring Segment 
                var anchor_x = ghost_x[ghosts_count]+308;
                var anchor_y = ghost_y[ghosts_count]+140;
                
                var rock_x_1 = anchor_x+lengthdir_x(135,220+rock_angle[0]);
                var rock_y_1 = anchor_y+lengthdir_y(135,220+rock_angle[0]);
                draw_sprite(spr_guardian_tail,0,rock_x_1,rock_y_1)
                
                var rock_x_2 = anchor_x+lengthdir_x(130,245+rock_angle[1]);
                var rock_y_2 = anchor_y+lengthdir_y(130,245+rock_angle[1]);
                draw_sprite(spr_guardian_tail,1,rock_x_2,rock_y_2)
                
                var rock_x_3 = anchor_x+lengthdir_x(120,280+rock_angle[2]);
                var rock_y_3 = anchor_y+lengthdir_y(120,280+rock_angle[2]);
                draw_sprite(spr_guardian_tail,0,rock_x_3,rock_y_3)
                
                var rock_x_4 = anchor_x+lengthdir_x(112,304+rock_angle[3]);
                var rock_y_4 = anchor_y+lengthdir_y(112,304+rock_angle[3]);
                draw_sprite(spr_guardian_tail,1,rock_x_4,rock_y_4)
                
                var rock_x_5 = anchor_x+lengthdir_x(106,332+rock_angle[4]);
                var rock_y_5 = anchor_y+lengthdir_y(106,332+rock_angle[4]);
                draw_sprite(spr_guardian_tail,0,rock_x_5,rock_y_5)
                
                var rock_x_6 = anchor_x+lengthdir_x(106,0+rock_angle[13]);
                var rock_y_6 = anchor_y+lengthdir_y(106,0+rock_angle[13]);
                draw_sprite(spr_guardian_tail,1,rock_x_6,rock_y_6)
                
                //Tail Ring Segment 3
                var anchor_x = ghost_x[ghosts_count]+312;
                var anchor_y = ghost_y[ghosts_count]+333;
                
                var rock_x_1 = anchor_x+lengthdir_x(85,64+rock_angle[14]);
                var rock_y_1 = anchor_y+lengthdir_y(85,64+rock_angle[14]);
                draw_sprite(spr_guardian_tail,2,rock_x_1,rock_y_1)
                
                var rock_x_2 = anchor_x+lengthdir_x(85,43+rock_angle[15]);
                var rock_y_2 = anchor_y+lengthdir_y(85,43+rock_angle[15]);
                draw_sprite(spr_guardian_tail,2,rock_x_2,rock_y_2)
                
                var rock_x_3 = anchor_x+lengthdir_x(85,21+rock_angle[16]);
                var rock_y_3 = anchor_y+lengthdir_y(85,21+rock_angle[16]);
                draw_sprite(spr_guardian_tail,2,rock_x_3,rock_y_3)
                
                var rock_x_4 = anchor_x+lengthdir_x(85,0+rock_angle[17]);
                var rock_y_4 = anchor_y+lengthdir_y(85,0+rock_angle[17]);
                draw_sprite(spr_guardian_tail,2,rock_x_4,rock_y_4)
                
                var rock_x_5 = anchor_x+lengthdir_x(85,337+rock_angle[18]);
                var rock_y_5 = anchor_y+lengthdir_y(85,337+rock_angle[18]);
                draw_sprite(spr_guardian_tail,2,rock_x_5,rock_y_5)
                
                var rock_x_6 = anchor_x+lengthdir_x(85,315+rock_angle[19]);
                var rock_y_6 = anchor_y+lengthdir_y(85,315+rock_angle[19]);
                draw_sprite(spr_guardian_tail,2,rock_x_6,rock_y_6)
                
                var rock_x_7 = anchor_x+lengthdir_x(85,270+rock_angle[20]);
                var rock_y_7 = anchor_y+lengthdir_y(85,270+rock_angle[20]);
                draw_sprite(spr_guardian_tail,2,rock_x_7,rock_y_7)
                
                var rock_x_8 = anchor_x+lengthdir_x(85,246+rock_angle[21]);
                var rock_y_8 = anchor_y+lengthdir_y(85,246+rock_angle[21]);
                draw_sprite(spr_guardian_tail,2,rock_x_8,rock_y_8)
                
                var rock_x_9 = anchor_x+lengthdir_x(85,225+rock_angle[22]);
                var rock_y_9 = anchor_y+lengthdir_y(85,225+rock_angle[22]);
                draw_sprite(spr_guardian_tail,2,rock_x_9,rock_y_9)
                
                var rock_x_10 = anchor_x+lengthdir_x(85,202+rock_angle[23]);
                var rock_y_10 = anchor_y+lengthdir_y(85,202+rock_angle[23]);
                draw_sprite(spr_guardian_tail,2,rock_x_10,rock_y_10)
                
                var rock_x_11 = anchor_x+lengthdir_x(85,180+rock_angle[24]);
                var rock_y_11 = anchor_y+lengthdir_y(85,180+rock_angle[24]);
                draw_sprite(spr_guardian_tail,2,rock_x_11,rock_y_11)
                
                //Tail Ring Segment 4
                var anchor_x = ghost_x[ghosts_count]+156;
                var anchor_y = ghost_y[ghosts_count]+333;
                
                var rock_x_1 = anchor_x+lengthdir_x(64,25+rock_angle[25]);
                var rock_y_1 = anchor_y+lengthdir_y(64,25+rock_angle[25]);
                draw_sprite(spr_guardian_tail,3,rock_x_1,rock_y_1)
                
                var rock_x_2 = anchor_x+lengthdir_x(64,66+rock_angle[26]);
                var rock_y_2 = anchor_y+lengthdir_y(64,66+rock_angle[26]);
                draw_sprite(spr_guardian_tail,3,rock_x_2,rock_y_2)
                
                var rock_x_3 = anchor_x+lengthdir_x(64,90+rock_angle[27]);
                var rock_y_3 = anchor_y+lengthdir_y(64,90+rock_angle[27]);
                draw_sprite(spr_guardian_tail,3,rock_x_3,rock_y_3)
                
                var rock_x_4 = anchor_x+lengthdir_x(64,117+rock_angle[28]);
                var rock_y_4 = anchor_y+lengthdir_y(64,117+rock_angle[28]);
                draw_sprite(spr_guardian_tail,3,rock_x_4,rock_y_4)
                
                var rock_x_5 = anchor_x+lengthdir_x(64,139+rock_angle[29]);
                var rock_y_5 = anchor_y+lengthdir_y(64,139+rock_angle[29]);
                draw_sprite(spr_guardian_tail,3,rock_x_5,rock_y_5)
                
                var rock_x_6 = anchor_x+lengthdir_x(64,160+rock_angle[30]);
                var rock_y_6 = anchor_y+lengthdir_y(64,160+rock_angle[30]);
                draw_sprite(spr_guardian_tail,3,rock_x_6,rock_y_6)
                
                var rock_x_7 = anchor_x+lengthdir_x(64,180+rock_angle[31]);
                var rock_y_7 = anchor_y+lengthdir_y(64,180+rock_angle[31]);
                draw_sprite(spr_guardian_tail,3,rock_x_7,rock_y_7)
                
                var rock_x_8 = anchor_x+lengthdir_x(64,202+rock_angle[32]);
                var rock_y_8 = anchor_y+lengthdir_y(64,202+rock_angle[32]);
                draw_sprite(spr_guardian_tail,3,rock_x_8,rock_y_8)
                
                var rock_x_9 = anchor_x+lengthdir_x(64,225+rock_angle[33]);
                var rock_y_9 = anchor_y+lengthdir_y(64,225+rock_angle[33]);
                draw_sprite(spr_guardian_tail,4,rock_x_9,rock_y_9)
                
                d3d_set_fog(false,0,0,0)
                //draw_set_blend_mode(bm_normal)
                draw_set_alpha(1)
        
                ghosts_count += 1
            }
    }

event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
