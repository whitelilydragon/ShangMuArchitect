<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_algae_cutter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_floater</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
scr_enemy_hp(16)
legframe = 0
legoffset = 15
legsound = 0
var_scale = 1
can_hold_items = 0
dropped_goodies = obj_gold_gem
//Wasp Variables
timer = 0
tile_scanner_timer = 0
//Editor Mode Variables
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
flash_palette = spr_algae_cutter_palette
death_type = 1
death_frame = 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()
if o.pause = 0 and death = 0 and freeze = 0
    {
        var_scale = 1;
        if item = spr_mod_chip_extra_large var_scale = 2;
        //Follow the player
        if o.px &lt; x  xdir = -1;
        if o.px &gt;= x xdir =  1;
        //Animation Loops
        switch(state)
            {
                //Idle
                case 0:
                    {
                        //Animations
                        frame += 0.35
                        if (frame &gt; 5.8) frame = 0;
                        speed = 0

                        //Fly quickly based on difficulty scaling
                        var flight_speed = 6;
                        switch(o.user_enemy_level)
                            {
                                case 0: {flight_speed = 2; break;} //Easy
                                case 1: {flight_speed = 4; break;} //Normal
                                case 2: {flight_speed = 6; break;} //Hard
                                case 3: {flight_speed = 8; break;} //Hardcore
                                case 4: {flight_speed = 10; break;} //Insanity
                            }

                        //Search for Player's X/Y Position Below Facing Direction
                        if point_in_rectangle(o.px,o.py,x-168,y-32,x+168,y+168)
                        and o.user_cursor_mode = 0
                            {
                                state = 1
                                timer = 0
                                frame = 6
                            }
                        break;
                    }
                //Attacking
                case 1:
                    {
                        timer += 1
                        frame += 0.5
                        if (frame &gt; 13.8) frame = 13;

                        //Fly quickly based on difficulty scaling
                        var flight_speed = 6;
                        switch(o.user_enemy_level)
                            {
                                case 0: {flight_speed = 4; break;}  //Easy
                                case 1: {flight_speed = 6; break;}  //Normal
                                case 2: {flight_speed = 8; break;}  //Hard
                                case 3: {flight_speed = 10; break;} //Hardcore
                                case 4: {flight_speed = 12; break;} //Insanity
                            }

                        if timer = 1
                            audio_play_sound(snd_dragonfly,50,false);

                        if frame &gt;= 11
                            {
                                speed = flight_speed
                                direction = point_direction(x,y,o.universal_player_x,o.universal_player_y)
                            }

                        if timer &gt; 24
                            {
                                speed = flight_speed
                                //Search For Positions To Deal Damage
                                if point_distance(o.universal_player_x,o.universal_player_y,x,y) &lt; 32
                                    {
                                        state = 2
                                        timer = 0
                                        frame = 14
                                        if o.hurt[0] = 0 and o.hurt[1] = 0
                                        and o.shield_invuln = 32
                                        and not (o.shield_active = 1 and o.shield=spr_shield_metal)
                                            scr_enemy_deal_damage(0.4,1,2);
                                    }
                                //Bomb Cube
                                var instance_ID = collision_circle(x,y,32,obj_player_cube_alt,false,true);
                                if instance_exists(instance_ID)
                                    scr_enemy_bomb_cube_damage(instance_ID);
                            }
                        if (tile_layer_find(surface_flats,x,y+16)
                        and timer &gt; 24) and
                        (x &gt; start_x + 128 or y &gt; start_y + 256)
                            {
                                state = 2
                                timer = 0
                                frame = 14
                            }
                        break;
                    }
                //Resetting Behavior Loop
                case 2:
                    {
                        speed = 0
                        frame += 0.15
                        if (frame &gt; 16.8)
                            {
                                state = 0
                                timer = 0
                                frame = 0
                            }
                        break;
                    }
            }
    } //End of pause check
else
    speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if room = rm_editor and o.user_cursor_mode = 1
    {
        draw_sprite_part(spr_water_type_sludge,0,0,0,4,32,start_x-144,start_y-16)
        draw_sprite_part(spr_water_type_sludge,0,28,0,4,32,start_x+144,start_y-16)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
