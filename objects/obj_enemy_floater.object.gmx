<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bomb_flower_modifier</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floaters Do Nothing
event_inherited()
can_float = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death State For Floaters
event_inherited()

if o.pause = 0
    {
        switch(death)
            {
                case 0: {break;}
                case 1:
                    {
                        //Fly through the air
                        x += lengthdir_x(enemy_speed,enemy_direction)
                        y += lengthdir_y(enemy_speed,enemy_direction)
                        //Rotate sprite
                        frame = death_frame;
                        angle += enemy_speed*xdir;
                        //Reset rotation beyond the 0-360 range
                        if enemy_direction &gt; 359 enemy_direction = 0;
                        if enemy_direction &lt; 0 enemy_direction = 360;
                        //Slowly fall towards the floor
                        if enemy_direction &gt;= 315 or enemy_direction &lt;= 90 enemy_direction -= enemy_direction_speed;
                        if enemy_direction &gt; 90 and enemy_direction &lt; 225  enemy_direction += enemy_direction_speed;
                        //Fall faster if we have a downward angle
                        if enemy_direction_speed &lt; 8 enemy_direction_speed += 0.05;
                        if enemy_speed &lt; 8           enemy_speed += 0.05;
                
                        //Check for Tiles on Layer 0. (Flat Surface Collisions)
                        var enemy_surface_id_bottom = tile_layer_find(surface_flats,x,y+16)      //Bottom Collision Sensor
                        //Slope Collision Sensor
                        var enemy_ramp_id           = tile_layer_find(surface_slopes,x,y+16)
                
                        //---------Collisions---------//
                        //----------------------------//

                        if can_die_upon_impact = 1
                            {
                                //If we have collided with any flat surfaces, explode the enemy
                                if tile_exists(enemy_surface_id_bottom)
                                //If we have collided with the boundaries of the room, explode
                                or x &lt; 0 or x &gt; room_width
                                or y &gt; room_height
                                    {
                                        death = 2
                                        enemy_explosion_x = x
                                        enemy_explosion_y = y
                                        enemy_explosion_frame = 0
                                        scr_enemy_drop_petal_shard(x,y-16,object_index)
                                        if play_sound = 1 audio_play_sound(snd_enemy_destroyed,50,false);
                                    }
                                //If we are colliding with a slope tile, check its surface based on X position and explode
                                if tile_exists(enemy_ramp_id)
                                    {    
                                        //Collect Background ID of the Tile
                                        var enemy_ramp_id_debug=tile_get_background(enemy_ramp_id)
                        
                                        //Get Coordinates Relative to the Tile's Origins
                                        var enemy_ramp_pos_x=abs(tile_get_x(enemy_ramp_id)-x)   //Get X
                                        var enemy_ramp_pos_y=abs(tile_get_y(enemy_ramp_id)-y)   //Get Y
                        
                                        //If we are clipping to the slope's Y height, explode
                                        if (o.orig_clip[enemy_ramp_id_debug,0]!=-1)
                                            {
                                                //Check If Y is Greater Than Slope's Current Height
                                                if enemy_ramp_pos_y &gt;= o.orig_clip[enemy_ramp_id_debug,enemy_ramp_pos_x]
                                                    {
                                                        death = 2;
                                                        enemy_explosion_x = x
                                                        enemy_explosion_y = y
                                                        enemy_explosion_frame = 0
                                                        scr_enemy_drop_petal_shard(x,y-16,object_index)
                                                        if play_sound = 1 audio_play_sound(snd_enemy_destroyed,50,false);
                                                    }
                                            }
                                    }
                            }
                        break;
                    }
                case 2:
                    {
                        //Iterate Explosion Animations
                        enemy_explosion_frame += 0.24
                        if enemy_explosion_frame &gt; 7.4
                            {
                                if room = rm_editor or o.user_enemy_level &gt;= 4
                                    {
                                        var obj_id = instance_create(start_x,start_y,object_index);
                                        obj_id.item = item
                                        instance_destroy()
                                    }
                                else instance_destroy();
                            }
                        break;
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
