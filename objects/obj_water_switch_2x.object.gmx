<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_switch_water_2x</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_switch_pad</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_level_editor.user_place_allow = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Logic

//Pause Safety Check
if obj_game_logic.pause = 0
{

var instance_ID  = collision_rectangle(x-16,y-16,x+16,y,obj_player_cube_alt,false,true);
var mega_item_ID = collision_rectangle(x-16,y-16,x+16,y,obj_mega_item_parent,false,true);

timer += 1
if timer &gt;= 8
    {
        var node_ID = collision_rectangle(x,0,x+sprite_get_width(sprite_index),room_height,obj_instant_water_specify,false,true);
        if instance_exists(node_ID)
            {
               height = node_ID.y
               draw_height = 1
            }
        else
            {
                height = y+64
                draw_height = 0
            }
        //Visibility Logic
        if draw_height = 1
            {
                if room = rm_editor
                    {
                        if (obj_level_editor.use_debug_hud_mode = 1 and obj_game_logic.user_cursor_mode = 0)
                        or (obj_game_logic.user_cursor_mode = 1)
                            draw_height = 1;
                        else
                            draw_height = 0;
                    }
                else
                    {
                        if (obj_game_logic.debug_hud_mode &gt; 0)
                            draw_height = 1;
                        else
                            draw_height = 0;
                    }
            }
        timer = 0
    }

if obj_game_logic.user_cursor_mode = 0
    {
        //If the player is close enough to us, set visibility of tile to false
        if point_in_rectangle(obj_game_logic.px,obj_game_logic.py,x-16,y-16,x+16,y)
        or instance_exists(instance_ID)
        or instance_exists(mega_item_ID)
            {
                image_index = 2
                obj_game_logic.water_line = height;
                if sound_confirm = 0
                    {
                        audio_play_sound(snd_switch,50,false)
                        audio_play_sound(snd_flood_fill,50,false)
                        scr_set_screen_shake(128,3);
                        obj_game_logic.use_flood_fill_speed = 4
                        sound_confirm = 1
                    }
            }
        //If the player is too far away from us, set visibility of tile to true
        else
            {
                image_index = 1
                sound_confirm = 0
            }
    }

if room = rm_editor
    {
        var parent = obj_level_editor;
        //Display FOF Overlay If Hovered Over
        if (point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,x-16,y-60,x+16,y)
        and parent.use_tile_menu = 0)
            fof_overlay_enable = 1;

        if fof_overlay_enable = 1
            {
                if device_mouse_x_to_gui(0) &lt; parent.user_editor_hud_offset-6
                    parent.user_place_allow = 1;
                if !point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,x-16,y-60,x+16,y)
                or device_mouse_x_to_gui(0) &gt;= parent.user_editor_hud_offset-6
                    {
                        fof_overlay_enable = 0
                        parent.user_place_allow = 0
                    }
                if (mouse_check_button_pressed(parent.joy_mouse_button_left) or parent.use_put_here = 1)
                and parent.use_cursor_y &lt; y-8
                    {
                        iterate += 1
                        if iterate &gt; 2
                            iterate = 0;
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                    }
                if (mouse_check_button_pressed(parent.joy_mouse_button_right) or parent.use_delete = 1)
                and parent.use_cursor_y &lt; y-8
                    {
                        iterate -= 1
                        if iterate &lt; 0
                            iterate = 2;
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                    }
                //Change boost pad object based on angle
                switch(iterate)
                    {
                        case 0: {instance_change(obj_water_switch,true);    break;}
                        case 1: {instance_change(obj_water_switch_2x,true); break;}
                        case 2: {instance_change(obj_water_switch_3x,true); break;}
                    }
            }
    }

} //End of Pause Safety Check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if draw_height = 1
    {
        draw_line_width_colour(x,y+16,x,height+16,4,c_yellow,c_orange)
        draw_line_width_colour(x,y+16,x,height+16,2,c_orange,c_yellow)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
