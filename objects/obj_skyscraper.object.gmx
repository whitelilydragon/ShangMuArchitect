<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_skyscraper_day_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_offset = 0
o = obj_game_logic
item = 0
give_item = 0
logic_timer = 0
timer_length = 4
draw_yes = 1
draw_player = 0
clip_surface = -1
if obj_game_logic.performance_profile = 0
    draw_yes = 0;
sprite_index_0 = spr_skyscraper_day_0
sprite_index_1 = spr_skyscraper_day_2
sprite_index_2 = spr_skyscraper_day_3
sprite_index_3 = spr_skyscraper_day_4
sprite_index_4 = spr_skyscraper_day_5
sprite_index_5 = spr_skyscraper_day_1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(clip_surface)
    surface_free(clip_surface);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.pause = 0
    x_offset += o.hsp*0.15;

if x_offset &gt;= 149 or x_offset &lt;= -149
    x_offset = 0;

if o.performance_profile = 1
    {
        if rectangle_in_rectangle(o.px-16,o.py-64,o.px+16,o.py+64,x,y,x+128,y+120)
            draw_player = 1;
        else
            draw_player = 0;
        if o.user_cursor_mode = 1
            draw_player = 0;
    }

logic_timer += 1
if logic_timer &gt; timer_length
    {
        //Check if we should disable drawing reflections
        var check_ID = collision_point(x+16,y+122,obj_skyscraper,false,true);
        if instance_exists(check_ID)
            {
                if check_ID.sprite_index = spr_skyscraper_day_2
                or check_ID.sprite_index = spr_skyscraper_night_2
                    draw_yes = 0;
                else
                    draw_yes = 1;
                if instance_exists(obj_bg_logic)
                or instance_exists(obj_bg_logic_nighttime)
                    draw_yes = 1;
            }
        else
            draw_yes = 1;
        if obj_game_logic.performance_profile = 0
            draw_yes = 0;
        //Change to Day/Night
        if instance_exists(obj_bg_logic_night)
        or instance_exists(obj_bg_logic_nighttime)
        or instance_exists(obj_bg_space)
        or instance_exists(obj_bg_space_night)
        or instance_exists(obj_bg_logic_mnt_nite)
        or instance_exists(obj_bg_logic_mnt_nighttime)
        or instance_exists(obj_bg_city_sewers)
        or instance_exists(obj_bg_logic_lagoon_sunrise)
            {
                sprite_index_0 = spr_skyscraper_night_0
                sprite_index_1 = spr_skyscraper_night_2
                sprite_index_2 = spr_skyscraper_night_6
                sprite_index_3 = spr_skyscraper_night_4
                sprite_index_4 = spr_skyscraper_night_5
                sprite_index_5 = spr_skyscraper_night_1   
                if instance_exists(obj_bg_logic_nighttime)
                    sprite_index_2 = spr_skyscraper_day_7;
                if instance_exists(obj_bg_space)
                or instance_exists(obj_bg_logic_lagoon_sunrise)
                    {
                        sprite_index_2 = spr_skyscraper_day_9;
                        if obj_game_logic.performance_profile = 1
                            draw_yes = 1;
                    }
                if instance_exists(obj_bg_logic_mnt_nite)
                    sprite_index_2 = spr_skyscraper_day_12;
                if instance_exists(obj_bg_logic_mnt_nighttime)
                    sprite_index_2 = spr_skyscraper_day_13;
                if instance_exists(obj_bg_city_sewers)
                    sprite_index_2 = spr_skyscraper_day_10;
                if instance_exists(obj_bg_space_night)
                    {
                        sprite_index_2 = spr_skyscraper_day_14;
                        if obj_game_logic.performance_profile = 1
                            draw_yes = 1;
                    }
            }
        if instance_exists(obj_bg_city)
        or instance_exists(obj_bg_sushi_bar)
            {
                sprite_index_0 = spr_skyscraper_night_0
                sprite_index_1 = spr_skyscraper_night_2
                sprite_index_2 = spr_skyscraper_night_3
                sprite_index_3 = spr_skyscraper_night_4
                sprite_index_4 = spr_skyscraper_night_5
                sprite_index_5 = spr_skyscraper_night_1
            }
        if instance_exists(obj_bg_logic)
        or instance_exists(obj_bg_logic_alt)
            {
                sprite_index_0 = spr_skyscraper_day_0
                sprite_index_1 = spr_skyscraper_day_2
                sprite_index_2 = spr_skyscraper_day_6
                sprite_index_3 = spr_skyscraper_day_4
                sprite_index_4 = spr_skyscraper_day_5
                sprite_index_5 = spr_skyscraper_day_1
                if instance_exists(obj_bg_logic)
                    sprite_index_2 = spr_skyscraper_day_7;
            }
        if instance_exists(obj_bg_logic_lagoon)
        or instance_exists(obj_bg_logic_mnt)
        or instance_exists(obj_bg_city_day)
            {
                sprite_index_0 = spr_skyscraper_day_0
                sprite_index_1 = spr_skyscraper_day_2
                sprite_index_2 = spr_skyscraper_day_3
                sprite_index_3 = spr_skyscraper_day_4
                sprite_index_4 = spr_skyscraper_day_5
                sprite_index_5 = spr_skyscraper_day_1
                if instance_exists(obj_bg_logic_lagoon)
                    sprite_index_2 = spr_skyscraper_day_8;
                if instance_exists(obj_bg_logic_mnt)
                    sprite_index_2 = spr_skyscraper_day_11;
            }
        logic_timer = 0
        timer_length = 30
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(clip_surface)
    surface_free(clip_surface);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = spr_skyscraper_day_0
    {
        draw_sprite(sprite_index_0,0,x,y)
    }
if sprite_index = spr_skyscraper_day_2
    {
        draw_sprite(sprite_index_5,0,x,y)
        if draw_yes = 1
            draw_sprite_clip(sprite_index_2,0,x+x_offset,y,x,y,128,120)
        if draw_player = 1
            {
                // create a surface if it doesn't exist:
                if (!surface_exists(clip_surface))
                    clip_surface = surface_create(128,120);
                // clear and start drawing to surface:
                draw_set_blend_mode(bm_add)
                surface_set_target(clip_surface);
                draw_clear_alpha(c_black, 0);
                // draw things here, subtracting (clip_x, clip_y) from coordinates:
                if o.alt_skin = 0
                    draw_sprite_ext(o.skin,o.frame,(o.px - x)+8,(o.py - y)-8,o.xdir,1,o.angle_a,c_white,1);
                else
                    {
                        var alt_skin_draw = spr_carol_old;
                        switch(o.skin)
                            {
                                case spr_lilac: {alt_skin_draw = spr_lilac_old; if o.alt_skin = 2 alt_skin_draw = spr_lilac_new; break;}
                                case spr_carol: {alt_skin_draw = spr_carol_old; if o.alt_skin = 2 alt_skin_draw = spr_carol_new; break;}
                                case spr_milla: {alt_skin_draw = spr_milla_new; break;}
                                case spr_spade: {alt_skin_draw = spr_spade; break;}
                            }
                        draw_sprite_ext(alt_skin_draw,o.frame,(o.px - x)+8,(o.py - y)-8,o.xdir,1,o.angle_a,c_white,1);
                    }
                // finish and draw the surface itself:
                surface_reset_target();
                draw_surface(clip_surface, x, y);
                draw_set_blend_mode(bm_normal)
            }
        else
            {
                if surface_exists(clip_surface)
                    surface_free(clip_surface);
            }
        draw_sprite(sprite_index_1,0,x,y)
    }
if sprite_index = spr_skyscraper_day_4
    {
        draw_sprite(sprite_index_4,0,x,y)
        if draw_yes = 1
            draw_sprite_clip(sprite_index_2,0,x+x_offset,y,x,y,128,63);
        if draw_player = 1
            {
                // create a surface if it doesn't exist:
                if (!surface_exists(clip_surface))
                    clip_surface = surface_create(128,63);
                // clear and start drawing to surface:
                draw_set_blend_mode(bm_add)
                surface_set_target(clip_surface);
                draw_clear_alpha(c_black, 0);
                // draw things here, subtracting (clip_x, clip_y) from coordinates:
                if o.alt_skin = 0
                    draw_sprite_ext(o.skin,o.frame,(o.px - x)+8,(o.py - y)-8,o.xdir,1,o.angle_a,c_white,1);
                else
                    {
                        var alt_skin_draw = spr_carol_old;
                        switch(o.skin)
                            {
                                case spr_lilac: {alt_skin_draw = spr_lilac_old; if o.alt_skin = 2 alt_skin_draw = spr_lilac_new; break;}
                                case spr_carol: {alt_skin_draw = spr_carol_old; if o.alt_skin = 2 alt_skin_draw = spr_carol_new; break;}
                                case spr_milla: {alt_skin_draw = spr_milla_new; break;}
                                case spr_spade: {alt_skin_draw = spr_spade; break;}
                            }
                        draw_sprite_ext(alt_skin_draw,o.frame,(o.px - x)+8,(o.py - y)-8,o.xdir,1,o.angle_a,c_white,1);
                    }
                // finish and draw the surface itself:
                surface_reset_target();
                draw_surface(clip_surface, x, y);
                draw_set_blend_mode(bm_normal)
            }
        else
            {
                if surface_exists(clip_surface)
                    surface_free(clip_surface);
            }
        draw_sprite(sprite_index_3,0,x,y)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
