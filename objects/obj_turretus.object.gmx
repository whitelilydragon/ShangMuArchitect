<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_turretus</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_dropper</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited();
scr_enemy_hp(8)
hp_offset = -sprite_height-16
flash_palette = spr_turretus_palette
death_frame = 0
sound = 0                           //Enemy Sound Effect
dropped_goodies = obj_gold_gem
//Bullet
bullet_x = 0
bullet_y = 0
bullet_timer = 0
bullet_frame = 0
bullet_speed = 0
bullet_active = 0
bullet_scanner_timer = 0
//Editor Mode Variables
width_x = sprite_width/2
height_y = sprite_height/2

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited();

if o.pause = 0 and freeze = 0
    {
        if captured = 1 and object_index = obj_turretus and death = 0
            instance_change(obj_turretus_child,true);

        if death = 0
            {
                switch(state)
                    {
                        //Idle
                        case 0:
                            {
                                //Animations
                                frame += 0.18;
                                if frame &gt; 9.8 frame = 0;
                                //Iterate Attack State
                                being += 1;
                                if item = spr_mod_chip_speed being += 3;
                                if being &gt;= 118
                                    {
                                        if o.user_cursor_mode = 0 state = 1;
                                        else                      being = 0;
                                    }
                                //Face The Player
                                if obj_game_logic.px &lt;  x xdir = -1;
                                if obj_game_logic.px &gt;= x xdir = 1;
                                //Reset Timer If Outside The Camera
                                if o.user_enemy_level &lt;= 1
                                    {
                                        if (x &lt; view_xview[view_port] or x &gt; view_xview[view_port]+view_wview[view_port])
                                        or (y &lt; view_yview[view_port] or y &gt; view_yview[view_port]+(view_hview[view_port]-64))
                                            being = 0;
                                    }
                                break;
                            }
                        //Attack
                        case 1:
                            {
                                if frame &lt; 11 frame = 11;
                                frame += 0.18
                                if frame &gt; 26.8
                                    {
                                        frame = 0
                                        being = 0
                                        state = 0
                                        sound = 0
                                    }
                                if frame &gt; 20 and sound = 0
                                    {
                                        sound = 1
                                        bullet_x = x+(18*xdir)
                                        bullet_y = y-38
                                        if enemy_growth != 0
                                            {
                                                bullet_x = x+(36*xdir)
                                                bullet_y = y-76
                                            }
                                        bullet_timer = 0
                                        bullet_frame = 0
                                        bullet_speed = 0
                                        bullet_active = 1
                                        if play_sound = 1 audio_play_sound(snd_enemy_shoot,50,false);
                                    }
                            }
                    }
            }
        //Bullet Projectile
        if bullet_active = 1
            {
                if bullet_timer = 0
                    {
                        bullet_y += bullet_speed
                        bullet_speed += 0.24
                        bullet_x += xdir*5
                    }
                var enemy_surface_id = -1;
                var enemy_bullet_id  = -1;
                var enemy_ramp_confirm = 0;

                bullet_scanner_timer += 1
                if bullet_scanner_timer &gt;= 5
                    {
                        //Check for Tiles on Layer 0. (Flat Surface Collisions)
                        enemy_surface_id        = tile_layer_find(surface_flats,bullet_x,bullet_y);
                        //Slope Collision Sensor
                        enemy_bullet_id           = tile_layer_find(surface_slopes,bullet_x,bullet_y);
                        bullet_scanner_timer = 0
                    }

                //---------Collisions---------//
                //----------------------------//

                //If we are colliding with a slope tile, check its surface based on X position and explode
                if tile_exists(enemy_bullet_id)
                    {    
                        //Collect Background ID of the Tile
                        var enemy_ramp_id_debug=tile_get_background(enemy_bullet_id)
        
                        //Get Coordinates Relative to the Tile's Origins
                        var enemy_ramp_pos_x=abs(tile_get_x(enemy_bullet_id)-bullet_x)   //Get X
                        var enemy_ramp_pos_y=abs(tile_get_y(enemy_bullet_id)-bullet_y)   //Get Y
        
                        //If we are clipping to the slope's Y height, explode
                        if (obj_game_logic.orig_clip[enemy_ramp_id_debug,0]!=-1)
                            {
                                //Check If Y is Greater Than Slope's Current Height
                                if enemy_ramp_pos_y &gt;= obj_game_logic.orig_clip[enemy_ramp_id_debug,enemy_ramp_pos_x]
                                    enemy_ramp_confirm = 1;
                            }
                    }
                //If we have collided with any flat surfaces, explode
                if (bullet_timer = 0) and ((tile_exists(enemy_surface_id) or enemy_ramp_confirm = 1)
                //If we have collided with the boundaries of the room, explode
                or bullet_x &lt; 0 or x &gt; room_width
                or bullet_y &gt; room_height)
                    {
                        bullet_timer = 1
                        enemy_explosion_x = bullet_x
                        enemy_explosion_y = bullet_y
                        enemy_explosion_frame = 0
                        if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                    }
                if (bullet_timer = 0
                and obj_game_logic.hurt[0] = 0 and obj_game_logic.hurt[1] = 0
                and obj_game_logic.shield_invuln = 32
                and point_distance(bullet_x,bullet_y,obj_game_logic.universal_player_x,obj_game_logic.universal_player_y) &lt; 32)
                    {
                        bullet_timer = 1
                        enemy_explosion_x = bullet_x
                        enemy_explosion_y = bullet_y
                        enemy_explosion_frame = 0
                        scr_enemy_deal_damage(0.4,1,2)
                        if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                    }
                if (obj_game_logic.milla_special_attack &gt; 0 and obj_game_logic.milla_special_attack &lt;= 2 and bullet_timer = 0)
                    {
                        if point_distance(bullet_x,bullet_y,obj_game_logic.milla_special_length_x2,obj_game_logic.milla_special_length_y2) &lt; 32*obj_game_logic.milla_special_attack
                            {
                                bullet_timer = 1
                                enemy_explosion_x = bullet_x
                                enemy_explosion_y = bullet_y
                                enemy_explosion_frame = 0
                                if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                            }
                    }
                if bullet_scanner_timer &gt; 3 and bullet_timer = 0
                    {
                        //Bomb Cube
                        var instance_ID = collision_circle(bullet_x,bullet_y,32,obj_player_cube_alt,false,true);
                        if instance_exists(instance_ID)
                            {
                                if instance_ID.cube_jiggle_timer = 0
                                    {
                                        instance_ID.cube_jiggle_timer = 10
                                        instance_ID.cube_health += 0.50
                                        bullet_timer = 1
                                        enemy_explosion_x = bullet_x
                                        enemy_explosion_y = bullet_y
                                        enemy_explosion_frame = 0
                                    }
                            }
                        if obj_game_logic.user_enemy_level &lt; 2
                            {
                                //Mega Items
                                var instance_ID = collision_circle(bullet_x,bullet_y,32,obj_mega_item_parent,false,true);
                                if instance_exists(instance_ID)
                                    {
                                        instance_ID.attacked = 2
                                        bullet_timer = 1
                                        enemy_explosion_x = bullet_x
                                        enemy_explosion_y = bullet_y
                                        enemy_explosion_frame = 0
                                    }
                                if room != rm_editor
                                    {
                                        var crate_ID = collision_point(bullet_x,bullet_y,obj_destructible,false,true);
                                        if instance_exists(crate_ID)
                                            {
                                                bullet_timer = 1
                                                crate_ID.attacked = 1
                                                enemy_explosion_x = bullet_x
                                                enemy_explosion_y = bullet_y
                                                enemy_explosion_frame = 0
                                                if play_sound = 1 audio_play_sound(snd_enemy_projectile,50,false);
                                            }
                                    }
                                //Attack other enemies within range of the boxing glove
                                instance_ID = collision_circle(bullet_x,bullet_y,32,obj_enemy_parent,false,true);
                                if instance_exists(instance_ID)
                                    {
                                        if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                            {
                                                instance_ID.attacked = 1
                                                instance_ID.attacked_damage = 2
                                                bullet_timer = 1
                                                enemy_explosion_x = bullet_x
                                                enemy_explosion_y = bullet_y
                                                enemy_explosion_frame = 0
                                            }
                                    }
                            }
                    }
                //Bullet Explosion
                if bullet_timer = 1
                    {
                        enemy_explosion_frame += 0.24
                        if enemy_explosion_frame &gt; 7.8
                            {
                                bullet_x = 0
                                bullet_y = 0
                                bullet_timer = 0
                                bullet_frame = 0
                                bullet_speed = 0
                                bullet_active = 0
                                enemy_explosion_frame = 0
                            }
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprites and Bullet
event_inherited()
//Draw Bullet
if bullet_active = 1 and bullet_timer = 0
    draw_sprite(spr_turretus_bullet,0,bullet_x,bullet_y);
if bullet_timer = 1
    draw_sprite(spr_explosion_1,enemy_explosion_frame,bullet_x,bullet_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
