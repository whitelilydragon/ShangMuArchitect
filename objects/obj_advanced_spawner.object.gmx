<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logic_processor</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_activate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup Counter Variables and Define Object Indexes
o = obj_game_logic
p = obj_level_editor
count = 0
map = o.use_maps_select
if (room = rm_cutscene or room = rm_campaign)
    map = o.use_cuts_select;
map_offset = ""
if o.use_maps_current_map &gt; 0
    map_offset = string(o.use_maps_current_map);
obj_id = obj_npc_dummy
obj_count = 60
nsfs_init()
//Arbitrary reference IDs for all registered NPCs in the editor
use_conversion_adv[0] = obj_npc_dummy
use_conversion_adv[1] = obj_bg_anim_tile
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Only populate NPCs while the game is unpaused
if o.pause = 0
    {
        if (count = 0)
            {
                if (room = rm_cutscene or room = rm_campaign)
                    ini_open_ns(program_directory + "Campaign\" + map);
                else
                    ini_open_ns(program_directory + "Maps\" + map);
                obj_count = real(ini_read_string(map_offset+"lvl_adv","lvl_adv_count","60"));
            }
        //Reference Current Object's Asset
        var conversion_reference = use_conversion_adv[real(ini_read_string(map_offset+"lvl_adv_"+string(count),"adv_object","0"))];
        //Place Object Based On Provided Parameters
        if conversion_reference &gt; 0
            {
                obj_id = instance_create(real(ini_read_string(map_offset+"lvl_adv_"+string(count),"adv_x","0")),real(ini_read_string("lvl_adv_"+string(count),"adv_y","0")),conversion_reference);
                if instance_exists(obj_id)
                    {
                        obj_id.property_flag[0] = real(ini_read_string(map_offset+"lvl_adv_"+string(count),"propert_flag_0","0"));
                        obj_id.property_flag[1] = real(ini_read_string(map_offset+"lvl_adv_"+string(count),"propert_flag_1","0"));
                        obj_id.property_flag[2] = real(ini_read_string(map_offset+"lvl_adv_"+string(count),"propert_flag_2","0"));
                        obj_id.property_flag[3] = real(ini_read_string(map_offset+"lvl_adv_"+string(count),"propert_flag_3","0"));
                        obj_id.property_flag[4] = real(ini_read_string(map_offset+"lvl_adv_"+string(count),"propert_flag_4","0"));
                        obj_id.property_flag[5] = real(ini_read_string(map_offset+"lvl_adv_"+string(count),"propert_flag_5","0"));
                    }
            }
        count+=1
        //Close Level Map
        if count &gt;= obj_count
            {
                //Prevent newly placed NPCs from overriding the map file's data
                //if instance_exists(obj_level_editor)
                //    obj_level_editor.use_npc_startup_timer = 1;
                ini_close_ns()
                instance_destroy()
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
