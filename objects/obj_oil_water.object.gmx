<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_smart_pool_oil</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_smart_pools</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>item = 0
give_item = 0
spray_frame = 0
spray_timer = 0
water_frame = 0
water_line = 0
water_line_timer = 0
water_line_target = 0
splash_x = x
splash_y = y
splash_angle = 0
splash_frame = 0
splash_confirm = 0
bubble_visibility = 0
bubble_offset_x = 0
bubble_offset_y = 0
bubble_frame = 0
editor_mode_timer = 0
timer = 0
active = 1
a = -1
b = -1
c = -1
d = -1
tile_b = -1
tile_c = -1
tile_d = -1
o = obj_game_logic
bubble_particle_x[0] = x+48
bubble_particle_y[0] = y+4
bubble_particle_frame[0] = 0
bubble_particle_x[1] = x+96
bubble_particle_y[1] = y+48
bubble_particle_frame[1] = 0
if (room != rm_editor)
    depth = -8;

bubble_x[0] = random_range(8,16)
bubble_y[0] = 128
bubble_speed[0] = 1
bubble_x[1] = random_range(32,120)
bubble_y[1] = 128
bubble_speed[1] = 1.2
bubble_x[2] = random_range(16,64)
bubble_y[2] = 128
bubble_speed[2] = 1.4
bubble_x[3] = random_range(8,16)
bubble_y[3] = 128
bubble_speed[3] = 1.2
bubble_x[4] = random_range(96,120)
bubble_y[4] = 128
bubble_speed[4] = 1.4
bubble_x[5] = random_range(48,64)
bubble_y[5] = 128
bubble_speed[5] = 1.4
bubble_x[6] = 0
bubble_y[6] = 0

mud_water_id = -1
mud_water_timer = 0
water_splash_x[0] = -128
water_splash_y[0] = -128
water_splash_frame[0] = 0
water_splash_x[1] = -128
water_splash_y[1] = -128
water_splash_frame[1] = 0
water_splash_number = 0

weather_rain_particles_frame = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_game_logic.pause = 0

{
a = collision_point(x,y-8,obj_smart_pools,false,true);
b = collision_point(x-8,y+8,obj_smart_pools,false,true);
c = collision_point(x+136,y+8,obj_smart_pools,false,true);
d = collision_point(x+64,y+136,obj_smart_pools,false,true);
e = collision_rectangle(x,y,x+128,y+128,obj_game_logic,false,true)

spray_frame += 0.25
water_frame += 0.25

water_line_timer += 0.5
if water_line_timer &gt; 4
    water_line_timer = 0;

switch(floor(water_line_timer))
    {
        case 0: {water_line_target = 0; break;}
        case 1: {water_line_target = 2; break;}
        case 2: {water_line_target = -4; break;}
        case 3: {water_line_target = 2; break;}
        case 4: {water_line_target = -2; break;}
    }
water_line = lerp(water_line,water_line_target,0.25)

var count = 0;
while(count &lt; 6)
    {
        bubble_y[count] -= bubble_speed[count]
        if bubble_y[count] &lt; 0
            {
                bubble_y[count] = 120
                bubble_x[count] = random_range(8,120)
                bubble_speed[count] = random_range(1.4,2.2)
            }
        count += 1
    }

if water_frame &gt; 3.8
    water_frame = 0;
if spray_frame &gt; 4.8
    spray_frame = 1;

//Move Bubbles
var bubble_count = 0;
while(bubble_count &lt;= 1)
    {
        bubble_particle_y[bubble_count] -= 1
        if bubble_particle_y[bubble_count] &lt; y+8
            {
                if bubble_count = 0
                    bubble_particle_x[bubble_count] = x+random_range(4,48);
                if bubble_count = 1
                    bubble_particle_x[bubble_count] = x+random_range(64,124);
                bubble_particle_y[bubble_count] = (y+sprite_height)-8;
            }
        bubble_count += 1
    }

if active = 1
    {
        if !instance_exists(a)
            {
                if o.px &gt;= x and o.px &lt; x+128
                and o.py &gt; y and o.py &lt; y+16 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = o.px
                        splash_y = y
                        splash_angle = 0
                        splash_confirm = 1
                        audio_play_sound(snd_splash_2,50,false)
                    }
            }
        
        if !instance_exists(b)
            {
                if o.px &gt;= x and o.px &lt; x+16
                and o.py &gt; y and o.py &lt; y+128 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = x
                        splash_y = o.py
                        splash_angle = 90
                        splash_confirm = 1
                        audio_play_sound(snd_splash_2,50,false)
                    }
            }
        
        if !instance_exists(c)
            {
                if o.px &gt;= x+112 and o.px &lt; x+128
                and o.py &gt; y and o.py &lt; y+128 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = x+128
                        splash_y = o.py
                        splash_angle = 270
                        splash_confirm = 1
                        audio_play_sound(snd_splash_2,50,false)
                    }
            }
        
        if !instance_exists(d)
            {
                if o.px &gt;= x and o.px &lt; x+128
                and o.py &gt; y+112 and o.py &lt; y+128 and splash_confirm=0 and o.gravity_speed!=0 and o.user_cursor_mode = 0
                    {
                        splash_x = o.px
                        splash_y = y+128
                        splash_angle = 180
                        splash_confirm = 1
                        audio_play_sound(snd_splash_2,50,false)
                    }
            }
        
        if instance_exists(e)
            {
                if bubble_visibility = 0
                    {
                        bubble_offset_x = o.universal_player_x;
                        bubble_offset_y = o.universal_player_y+32;
                        bubble_visibility = 1;
                    }
            }
        if splash_confirm = 1 and o.user_cursor_mode = 0
            {
                //Iterate animation frames
                splash_frame += 0.25
                //If we have completed the animation, reset variables
                if splash_frame&gt;8.8 {splash_frame=0; splash_confirm=0;}
                if bubble_visibility = 0
                    {
                        bubble_offset_x = o.universal_player_x;
                        bubble_offset_y = o.universal_player_y+32;
                        bubble_visibility = 1;
                    }
                //If we have not completed the animation, and the player has resurfaced already,
                //restart the animation
                if (splash_frame&gt;4) and (o.py &gt; y and o.py &lt; y+16) and splash_angle = 0
                    {
                        splash_frame = 0
                        splash_x = o.px
                        audio_play_sound(snd_splash_2,50,false)
                    }
            }
    }
if bubble_visibility &gt; 0
    {
        //Iterate bubble timer
        bubble_visibility += 1

        if bubble_visibility = 180
            {
                bubble_offset_x = o.universal_player_x;
                bubble_offset_y = o.universal_player_y;
            }
        //Raise the bubble upward
        bubble_offset_y -= 1
        //If the bubble is above the surface of the water, reset its position at the player's mouth
        var f = collision_point(bubble_offset_x,bubble_offset_y,obj_smart_pools,false,false);
        if !instance_exists(f)
            {
                bubble_offset_x = o.universal_player_x;
                bubble_offset_y = o.universal_player_y;
                //If the player is also above the water, disable visibility of the bubble
                if o.above_water = 1 bubble_visibility = 0;
            }
    }
}

timer += 1
if timer = 30
    {
        if (y &gt; o.water_height or y+128 &gt; o.water_height)
            {
                active = 0
                visible = false
            }
        else
            {
                active = 1
                visible = true
            }
        if room = rm_editor
            {
                if editor_mode_timer &gt; 0
                    mask_index = spr_water;
                if editor_mode_timer &lt;= 0
                    mask_index = sprite_index;
            }
        timer = 0
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Oil Bubbles
var count = 0;
while(count &lt;= 5)
    {
        draw_sprite(spr_bubbles,0,x+bubble_x[count],y+bubble_y[count])
        count += 1
    }
draw_sprite_stretched_ext(spr_oil_water,0,x,y,128,128,c_white,0.80)
if !instance_exists(a)
    {
        if obj_game_logic.performance_profile = 1
            draw_set_blend_mode(bm_add);
        draw_sprite_part(spr_oil_waterline,obj_game_logic.water_timer,0,0,128,15,x,(y-8)+water_line);
        draw_set_blend_mode(bm_normal)
        //Rolling Oil Splash Effect
        weather_rain_particles_frame += 0.20
        if weather_rain_particles_frame &gt; 3.8
            weather_rain_particles_frame = 0;
        draw_sprite(spr_rain_particles,weather_rain_particles_frame,x+8,y-8)
        draw_sprite(spr_rain_particles,weather_rain_particles_frame,x+32,y-8)
        draw_sprite(spr_rain_particles,weather_rain_particles_frame,x+84,y-8)
        draw_sprite(spr_rain_particles,weather_rain_particles_frame,x+112,y-8)
    }

if obj_game_logic.user_cursor_mode = 0
    {
        if bubble_visibility &gt; 0
            draw_sprite(spr_bubbles,bubble_frame,bubble_offset_x,bubble_offset_y);
        if splash_confirm = 1
            draw_sprite_ext(spr_water_splash,splash_frame,splash_x,splash_y,1,1,splash_angle,c_white,1);
    }
draw_sprite_ext(spr_water_splash_2x,water_splash_frame[0],water_splash_x[0],water_splash_y[0],0.5,1,0,c_white,1)
water_splash_frame[0] += 0.25
if water_splash_frame[0] &gt; 8.8
    {
        water_splash_frame[0] = 0
        water_splash_x[0] = -128
    }

if room = rm_editor
    {
        if (obj_level_editor.use_debug_hud_mode = 1 and o.user_cursor_mode = 0)
        or (o.user_cursor_mode = 1)
            {
                if editor_mode_timer &gt; 0
                    {
                        editor_mode_timer -= 1
                        draw_set_alpha(0.5)
                        draw_sprite_part(sprite_index,0,0,0,32,32,x,y)
                        draw_set_alpha(1)
                    }
                if editor_mode_timer &lt;= 0
                    draw_sprite_part(sprite_index,0,0,0,32,32,x,y);
            }
    }
else
    {
        if (o.debug_hud_mode &gt; 0)
            draw_sprite_part(sprite_index,0,0,0,32,32,x,y);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
