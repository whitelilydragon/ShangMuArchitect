<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blade_orbiter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_floater</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
scr_enemy_hp(8)
death_frame = 2
flash_palette = spr_blade_orbiter_palette
offdir = 1                          //Sprite Offset Direction
offtime = 0                         //Sprite Animation Timer
anchor = y                          //Sprite Anchor Point
dropped_goodies = obj_petal
//Swords
sword_x_0   = x                     //Sword Position X
sword_y_0   = y                     //Sword Position Y
sword_ang_0 = 0                     //Sword Rotation Angle
sword_dir_0 = 0                     //Sword Movement Direction
sword_vsp_0 = 0                     //Sword Movement Speed
sword_pre_0 = 0                     //Sword Previous Y
sword_x_1   = x                     //Sword Position X
sword_ang_1 = 0                     //Sword Rotation Angle
sword_dir_1 = 0                     //Sword Movement Direction
sword_timer = 0                     //Sword Timer
//Editor Mode Variables
width_x = sprite_width/2
height_y = sprite_height/2
can_hold_items = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()

if o.pause = 0 and death = 0 and freeze = 0
    {
        switch(state)
            {
                //Idle
                case 0:
                    {
                        //Animations
                        if offtime = 0  frame = 0;
                        if offtime = 32 frame = 1;
                        if offtime = 40 {frame = 0 offtime=0}
                        //Apply Speed To Us
                        y += offset
                        //Apply Movement Speed
                        if offdir = 0 and offset &lt; 1 offset += 0.25;
                        if offdir = 1 and offset &gt; -1 offset -= 0.25;
                        //Switch Direction of Movement
                        if y &lt; anchor-1 {offdir = 0 offtime+=1}
                        if y &gt; anchor+1 {offdir = 1 offtime+=1}
                        //Attack the Player If They Are Below Us
                        if  o.px &gt; x-32 and o.px &lt; x+32 and o.py &gt; y and o.py &lt; y+128
                        and o.use_editor = 0 {state = 1 frame = 0 if play_sound = 1 audio_play_sound(snd_enemy_sword,50,false);}
                        break;
                    }
                //Attack
                case 1:
                    {
                        var var_speed = 8;
                        var var_scale = 1;
                        if item = spr_mod_chip_speed var_speed = 12;
                        if item = spr_mod_chip_extra_large var_scale = 2;
                        //Apply Speed To Us
                        sword_y_0 += sword_vsp_0
                        //Apply Rotation To Our Swords
                        if sword_ang_0 &gt; -405 sword_ang_0 -= 8;
                        if sword_ang_1 &lt;  405 sword_ang_1 += 8;
                        //Apply Movement Speed
                        if sword_dir_0 = 0 {sword_vsp_0-=0.5*var_scale sword_x_0 -=2.25*var_scale sword_x_1 +=2.25*var_scale if sword_vsp_0 &lt; -4*var_scale sword_vsp_0 = -4*var_scale;}
                        if sword_dir_0 = 1 {sword_vsp_0+=0.5*var_scale sword_x_0 +=0.1*var_scale sword_x_1 -=0.1*var_scale if sword_vsp_0 &gt; 2*var_scale sword_vsp_0 = 2*var_scale;}
                        if sword_dir_0 = 2 sword_vsp_0+=var_speed*var_scale;
                        if sword_dir_0 = 3 sword_vsp_0-=var_speed*var_scale;
                        //Apply Direction of Movement
                        if sword_y_0 &lt; anchor-(32*var_scale) and sword_dir_0 = 0 sword_dir_0 = 1;
                        if sword_y_0 &gt; anchor+(32*var_scale) and sword_dir_0 = 1 sword_dir_0 = 2;
                        if sword_y_0 &gt; anchor+(96*var_scale) and sword_dir_0 = 2 sword_dir_0 = 3;
                        if sword_y_0 &lt; anchor    and sword_dir_0 = 3
                            {
                                sword_dir_0 = 0
                                state = 0
                                sword_x_0 = x
                                sword_x_1 = x
                                sword_ang_0 = 0
                                sword_ang_1 = 0
                                sword_vsp_0 = 0
                                sword_y_0   = anchor
                            }
                        //Search For Positions To Deal Damage, If the Player Is Not Hurt
                        if sword_ang_0 &gt; -405
                            {
                                if (point_distance(o.universal_player_x,o.universal_player_y,sword_x_0,sword_y_0) &lt; o.player_hitbox_radius/3
                                or  point_distance(o.universal_player_x,o.universal_player_y,sword_x_1,sword_y_0) &lt; o.player_hitbox_radius/2)
                                and o.hurt[0] = 0 and o.hurt[1] = 0 and o.use_editor = 0
                                and o.shield_invuln = 32
                                and not (o.shield_active = 1 and o.shield=spr_shield_metal)
                                    scr_enemy_deal_damage(0.4,1,2);
                                //Bomb Cube
                                var instance_ID = collision_circle(sword_x_0,sword_y_0,16,obj_player_cube_alt,false,true);
                                if instance_ID != noone
                                    {
                                        if instance_ID.cube_jiggle_timer = 0
                                            {
                                                instance_ID.cube_jiggle_timer = 10
                                                instance_ID.cube_health += 0.50
                                            }
                                    }
                                //Bomb Cube
                                var instance_ID = collision_circle(sword_x_1,sword_y_0,16,obj_player_cube_alt,false,true);
                                if instance_ID != noone
                                    {
                                        if instance_ID.cube_jiggle_timer = 0
                                            {
                                                instance_ID.cube_jiggle_timer = 10
                                                instance_ID.cube_health += 0.50
                                            }
                                    }
                            }
                        if sword_ang_0 &lt;= -405
                            {
                                if (point_in_rectangle(o.universal_player_x,o.universal_player_y,sword_x_0-8,sword_y_0,sword_x_0+8,sword_y_0+64)
                                or  point_in_rectangle(o.universal_player_x,o.universal_player_y,sword_x_1-8,sword_y_0,sword_x_1+8,sword_y_0+64))
                                and o.hurt[0] = 0 and o.hurt[1] = 0 and o.use_editor = 0
                                and o.shield_invuln = 32
                                and not (o.shield_active = 1 and o.shield=spr_shield_metal)
                                //Also, Only Deal Damage If Our Swords Are Falling Down
                                    scr_enemy_deal_damage(0.4,1,2);
                                //Bomb Cube
                                var instance_ID = collision_circle(sword_x_0,sword_y_0+64,16,obj_player_cube_alt,false,true);
                                if instance_ID != noone
                                    {
                                        if instance_ID.cube_jiggle_timer = 0
                                            {
                                                instance_ID.cube_jiggle_timer = 10
                                                instance_ID.cube_health += 0.50
                                            }
                                    }
                                //Bomb Cube
                                var instance_ID = collision_circle(sword_x_1,sword_y_0+64,16,obj_player_cube_alt,false,true);
                                if instance_ID != noone
                                    {
                                        if instance_ID.cube_jiggle_timer = 0
                                            {
                                                instance_ID.cube_jiggle_timer = 10
                                                instance_ID.cube_health += 0.50
                                            }
                                    }
                                if obj_game_logic.user_enemy_level &lt; 2
                                    {
                                        //Mega Items
                                        var instance_ID = collision_circle(sword_x_0,sword_y_0+64,16,obj_mega_item_parent,false,true);
                                        if instance_ID != noone
                                            {
                                                instance_ID.attacked = 2
                                            }
                                        //Mega Items
                                        var instance_ID = collision_circle(sword_x_1,sword_y_0+64,16,obj_mega_item_parent,false,true);
                                        if instance_ID != noone
                                            {
                                                instance_ID.attacked = 2
                                            }
                                        var crate_ID = collision_rectangle(sword_x_0,sword_y_0+64,sword_x_0+16,y+20,obj_destructible,false,true);
                                        if instance_exists(crate_ID)
                                            {
                                                crate_ID.attacked = 1
                                            }
                                        var crate_ID = collision_rectangle(sword_x_1,sword_y_0+64,sword_x_1+16,y+20,obj_destructible,false,true);
                                        if instance_exists(crate_ID)
                                            {
                                                crate_ID.attacked = 1
                                            }
                                        //Attack other enemies within range of the boxing glove
                                        instance_ID = collision_rectangle(sword_x_0,sword_y_0+64,sword_x_0+16,y+20,obj_enemy_parent,false,true);
                                        if instance_exists(instance_ID)
                                            {
                                                if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                                    {
                                                        instance_ID.attacked = 1
                                                        instance_ID.attacked_damage = 2
                                                    }
                                            }
                                        //Attack other enemies within range of the boxing glove
                                        instance_ID = collision_rectangle(sword_x_1,sword_y_0+64,sword_x_1+16,y+20,obj_enemy_parent,false,true);
                                        if instance_exists(instance_ID)
                                            {
                                                if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                                    {
                                                        instance_ID.attacked = 1
                                                        instance_ID.attacked_damage = 2
                                                    }
                                            }
                                    }
                            }
                    }
            }
    }
if o.pause = 0 and death &gt; 0
    {
        sword_x_0 -= 8
        sword_x_1 += 8
        sword_y_0 += 4
        sword_ang_0 -= 8
        sword_ang_1 += 8
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprites and Swords
//Draw Swords
draw_sprite_ext(spr_blade_orbiter_sword,0,sword_x_0,sword_y_0+offset,1+enemy_growth,1+enemy_growth,sword_ang_0,c_white,1)
draw_sprite_ext(spr_blade_orbiter_sword,0,sword_x_1,sword_y_0+offset,-(1+enemy_growth),1+enemy_growth,sword_ang_1,c_white,1)
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
