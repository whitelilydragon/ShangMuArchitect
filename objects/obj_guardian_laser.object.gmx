<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bouncer_light</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_activate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>claw_id = -1
start_x = x
start_y = y
timer = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(claw_id)
    {
        var o = obj_game_logic;
        move_towards_point(claw_id.laser_end_x,claw_id.laser_end_y,20)
        if timer &gt; 0
            timer += 1;
        if timer &gt; 16
            instance_destroy();

        if point_distance(x,y,claw_id.laser_end_x,claw_id.laser_end_y) &lt; 32
            {
                x = claw_id.x
                y = claw_id.y
            }
        if point_distance(o.universal_player_x,o.universal_player_y,x,y) &lt; 24
            {
                x = o.universal_player_x
                y = o.universal_player_y
            }
        //Search For Positions To Deal Damage, If the Player Is Not Hurt
        if point_distance(o.universal_player_x,o.universal_player_y,x,y) &lt; 24
        and o.pause = 0 and ((o.hurt[0] = 0 and o.hurt[1] = 0 and o.shield_invuln = 32)
        or o.user_enemy_level &gt;= 2 and o.invuln_hud_time = 0 and o.targets_ready != 3 and o.shield_invuln = 32)
        and not (o.shield_active = 1 and o.shield = spr_shield_metal)
            {
                scr_enemy_deal_damage(1,2,0.4);
                if o.death[0] != 1
                    {
                        if (timer = 0) timer = 1;
                        o.gravity_speed = 0.000000000001
                        if o.hurt[1] &gt; 8 o.hurt[1] = 0;
                    }
            }
        if claw_id.claw_state != 1
            instance_destroy();
    }
else
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
