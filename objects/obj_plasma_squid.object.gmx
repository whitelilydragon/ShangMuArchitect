<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_plasma_squid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_floater</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
scr_enemy_hp(16)

//Movement
frame = 0
state = 0
timer = 0
fire = 0
hsp = 0
flight_turn = 0
flight_timer = 0
attacked_damage = 4
flash_palette = spr_plasma_squid_palette
death_frame = 0

//Shooting
bullet_x[0] = 0
bullet_y[0] = 0
bullet_scale[0] = 1
bullet_frame[0] = 0
bullet_speed[0] = 0
bullet_x[1] = 0
bullet_y[1] = 0
bullet_scale[1] = 1
bullet_frame[1] = 0
bullet_speed[1] = 0

//Editor Mode Variables
width_x = sprite_width/2
height_y = sprite_height/2
hp_offset = -sprite_height-16
can_hold_items = 0
dropped_goodies = obj_gold_gem
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()

if o.pause = 0 and death = 0 and freeze = 0
    {        
        if state = 0
            {
                //Animate
                frame += 0.25
                if (frame &lt; 17 or frame &gt; 19.8)
                    frame = 17;

                //Turn-Around
                if flight_turn &gt; 0
                    {
                        frame = 16
                        flight_turn -= 1;
                    }

                //Accelerate
                if (xdir =  1) hsp -= 0.25; if (hsp &gt;  5) hsp =  5;
                if (xdir = -1) hsp += 0.25; if (hsp &lt; -5) hsp = -5;

                flight_timer += 1
                if flight_timer &gt; 24
                    {
                        state = 1
                        fire = 0
                        timer = 0
                        flight_timer = 0
                    }

                //Collisions
                timer += 1
                if timer &gt;= 4
                    {
                        if (tile_layer_find(surface_flats,x+72,y) or x &gt; room_width -72)
                            {
                                xdir = 1
                                timer = 0
                                flight_timer = 0
                                flight_turn = 8
                            }
                        if (tile_layer_find(surface_flats,x-72,y) or x &lt; 72)
                            {
                                xdir = -1
                                timer = 0
                                flight_timer = 0
                                flight_turn = 8
                            }
                    }
            }
        if state = 1
            {
                //Animate
                frame += 0.25
                if (frame &lt; 17 or frame &gt; 19.8)
                    frame = 17;

                //Decelerate
                if hsp &lt; 0 hsp += 0.15;
                if hsp &gt; 0 hsp -= 0.15;
                //Stop
                if hsp &gt; -0.25 and hsp &lt; 0.25
                    {
                        hsp = 0
                        fire = 0
                        frame = 0
                        state = 2
                        timer = 0
                        flight_timer = 0
                        flight_turn = 0
                    }
            }
        if state = 2
            {
                frame += 0.25;

                //Fire Bullet (Top)
                if frame &gt; 6 and frame &lt; 6.8 and fire = 0
                    {
                        bullet_x[0] = x
                        bullet_y[0] = y-33
                        bullet_speed[0] = xdir*4
                        if (bullet_speed[0] &gt;= 0) bullet_scale[0] = 1;
                        if (bullet_speed[0] &lt; 0) bullet_scale[0] = -1;
                        audio_play_sound(snd_enemy_shoot,50,false)
                        fire = 1
                    }
                //Fire Bullet (Top)
                if frame &gt; 12 and frame &lt; 12.8 and fire = 1
                    {
                        bullet_x[1] = x
                        bullet_y[1] = y+33
                        bullet_speed[1] = xdir*4
                        if (bullet_speed[1] &gt;= 0) bullet_scale[1] = 1;
                        if (bullet_speed[1] &lt; 0) bullet_scale[1] = -1;
                        audio_play_sound(snd_enemy_shoot,50,false)
                        fire = 2
                    }
                //End State
                if frame &gt; 15.8
                    {
                        frame = 0
                        state = 0
                        timer = 0
                        fire = 0
                        flight_timer = 0
                    }

                timer += 1
                if timer &gt;= 2
                    {
                        if point_distance(bullet_x[0],bullet_y[0],o.universal_player_x,o.universal_player_y) &lt; 32
                        and not (o.shield_active = 1 and o.shield = spr_shield_metal)
                            {
                                //Do not harm the player if they have an earth shield
                                if o.hurt[0] = 0
                                and o.shield_invuln = 32
                                and o.user_cursor_mode = 0
                                    scr_enemy_deal_damage(0.4,1,2);
                            }
                        //Bomb Cube
                        var instance_ID = collision_circle(bullet_x[0],bullet_y[0],64,obj_player_cube_alt,false,true);
                        if instance_exists(instance_ID)
                            {
                                if instance_ID.cube_jiggle_timer = 0
                                    {
                                        instance_ID.cube_jiggle_timer = 10
                                        instance_ID.cube_health += 0.50
                                    }
                            }
                        if point_distance(bullet_x[1],bullet_y[1],o.universal_player_x,o.universal_player_y) &lt; 32
                        and not (o.shield_active = 1 and o.shield = spr_shield_metal)
                            {
                                //Do not harm the player if they have an earth shield
                                if o.hurt[0] = 0
                                and o.shield_invuln = 32
                                and o.user_cursor_mode = 0
                                    scr_enemy_deal_damage(0.4,1,2);
                            }
                        //Bomb Cube
                        var instance_ID = collision_circle(bullet_x[1],bullet_y[1],64,obj_player_cube_alt,false,true);
                        if instance_exists(instance_ID)
                            {
                                if instance_ID.cube_jiggle_timer = 0
                                    {
                                        instance_ID.cube_jiggle_timer = 10
                                        instance_ID.cube_health += 0.50
                                    }
                            }
                    }
            }
        //Apply Horizontal
        x += hsp
        bullet_x[0] += bullet_speed[0]
        bullet_x[1] += bullet_speed[1]
    } //End of pause check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprites and Bullet
event_inherited()

//Draw Bullet
if death = 0
    {
        var bullet_count = 0;
        while(bullet_count &lt;= 1)
            {
                if o.pause = 0
                    bullet_frame[bullet_count] += 0.5;
                if bullet_frame[bullet_count] &gt; 3.8
                    bullet_frame[bullet_count] = 0;
                draw_sprite_ext(spr_plasma_squid_bullet,bullet_frame[bullet_count],bullet_x[bullet_count],bullet_y[bullet_count],bullet_scale[bullet_count],1,0,c_white,1)
                bullet_count += 1
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
