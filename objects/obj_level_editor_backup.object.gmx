<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logic_processor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_activate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shang Mu Architect Editor Variables
use_editor     = 0                 //Are we currently using the editor?
use_cursor_x   = 0                //What is our cursor's X position?
use_cursor_y   = 0                //What is our cursor's Y position?
use_cursor_prx = 0                //What is our cursor's previous X position?
use_cursor_pry = 0                //What is our cursor's previous Y position?
use_cursor_spr = 0                //What is our cursor's sprite?
use_cursor_mode = 0               //What is our current method of input?
use_grid       = 1                //What is our current grid's size?
use_move       = 0                //Are we pressing the move button?
use_delete     = 0                //Are we pressing the delete button?
use_put_here   = 0                //Are we pressing the pute here button?
use_copy       = 0                //Are we pressing the copy button?
use_layer_up   = 0                //Are we pressing the layer up button?
use_layer_down = 0                //Are we pressing the layer down button?
use_snap_up    = 0                //Are we pressing the snap up button?
use_snap_down  = 0                //Are we pressing the snap down button?
use_pause      = 0                //Are we pressing the pause button?
use_new_tile   = 0                //Are we pressing the new tile button?
use_move_left  = 0                //Are we pressing the left button?
use_move_right = 0                //Are we pressing the right button?
use_move_up    = 0                //Are we pressing the up button?
use_move_down  = 0                //Are we pressing the down button?
use_a        = 0                  //Are we pressing the A button? (Accept)
use_b        = 0                  //Are we pressing the B button? (Cancel)
use_c        = 0                  //Are we pressing the C button? (Change Character)
use_start    = 0                  //Are we pressing the Start button? (Accept)
use_left     = 0                  //Are we pressing left?
use_right    = 0                  //Are we pressing right?
use_up       = 0                  //Are we pressing up?
use_down     = 0                  //Are we pressing down?
use_exit       = 0                //Are we pressing exit?
use_mode       = 0                //Are we pressing mode?
alt_left       = 0                //Are we pressing the left button?
alt_right      = 0                //Are we pressing the right button?
alt_up         = 0                //Are we pressing the up button?
alt_down       = 0                //Are we pressing the down button?
cursor_previous_x = 0             //Are we moving the mouse horizontal?
cursor_previous_y = 0             //Are we moving the mouse vertically?
cursor_previous_timer = 0
//Tile Menu Variables
use_tile_menu = 0                 //Which menu are we currently using?
use_tile_menu_cool_down = 8       //How long before we're allowed to make more mouse inputs with the on-screen buttons?
use_tile_menu_alpha = 1           //What should the alpha transparency of menu elements be?
user_cursor_mode = 0              //Are we allowed to use the cursor?
user_place_mode  = 0              //Are we allowed to place tiles or move them? (0 = Place; 1 = Move)
user_tile_selected = mu_flat_0    //What is our currently selected tile?
user_layer_selected = 0           //What is our current layer depth?
user_layer_iteration = 0          //What is our current layer selection iteration?
user_grid_iteration = 3           //What is our current grid snap selection?
user_grid_snap      = 8           //What is our grid snapping size?
user_grid_snap_x    = 0           //What is our rounded grid snapping position?
user_grid_snap_y    = 0           //What is our rounded grid snapping position?
user_cursor_display_mode = 0      //Are we displaying a sprite or a tile on the sidebar?
user_tile_boundary_alpha = 0      //What is the alpha transparency of the tile boundary box's fading effect?
user_tile_boundary_fade_direction = 0
user_editor_hud_offset = 314
u_elements = 0
user_editor_hud_state = 0
user_tile_limit_warning_frame = 0
user_tile_limit_warning_value = 16000
user_pen_mode = spr_drawing_cursor
user_pen_size = 1
user_pen_color = mu_paint_black
mouse_previous_x = 0
mouse_previous_y = 0
user_line_tool_x1 = 0
user_line_tool_x2 = 0
user_line_tool_y1 = 0
user_line_tool_y2 = 0
user_line_tool_active = 0
user_line_tool_color = c_black
user_tool_grid = 0
use_fof = 0
user_draw_path_x_1 = 0
user_draw_path_y_1 = 0
user_draw_path_x_2 = 0
user_draw_path_y_2 = 0
user_draw_path_origin_x = 0
user_draw_path_origin_y = 0
user_move_tile_ID = -1
user_move_offset_x = 0
user_move_offset_y = 0
user_move_layer_ID = 0
user_place_allow = 0
use_debug_hud_mode = 0

//Tile Menu Items (Tiles)
use_tile_menu_item[0] = mu_flat_0
use_tile_menu_item[1] = mu_flat_1
use_tile_menu_item[2] = mu_flat_37
use_tile_menu_item[3] = mu_flat_3
use_tile_menu_item[4] = mu_flat_4
use_tile_menu_item[5] = mu_flat_18
use_tile_menu_item[6] = mu_flat_19
use_tile_menu_item[7] = mu_flat_22
use_tile_menu_item[8] = mu_flat_36
use_tile_menu_item[9] = mu_flat_28
use_tile_menu_item[10] = mu_flat_29
use_tile_menu_item[11] = mu_flat_20
use_tile_menu_item[12] = mu_flat_7
use_tile_menu_item[13] = mu_flat_24
use_tile_menu_item[14] = mu_flat_15
use_tile_menu_item[15] = mu_flat_6
use_tile_menu_item[16] = mu_flat_14
use_tile_menu_item[17] = mu_flat_16
use_tile_menu_item[18] = spr_dirt_0
use_tile_menu_item[19] = spr_dirt_1

//Tile Descriptions
use_tile_menu_item_description[0] = "Wood Block 1"
use_tile_menu_item_description[1] = "Floor Tile"
use_tile_menu_item_description[2] = "Support Beam 1"
use_tile_menu_item_description[3] = "Wood Block 2"
use_tile_menu_item_description[4] = "Wood Block 3"
use_tile_menu_item_description[5] = "Wood Block 4"
use_tile_menu_item_description[6] = "Wood Block 5"
use_tile_menu_item_description[7] = "Wood Block 6"
use_tile_menu_item_description[8] = "Support Beam 2"
use_tile_menu_item_description[9] = "Wood Block 7"
use_tile_menu_item_description[10] = "Wood Block 8"
use_tile_menu_item_description[11] = "Wood Block 9"
use_tile_menu_item_description[12] = "Wood Block 10"
use_tile_menu_item_description[13] = "Support Beam 2"
use_tile_menu_item_description[14] = "Corner Piece - Left"
use_tile_menu_item_description[15] = "Wooden Platform"
use_tile_menu_item_description[16] = "Corner Piece - Right"
use_tile_menu_item_description[17] = "Wood Block 11"
use_tile_menu_item_description[18] = "Grass"
use_tile_menu_item_description[19] = "Dirt"
//Tile Menu Items (Layers)
use_layer_menu_item[0] = 0
use_layer_menu_item[1] = 0
use_layer_menu_item[2] = 0
use_layer_menu_item[3] = 0
use_layer_menu_item[4] = 0
use_layer_menu_item[5] = 0
use_layer_menu_item[6] = 0
use_layer_menu_item[7] = 0
use_layer_menu_item[8] = 0
use_layer_menu_item[9] = 0
use_layer_menu_item[10] = 0
use_layer_menu_item[11] = 0
use_layer_menu_item[12] = 0
use_layer_menu_item[13] = 0
use_layer_menu_item[14] = 0
use_layer_menu_item[15] = 0
use_layer_menu_item[16] = 0
use_layer_menu_item[17] = 0
use_layer_menu_item[18] = 1
use_layer_menu_item[19] = 0
//Tile Menu Items (Selected Layers)
use_layer_selected_item[0] = 0
use_layer_selected_item[1] = 0
use_layer_selected_item[2] = 0
use_layer_selected_item[3] = 0
use_layer_selected_item[4] = 0
use_layer_selected_item[5] = 0
use_layer_selected_item[6] = 0
use_layer_selected_item[7] = 0
use_layer_selected_item[8] = 0
use_layer_selected_item[9] = 0
use_layer_selected_item[10] = 0
use_layer_selected_item[11] = 0
use_layer_selected_item[12] = 0
use_layer_selected_item[13] = 0
use_layer_selected_item[14] = 0
use_layer_selected_item[15] = 0
use_layer_selected_item[16] = 0
use_layer_selected_item[17] = 0
use_layer_selected_item[18] = 1
use_layer_selected_item[19] = 0
//Tile X Offset
use_layer_offset_x_item[0] = 0
use_layer_offset_x_item[1] = 0
use_layer_offset_x_item[2] = 0
use_layer_offset_x_item[3] = 0
use_layer_offset_x_item[4] = 0
use_layer_offset_x_item[5] = 0
use_layer_offset_x_item[6] = 0
use_layer_offset_x_item[7] = 0
use_layer_offset_x_item[8] = 0
use_layer_offset_x_item[9] = 0
use_layer_offset_x_item[10] = 0
use_layer_offset_x_item[11] = 0
use_layer_offset_x_item[12] = 0
use_layer_offset_x_item[13] = 0
use_layer_offset_x_item[14] = 0
use_layer_offset_x_item[15] = 0
use_layer_offset_x_item[16] = 0
use_layer_offset_x_item[17] = 0
use_layer_offset_x_item[18] = 0
use_layer_offset_x_item[19] = 0
//Tile Y Offset
use_layer_offset_y_item[0] = 0
use_layer_offset_y_item[1] = 0
use_layer_offset_y_item[2] = 0
use_layer_offset_y_item[3] = 0
use_layer_offset_y_item[4] = 0
use_layer_offset_y_item[5] = 0
use_layer_offset_y_item[6] = 0
use_layer_offset_y_item[7] = 0
use_layer_offset_y_item[8] = 0
use_layer_offset_y_item[9] = 0
use_layer_offset_y_item[10] = 0
use_layer_offset_y_item[11] = 0
use_layer_offset_y_item[12] = 0
use_layer_offset_y_item[13] = 0
use_layer_offset_y_item[14] = 0
use_layer_offset_y_item[15] = 0
use_layer_offset_y_item[16] = 0
use_layer_offset_y_item[17] = 0
use_layer_offset_y_item[18] = -6
use_layer_offset_y_item[19] = 0
//Tile Menu Current Page
use_tile_menu_page     = 0 //Sub-page 0
use_item_menu_page     = 0 //Sub-page 1
use_enemy_menu_page    = 0 //Sub-page 2
use_springs_menu_page  = 0 //Sub-page 3
use_gimmicks_menu_page = 0 //Sub-page 4
use_advanced_menu_page = 0 //Sub-page 5
use_actors_menu_page   = 0 //Sub-page 6

//Tile X/Y Offsets
user_grid_offset_x = 0
user_grid_offset_y = 0

//Submenu Page
use_tile_menu_subpage = 0

//Zoom Feature
use_zoom_position = 1
use_zoom_position_toggle = 0
use_zoom_boundary_x = 426
use_zoom_boundary_y = 240
use_zoom_x_view = 426
use_zoom_y_view = 240
use_zoom_scroll_edge_lock = 8
use_zoom_scroll_border = 16
use_zoom_scroll_speed = 4
use_zoom_multiplier = 1
use_zoom_scale_factor = 1
use_zoom_scale_iteration = 4
use_zoom_additive_modifier = 0          //Make the X position of drawn elements align correctly at higher zoom levels
use_zoom_additive_modifier_y = 0        //Make the Y position of drawn elements align correctly at higher zoom levels
use_zoom_additive_modifier_z = 0        //Additional modifier for larger drawn elements
use_zoom_additive_modifier_s = 0        //Additional modifier for smaller drawn elements
obj_game_logic.use_zoom_multiplier = 1  //Zoom multiplier for the player object
//Additional Modifiers For Button Prompts
use_zoom_additive_modifier_coord[0,0] = 0 //Put Here X
use_zoom_additive_modifier_coord[0,1] = 0 //Put Here Y
use_zoom_additive_modifier_coord[0,2] = 0 //Layer Down X
use_zoom_additive_modifier_coord[0,3] = 0 //Layer Down Y
use_zoom_additive_modifier_coord[0,4] = 0 //Layer Up X
use_zoom_additive_modifier_coord[0,5] = 0 //Layer Up Y
use_zoom_additive_modifier_coord[0,6] = 0 //Snap Up X
use_zoom_additive_modifier_coord[0,7] = 0 //Snap Up Y
use_zoom_additive_modifier_coord[1,0] = 0 //Delete X
use_zoom_additive_modifier_coord[1,1] = 0 //Delete Y
use_zoom_additive_modifier_coord[1,2] = 0 //Copy X
use_zoom_additive_modifier_coord[1,3] = 0 //Copy Y
use_zoom_additive_modifier_coord[1,4] = 0 //New Tile X
use_zoom_additive_modifier_coord[1,5] = 0 //New Tile Y
use_zoom_additive_modifier_coord[1,6] = 0 //Zoom X
use_zoom_additive_modifier_coord[1,7] = 0 //Zoom Y
use_zoom_additive_modifier_coord[2,0] = 0 //Put Here X
use_zoom_additive_modifier_coord[2,1] = 0 //Put Here Y
use_zoom_additive_modifier_coord[2,2] = 0 //Grid Snap X
use_zoom_additive_modifier_coord[2,3] = 0 //Grid Snap Y
use_zoom_additive_modifier_coord[2,4] = 0 //Cursor X (X)
use_zoom_additive_modifier_coord[2,5] = 0 //Cursor X (Y)
use_zoom_additive_modifier_coord[2,6] = 0 //Cursor Y (X)
use_zoom_additive_modifier_coord[2,7] = 0 //Grid Snap X
use_zoom_additive_modifier_coord[2,8] = 0 //Health Petal Modifier X

//Lerp Transitions
use_zoom_additive_modifier_lerp = 0          //Make the X position of drawn elements align correctly at higher zoom levels
use_zoom_additive_modifier_y_lerp = 0        //Make the Y position of drawn elements align correctly at higher zoom levels
use_zoom_additive_modifier_z_lerp = 0        //Additional modifier for larger drawn elements
use_zoom_additive_modifier_s_lerp = 0        //Additional modifier for smaller drawn elements
use_zoom_additive_player_scaling = 1

//Background Change
use_background = 0
use_background_modified = 0
alarm_set(0,4)

//Move Feature
use_move_scan_tile = 0
use_move_mode = 0
use_move_left = 0
use_move_right = 0
use_move_up = 0
use_move_down = 0
use_move_notification_enabled = 0
use_move_notification_disabled = 0

//Cursor Animation
use_cursor_animation_frame = 0
use_cursor_animation_trigger = 0
use_cursor_spr_1 = ui_lilac_cursor_1
use_cursor_spr_2 = ui_lilac_cursor_2

//Highlighter Parameters
use_highlight_alpha = 0
use_highlight_alpha_x = 0
use_highlight_alpha_y = 0
use_highlight_alpha_width = 0
use_highlight_alpha_height = 0

//Player Parameter
use_player_animation_frame = 0.25
use_player_animation_direction = 1
use_player_mode = 0

//Keyboard String Manipulation (Stage Name)
use_keyboard_active = 0
use_keyboard_active_indicator = ""
use_keyboard_active_timer = 0
//Keyboard String Manipulation (Description)
use_keyboard_active_indicator_description = ""
use_keyboard_active_timer_description = 0
//Keyboard String Manipulation (Architect)
use_keyboard_active_indicator_architect = ""
use_keyboard_active_timer_architect = 0

use_write_reserve_string_stage_name = ""
use_write_reserve_string_architect  = ""
use_write_reserve_string_description = ""

//Maps Directory Storage For File Listings
use_maps_file       = 0
use_maps_page       = 0
use_maps_pages      = 0
use_maps_select     = "..."
use_maps_files[0,0] = "..."
use_maps_files[0,1] = "..."
use_maps_files[0,2] = "..."
use_maps_files[0,3] = "..."
use_maps_files[0,4] = "..."

//Currently Displayed Maps For Navigating File Listings
use_maps_map[0] = "..."
use_maps_map[1] = "..."
use_maps_map[2] = "..."
use_maps_map[3] = "..."
use_maps_map[4] = "..."

use_maps_highlight_y = -1

//Save Data
use_write_position = 0
use_write_length   = 0
use_write_start    = 0
use_write_array    = 0
use_write_delay    = 0
use_write_obj_position = 0
use_write_keyboard_string_stage_name  = ""
use_write_keyboard_string_description = ""
use_write_keyboard_string_architect   = ""
use_write_keyboard_string_active_string = -1
use_write_save_notification = 0

//Scrollbar Position
use_scrollbar_position = 60
use_scrollbar_speed = 0

//Current Song
use_current_song = ost_titlescreen_aqua_surface_woofle
use_current_song_iterations = 0
use_current_song_notification = "Aqua Surface - Woofle"
use_current_background_notification = "Dragon Lake Day - LillyDragon"
use_current_song_notification_timer = 0

//Health Petal Modifier Position
use_health_petal_mod_y = 0
use_health_petal_mod = 14
use_health_petal_mod_i = 0
use_health_petal_mod_disable_cursor = 0

//Tile Properties Popup
use_tile_properties_timer = 0
use_tile_properites_x = 0
use_tile_properties_y = 0
use_tile_properties_y_offset = 0
use_tile_properties_enable = 0
use_tile_properties_boundary_x1 = 0
use_tile_properties_boundary_x2 = 0
use_tile_properties_boundary_y1 = 0
use_tile_properties_boundary_y2 = 0
use_tile_properties_cursor_boundary_x1 = 0
use_tile_properties_cursor_boundary_x2 = 0
use_tile_properties_cursor_boundary_y1 = 0
use_tile_properties_cursor_boundary_y2 = 0
use_tile_properties_cursor_boundary_disable = 0
use_zoom_tile_menu_scaling = 41
use_zoom_tile_menu_scaling_horizontal_0 = -12
use_zoom_tile_menu_scaling_horizontal_1 = -8
use_zoom_tile_menu_scaling_vertical_0 = 60
use_zoom_tile_menu_scaling_vertical_1 = 9
use_zoom_tile_menu_scaling_vertical_2 = 30
use_zoom_tile_menu_scaling_vertical_3 = 30
use_zoom_tile_menu_scaling_vertical_4 = -6
use_zoom_tile_menu_scaling_flip_x_0 = 8
use_zoom_tile_menu_scaling_flip_x_1 = 22
use_zoom_tile_menu_scaling_flip_y_0 = 23
use_zoom_tile_menu_scaling_flip_y_1 = 37
use_zoom_tile_menu_scaling_alpha_0 = 38
use_zoom_tile_menu_scaling_alpha_1 = 52
use_zoom_counter = 0
use_tile_properties_tile_id = -1
use_tile_properties_alpha = 0
use_tile_properties_xscale = 0
use_tile_properties_yscale = 0
use_tile_properties_tile_alpha = 0

//File Menu Popup
use_file_menu = 0
use_mini_map = 0
view_visible[1] = false

//Mouse Click Particle Effect
use_particle_frame = 0
use_particle_x = 0
use_particle_y = 0
use_confirm = 0

//Grid Toggle
use_grid_toggle_mouse = 0
use_grid_toggle_size = ui_grid_8px
use_grid_toggle_iterator = 0

//Item Descriptions
use_item_description="Wood Block 1"

//Automatic Tile-Layer Switching Notification
use_tile_switching_mode_notification = 0
use_tile_switching_mode_notification_disabled = 0
use_tile_switching_mode = 0
use_surface_id = -1
use_logic_controller_timer = 0
use_item_check_timer = 0
use_item_check_verified = 0
use_item_check_index = 0

//Camera Boundaries (Top Line)
use_line_top[0] = 0
use_line_top[1] = 0
use_line_top[2] = room_width
use_line_top[3] = 0

//Camera Boundaries (Bottom Line)
use_line_bottom[0] = 0
use_line_bottom[1] = room_height
use_line_bottom[2] = room_width
use_line_bottom[3] = room_height

//Camera Boundaries (Left Line)
use_line_left[0] = 0
use_line_left[1] = 0
use_line_left[2] = 0
use_line_left[3] = room_height

//Camera Boundaries (Right Line)
use_line_right[0] = room_width
use_line_right[1] = 0
use_line_right[2] = room_width
use_line_right[3] = room_height

//Camera Boundaries (Simplified For Test Targets)
camera_boundary_top = 0
camera_boundary_bottom = room_height
camera_boundary_left = 0
camera_boundary_right = room_width
//Boss Camera Boundaries
boss_boundary_top       = -10000
boss_boundary_left      = -10000
boss_boundary_right     = -10000
boss_boundary_bottom    = -10000

//Loading Prompt
use_loading_screen = -1

//Flash Warning Prompt
use_optimization_warning = 0
use_optimization_limit = 64

//Resize Cursor Box
use_corner_box = 0
use_corner_box_id = -1
use_corner_width = 0
use_corner_height = 0
use_tile_width = 0
use_tile_height = 0
use_corner_width_result = 0
use_corner_height_result = 0
use_corner_box_bottom_left_x = 0
use_corner_box_bottom_left_y = 0
use_corner_box_top_right_x = 0
use_corner_box_top_right_y = 0
use_corner_box_id = -1

//Tileset Preview Box
use_tileset_preview_timer = 0
use_tileset_preview_set = ui_tileset_temple
use_tileset_preview_set_increment = 0

//Loop Exit Controller Display Assistant
use_loop_exit_display_angle = 0
use_loop_exit_display_target_angle = 0
use_loop_exit_x = 0
use_loop_exit_y = 0
use_loop_exit_skin = spr_loop_exit_example_lilac
use_loop_exit_angle = 0
use_loop_exit_frame = 0
use_loop_exit_timer = 0
user_loop_exit_assistant_id_prev = -1

//Mega Item Selector
use_mega_item = spr_mega_crate
use_mega_item_description = "Mega Crate"
use_mega_item_iterate = 0

//Autosave
use_auto_save = 0
use_auto_save_timer = 0
use_next_previous_confirm = 0

use_player_spawner = 0
user_player_spawner_frame = 0

use_stamp_page = 0
use_stamp_state = 1
use_stamp_list[0] = ui_stamp_0
use_stamp_list[1] = ui_stamp_1
use_stamp_list[2] = ui_stamp_2
use_stamp_list[3] = ui_stamp_3
use_stamp_list[4] = ui_stamp_4
use_stamp_list[5] = ui_stamp_5
use_stamp_list[6] = ui_stamp_6
use_stamp_list[7] = ui_stamp_7
use_stamp_list[8] = ui_stamp_8
use_stamp_list[9] = ui_stamp_9

use_npc_interaction_dialog_box_active = 0

use_delete_selection_box_x_0 = 0
use_delete_selection_box_y_0 = 0
use_delete_selection_box_x_1 = 0
use_delete_selection_box_y_1 = 0
use_delete_selection_box_active = 0
use_delete_selection_box_timer = 0

side_bar_allow = 0

//Weather Selector
use_weather_iterations = 0
use_weather_conditions = "Clear"
use_win_iterations = 0
use_win_condition = "Break the Targets"
use_help_description = ""
use_bg_name_string = "Shang Mu Lake Day"
use_bg_selector_minimize = 0
use_mouse_mode = 0

//NPC Clipboard
npc_clipboard_dialog_active = 0
npc_clipboard_dialog_string_p1  = ""
npc_clipboard_dialog_string_p2  = ""
npc_clipboard_dialog_emotion_p1 = 0
npc_clipboard_dialog_emotion_p2 = 0
npc_clipboard_dialog_direction  = 1

//Editor Font
editor_font=font_add_sprite(spr_editor_font,ord(" "),false,0)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shang Mu Architect Editor Controls

//Editor Mode Input Variables

//D-Pad Movement
edit_input[0,0] = 0    //Joystick Right
edit_input[0,1] = 0    //Joystick Down
edit_input[0,2] = 0    //Joystick Left
edit_input[0,3] = 0    //Joystick Up

//Panning Movement
edit_input[2,0] = 0    //Joystick Right
edit_input[2,1] = 0    //Joystick Down
edit_input[2,2] = 0    //Joystick Left
edit_input[2,3] = 0    //Joystick Up

//Analog Stick Movement
edit_x = 0
edit_y = 0
look_x = 0
look_y = 0

//Editor Actions
edit_input[1,0] = 0    //Move
edit_input[1,2] = 0    //Delete
edit_input[1,3] = 0    //Put Here
edit_input[1,4] = 0    //Copy

//Editor Quick Actions
edit_input[1,5] = 0    //Layer Up
edit_input[1,6] = 0    //Layer Down
edit_input[1,7] = 0    //Snap Up
edit_input[1,8] = 0    //Snap Down

//Editor Menus
edit_input[1,9]  = 0    //Pause
edit_input[1,10] = 0    //New Tile

//Analog Stick Look Axis
edit_look_x = 0         //Look X Axis
edit_look_y = 0         //Look Y Axis

//Short Hand Alias For The Player Object
parent = obj_game_logic

//=========Collect User Configuration from INI Configuration File=========//
ini_open_ns("gamedata.dat")
//Keyboard Bindings (Editor Mode)
key_move_left   = real(ini_read_string("keyboard_editor_bindings","move_left",0))
key_move_right  = real(ini_read_string("keyboard_editor_bindings","move_right",0))
key_move_up     = real(ini_read_string("keyboard_editor_bindings","move_up",0))
key_move_down   = real(ini_read_string("keyboard_editor_bindings","move_down",0))
key_alt_left    = real(ini_read_string("keyboard_editor_bindings","alt_left",0))
key_alt_right   = real(ini_read_string("keyboard_editor_bindings","alt_right",0))
key_alt_up      = real(ini_read_string("keyboard_editor_bindings","alt_up",0))
key_alt_down    = real(ini_read_string("keyboard_editor_bindings","alt_down",0))
key_mode        = real(ini_read_string("keyboard_editor_bindings","mode",0))
key_delete      = real(ini_read_string("keyboard_editor_bindings","delete",0))
key_put_here    = real(ini_read_string("keyboard_editor_bindings","put_here",0))
key_copy        = real(ini_read_string("keyboard_editor_bindings","copy",0))
key_layer_up    = real(ini_read_string("keyboard_editor_bindings","layer_up",0))
key_layer_down  = real(ini_read_string("keyboard_editor_bindings","layer_down",0))
key_snap_up     = real(ini_read_string("keyboard_editor_bindings","snap_up",0))
key_zoom        = real(ini_read_string("keyboard_editor_bindings","zoom",0))
key_pause       = real(ini_read_string("keyboard_editor_bindings","pause",0))
key_new_tile    = real(ini_read_string("keyboard_editor_bindings","new_tile",0))
//Joystick Modern Bindings (Editor Mode)
joy_move_left   = real(ini_read_string("joystick_modern_editor_bindings","move_left",0))
joy_move_right  = real(ini_read_string("joystick_modern_editor_bindings","move_right",0))
joy_move_up     = real(ini_read_string("joystick_modern_editor_bindings","move_up",0))
joy_move_down   = real(ini_read_string("joystick_modern_editor_bindings","move_down",0))
joy_move_x      = real(ini_read_string("joystick_modern_editor_bindings","move_x",0))
joy_move_y      = real(ini_read_string("joystick_modern_editor_bindings","move_y",0))
joy_mode        = real(ini_read_string("joystick_modern_editor_bindings","mode",0))
joy_delete      = real(ini_read_string("joystick_modern_editor_bindings","delete",0))
joy_put_here    = real(ini_read_string("joystick_modern_editor_bindings","put_here",0))
joy_copy        = real(ini_read_string("joystick_modern_editor_bindings","copy",0))
joy_layer_up    = real(ini_read_string("joystick_modern_editor_bindings","layer_up",0))
joy_layer_down  = real(ini_read_string("joystick_modern_editor_bindings","layer_down",0))
joy_snap_up     = real(ini_read_string("joystick_modern_editor_bindings","snap_up",0))
joy_zoom        = real(ini_read_string("joystick_modern_editor_bindings","zoom",0))
joy_pause       = real(ini_read_string("joystick_modern_editor_bindings","pause",0))
joy_new_tile    = real(ini_read_string("joystick_modern_editor_bindings","new_tile",0))
//Joystick Modern Deadzone
joy_deadzone    = real(ini_read_string("joystick_modern_bindings","deadzone",0))
//Grid Visibiity
grid_visible = real(ini_read_string("main_settings","disable_grid",0))
//Reverse Mouse Buttons
reverse_mouse_buttons = real(ini_read_string("main_settings","reverse_mouse_buttons",0))
//Enemy Mode
use_enemy_mode_iterations = real(ini_read_string("main_settings","enemy_mode",0))

//Do Not Reverse Mouse Buttons If The Config Has Returned False
if reverse_mouse_buttons = 0
    {
        joy_mouse_button_left = mb_left
        joy_mouse_button_right = mb_right
    }
//Reverse The Mouse Buttons If The Config Has Returned True
else
    {
        joy_mouse_button_left = mb_right
        joy_mouse_button_right = mb_left
    }

//Close INI Configuration File
ini_close_ns();

use_enemy_mode_conditions = "Inactive outside camera"
switch(use_enemy_mode_iterations)
    {
        case 0:  {use_enemy_mode_conditions = "Active Outside View"; break;}
        case 1:  {use_enemy_mode_conditions = "Always Active"; break;}
        case 2:  {use_enemy_mode_conditions = "Play Mode Only"; break;}
    }


//Set Displayed Button Prompts
if parent.joy_input_descrip = "Sony DualShock 4"
    {
        use_display_put_here    = scr_set_display_button_ps4(joy_put_here)
        use_display_delete      = scr_set_display_button_ps4(joy_delete)
        use_display_copy        = scr_set_display_button_ps4(joy_copy)
        use_display_layer_up    = scr_set_display_button_ps4(joy_layer_up)
        use_display_layer_down  = scr_set_display_button_ps4(joy_layer_down)
        use_display_snap_up     = scr_set_display_button_ps4(joy_snap_up)
        use_display_zoom        = scr_set_display_button_ps4(joy_zoom)
        use_display_new_tile    = scr_set_display_button_ps4(joy_new_tile)
    }
else
    {
        use_display_put_here    = scr_set_display_button(joy_put_here)
        use_display_delete      = scr_set_display_button(joy_delete)
        use_display_copy        = scr_set_display_button(joy_copy)
        use_display_layer_up    = scr_set_display_button(joy_layer_up)
        use_display_layer_down  = scr_set_display_button(joy_layer_down)
        use_display_snap_up     = scr_set_display_button(joy_snap_up)
        use_display_zoom        = scr_set_display_button(joy_zoom)
        use_display_new_tile    = scr_set_display_button(joy_new_tile)
    }
use_dispaly_key_prompt  = 1
use_display_input_counter = 0

//Joystick Controller IDs
joy_modern_id = parent.joy_modern_id
joy_input_id  = parent.joy_input_id

//Center cursor on our current camera position
use_cursor_x = view_xview[view_port]+parent.internal_resolution[0]/2
use_cursor_y = view_yview[view_port]+parent.internal_resolution[1]/2
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shang Mu Architect Editor Music Playback
if parent.use_maps_load = 0
    {
        music_index = ost_titlescreen_aqua_surface_woofle  //What is our currently playing song?
        alarm_set(1,30)                                    //How long before we're allowed to play music?
    }
else
    {
        music_index = parent.music_index  //What is our currently playing song?
        music_play_timer = -1             //How long before we're allowed to play music?
    }
backup_index = ost_titlescreen_aqua_surface_woofle
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shang Mu Architect Tile Definition Tables
scr_set_temple_definition_table();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shang Mu Architect Loading Definition Table
scr_set_loading_definition_table(self)

//Arbitrary reference IDs for all registered items/mods in the editor
use_conversion_table_item[1] = spr_target
use_conversion_table_item[2] = spr_keycard
use_conversion_table_item[3] = obj_give_item_alt_weapon
use_conversion_table_item[4] = obj_give_item_health
use_conversion_table_item[5] = obj_give_item_speed
use_conversion_table_item[6] = obj_give_item_extra_large
use_conversion_table_item[7] = obj_give_item_bomb
use_conversion_table_item[8] = obj_give_item_spring
use_conversion_table_item[9] = obj_give_item_detonator
use_conversion_item = 0

//Arbitrary reference IDs for all registered NPCs in the editor
use_conversion_npc[1] = obj_npc_lilac
use_conversion_npc[2] = obj_npc_carol
use_conversion_npc[3] = obj_npc_milla
use_conversion_npc[4] = obj_npc_stella

//Arbitrary reference IDs for all registered NPCs in the editor
use_npc_x[0] = 0
use_npc_y[0] = 0
use_npc_object[0] = 0
use_npc_emotion[0] = 0
use_npc_direction[0] = 1
use_npc_string_0[0] = ""
use_npc_string_1[0] = ""
use_npc_maximum_range = 128
use_npc_startup_timer = 0
use_npc_counter = 0

//Fill up reference IDs range for up to 128 hard-coded NPCs
var use_temp_count = 1;
while(use_temp_count &lt;= use_npc_maximum_range)
    {
        use_npc_x[use_temp_count] = 0
        use_npc_y[use_temp_count] = 0
        use_npc_object[use_temp_count] = 0
        use_npc_emotion[use_temp_count] = 0
        use_npc_direction[use_temp_count] = 1
        use_npc_string_0[use_temp_count] = ""
        use_npc_string_1[use_temp_count] = ""
        use_temp_count += 1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play Default Stage Theme Song
var song_current = audio_play_sound(music_index,50,true);
music_play_timer=-1
//Adjust Current Song's Volume
if o.music_mute = 0 scr_adjust_music_silent(o.music_volume/100,1000);
else scr_adjust_music_silent(0,1000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Remember Selected Background From A Loaded Stage
scr_get_background()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input Controller

//Reset Breath Meter
parent.breath = parent.breath_max

//Reset Grid Toggle
use_grid_toggle_mouse = grid_visible;

//Disable Drawing The Grid If The Player Is Active
if user_cursor_mode = 1 use_grid_toggle_mouse = 0;

//Go back to the title screen after the transition
if parent.transition_active = 1 and parent.transition_position &gt; 530.33
    {
        parent.title_room_timer += 1
        //After the iteration timer ends, change rooms
        if parent.title_room_timer &gt; 8
            {
                room_goto(rm_title_screen)
                parent.transition_active = 0
                parent.transition_position = 0
                parent.title_room_timer = 0
                parent.transition_persistence = 12
            }
    }
if use_loading_screen &gt; -1 use_loading_screen -= 1;
if use_loading_screen = 0
    {
        room_restart();
    }

if use_zoom_multiplier != use_zoom_scale_factor
    {
        if user_cursor_mode = 0
            {
                view_wview[view_port] = lerp(view_wview[view_port],use_zoom_x_view,0.1)
                view_hview[view_port] = lerp(view_hview[view_port],use_zoom_y_view,0.1)
                use_zoom_multiplier = lerp(use_zoom_multiplier,use_zoom_scale_factor,0.1)
                obj_game_logic.use_zoom_multiplier = lerp(obj_game_logic.use_zoom_multiplier,obj_game_logic.use_zoom_scale_factor,0.1);
            }
        else
            {
                if obj_game_logic.pause = 0
                    {
                        use_zoom_counter += 0.001
                        clamp(use_zoom_counter,0.03,0.08)
                        view_wview[view_port] = lerp(view_wview[view_port],use_zoom_x_view,use_zoom_counter)
                        view_hview[view_port] = lerp(view_hview[view_port],use_zoom_y_view,use_zoom_counter)
                        use_zoom_multiplier = lerp(use_zoom_multiplier,use_zoom_scale_factor,use_zoom_counter)
                        obj_game_logic.use_zoom_multiplier = lerp(obj_game_logic.use_zoom_multiplier,obj_game_logic.use_zoom_scale_factor,use_zoom_counter)
                    }
            }
    }

parent.use_zoom_x_view = use_zoom_x_view
parent.use_zoom_y_view = use_zoom_y_view

use_logic_controller_timer += 1

if use_logic_controller_timer &gt; 8 use_logic_controller_timer = 8;

//Close any open menus if we have pressed the escape key
if keyboard_check_pressed(vk_escape) and use_tile_menu!= 0
    {
        use_tile_menu = 0
        use_tile_menu_cool_down = 8
        use_keyboard_active = 0
        use_write_keyboard_string_active_string = -1
        //Play menu sound
        audio_play_sound(snd_turn_page,50,false)
    }

if user_cursor_mode = 0
    {

        //==================Collect Input From the Keyboard==================//

        //If The Keyboard Is Assigned For Input, Read The Keyboard For Inputs
        if parent.joy_input[2,1] = 0 and parent.joy_input[2,6] = 0
            {
                //Panning Movement
                edit_input[0,0] = keyboard_check(key_move_right) //Joystick Right
                edit_input[0,1] = keyboard_check(key_move_down)  //Joystick Down
                edit_input[0,2] = keyboard_check(key_move_left)  //Joystick Left
                edit_input[0,3] = keyboard_check(key_move_up)    //JoyStick Up

                //Arrow Key Movement
                edit_input[2,0] = keyboard_check(key_alt_right)  //Pan Right
                edit_input[2,1] = keyboard_check(key_alt_down)   //Pan Down
                edit_input[2,2] = keyboard_check(key_alt_left)   //Pan Left
                edit_input[2,3] = keyboard_check(key_alt_up)     //Pan Up

                //Editor Actions
                edit_input[1,0] = keyboard_check(key_put_here) //Move
                edit_input[1,2] = keyboard_check(key_copy)     //Delete
                edit_input[1,3] = keyboard_check(key_delete)   //Put Here
                edit_input[1,4] = keyboard_check(key_new_tile) //Copy

                //Editor Quick Actions
                edit_input[1,5] = keyboard_check(key_layer_up)   //Layer Up
                edit_input[1,6] = keyboard_check(key_layer_down) //Layer Down
                edit_input[1,7] = keyboard_check(key_snap_up)    //Snap Up
                edit_input[1,8] = keyboard_check(key_zoom)       //Zoom

                //Editor Menus
                edit_input[1,9]  = keyboard_check(key_pause)    //Exit
                edit_input[1,10] = keyboard_check(key_mode)     //Mode

                //Lock the use of the enter key when invoking alt right for fullscreen mode toggle
                if keyboard_check_direct(vk_ralt) and parent.key_start = 13 edit_input[1,9] = 0;
            }
        //==================Collect Input From the Joystick==================//
        
        //If a modern joystick is not assigned for input, disable keyboard inputs
        if parent.joy_input[2,1] = 1 and not gamepad_is_connected(parent.joy_modern_id)
            {
                //D-Pad Movement
                edit_input[0,0] = 0    //Joystick Right
                edit_input[0,1] = 0    //Joystick Down
                edit_input[0,2] = 0    //Joystick Left
                edit_input[0,3] = 0    //Joystick Up
                
                //Panning Movement
                edit_input[2,0] = 0    //Joystick Right
                edit_input[2,1] = 0    //Joystick Down
                edit_input[2,2] = 0    //Joystick Left
                edit_input[2,3] = 0    //Joystick Up
                
                //Analog Stick Movement
                edit_x = 0
                edit_y = 0
                look_x = 0
                look_y = 0
                
                //Editor Actions
                edit_input[1,0] = 0    //Move
                edit_input[1,2] = 0    //Delete
                edit_input[1,3] = 0    //Put Here
                edit_input[1,4] = 0    //Copy
                
                //Editor Quick Actions
                edit_input[1,5] = 0    //Layer Up
                edit_input[1,6] = 0    //Layer Down
                edit_input[1,7] = 0    //Snap Up
                edit_input[1,8] = 0    //Snap Down
                
                //Editor Menus
                edit_input[1,9]  = 0    //Pause
                edit_input[1,10] = 0    //New Tile
            }

        //If A Modern Joystick Is Assigned For Input, Read The Joystick For Inputs
        if parent.joy_input[2,1] = 1 and gamepad_is_connected(parent.joy_modern_id) and parent.joy_input[2,6] = 0
            {
                //D-Pad Movement
                edit_input[0,0] = gamepad_button_check(parent.joy_modern_id,joy_move_right) //Joystick Right
                edit_input[0,1] = gamepad_button_check(parent.joy_modern_id,joy_move_down)  //Joystick Down
                edit_input[0,2] = gamepad_button_check(parent.joy_modern_id,joy_move_left)  //Joystick Left
                edit_input[0,3] = gamepad_button_check(parent.joy_modern_id,joy_move_up)    //JoyStick Up

                //Analog Stick Movement (Left)
                edit_x = gamepad_axis_value(parent.joy_modern_id,gp_axislh)
                edit_y = gamepad_axis_value(parent.joy_modern_id,gp_axislv)

                //Analog Stick Movement (Right)
                look_x = gamepad_axis_value(parent.joy_modern_id,gp_axisrh)
                look_y = gamepad_axis_value(parent.joy_modern_id,gp_axisrv)

                //Editor Actions
                edit_input[1,0] = gamepad_button_check(parent.joy_modern_id,joy_put_here)  //Move
                edit_input[1,2] = gamepad_button_check(parent.joy_modern_id,joy_copy)      //Delete
                edit_input[1,3] = gamepad_button_check(parent.joy_modern_id,joy_delete)    //Put Here
                edit_input[1,4] = gamepad_button_check(parent.joy_modern_id,joy_new_tile)  //Copy
                
                //Editor Quick Actions
                edit_input[1,5] = gamepad_button_check(parent.joy_modern_id,joy_layer_up)   //Layer Up
                edit_input[1,6] = gamepad_button_check(parent.joy_modern_id,joy_layer_down) //Layer Down
                edit_input[1,7] = gamepad_button_check(parent.joy_modern_id,joy_snap_up)    //Snap
                edit_input[1,8] = gamepad_button_check(parent.joy_modern_id,joy_zoom)       //Zoom
                
                //Editor Menus
                edit_input[1,9]  = gamepad_button_check(parent.joy_modern_id,joy_pause)    //Exit
                edit_input[1,10] = gamepad_button_check(parent.joy_modern_id,joy_mode)     //Mode
            }

        //==================================================================//
        //--Check for singular button presses across all assigned bindings--//
        //==================================================================//

        //D-Pad Movement
        if edit_input[0,0] = 1 use_right += 1; else use_right = 0; //Right
        if edit_input[0,1] = 1 use_down  += 1; else use_down = 0;  //Down
        if edit_input[0,2] = 1 use_left  += 1; else use_left = 0;  //Left
        if edit_input[0,3] = 1 use_up    += 1; else use_up = 0;    //Up
        //Editor Actions
        if edit_input[1,0] = 1 use_put_here += 1; else use_put_here = 0;    //Move
        if edit_input[1,2] = 1 use_copy     += 1; else use_copy     = 0;    //Delete
        if edit_input[1,3] = 1 use_delete   += 1; else use_delete   = 0;    //Put Here
        if edit_input[1,4] = 1 use_new_tile += 1; else use_new_tile = 0;    //New Tile
        //Editor Quick Actions
        if edit_input[1,5] = 1 use_layer_up += 1;   else use_layer_up = 0;   //Layer Up
        if edit_input[1,6] = 1 use_layer_down += 1; else use_layer_down = 0; //Layer Down
        if edit_input[1,7] = 1 use_snap_up += 1;    else use_snap_up = 0;    //Snap Up
        if edit_input[1,8] = 1 use_snap_down += 1;  else use_snap_down = 0;  //Zoom
        //Editor Menus
        if edit_input[1,9] = 1  use_pause += 1;  else use_pause = 0;  //Exit
        if edit_input[1,10] = 1 use_mode  += 1;  else use_mode = 0;   //Mode
    }
else
    {
        use_delete     = 0                //Are we pressing the delete button?
        use_put_here   = 0                //Are we pressing the put here button?
        use_copy       = 0                //Are we pressing the copy button?
        use_layer_up   = 0                //Are we pressing the layer up button?
        use_layer_down = 0                //Are we pressing the layer down button?
        use_snap_up    = 0                //Are we pressing the snap up button?
        use_snap_down  = 0                //Are we pressing the snap down button?
        use_pause      = 0                //Are we pressing the pause button?
        use_new_tile   = 0                //Are we pressing the new tile button?
        use_move_left  = 0                //Are we pressing the left button?
        use_move_right = 0                //Are we pressing the right button?
        use_move_up    = 0                //Are we pressing the up button?
        use_move_down  = 0                //Are we pressing the down button?
        use_a        = 0                  //Are we pressing the A button? (Accept)
        use_b        = 0                  //Are we pressing the B button? (Cancel)
        use_c        = 0                  //Are we pressing the C button? (Change Character)
        use_start    = 0                  //Are we pressing the Start button? (Accept)
        use_left     = 0                  //Are we pressing left?
        use_right    = 0                  //Are we pressing right?
        use_up       = 0                  //Are we pressing up?
        use_down     = 0                  //Are we pressing down?

        var npc_check = collision_circle(parent.px,parent.py,64,obj_interact_parent,false,true);
        if instance_exists(npc_check)
            {
                if npc_check.state = 1
                    use_npc_interaction_dialog_box_active = 1;
                else
                    use_npc_interaction_dialog_box_active = 0;
            }
        else
            use_npc_interaction_dialog_box_active = 0;
    }

//Override Most Menu Controls While In The Open and Save Menus
if use_tile_menu != 0
    {
        use_copy       = 0                //Are we pressing the copy button?
        use_layer_up   = 0                //Are we pressing the layer up button?
        use_layer_down = 0                //Are we pressing the layer down button?
        use_snap_up    = 0                //Are we pressing the snap up button?
        use_snap_down  = 0                //Are we pressing the snap down button?
        if use_tile_menu &gt; 1 use_new_tile = 0; //Are we pressing the new tile button?
        use_move_left  = 0                //Are we pressing the left button?
        use_move_right = 0                //Are we pressing the right button?
        use_move_up    = 0                //Are we pressing the up button?
        use_move_down  = 0                //Are we pressing the down button?
        use_a        = 0                  //Are we pressing the A button? (Accept)
        use_b        = 0                  //Are we pressing the B button? (Cancel)
        use_c        = 0                  //Are we pressing the C button? (Change Character)
        use_start    = 0                  //Are we pressing the Start button? (Accept)
        use_left     = 0                  //Are we pressing left?
        use_right    = 0                  //Are we pressing right?
        use_up       = 0                  //Are we pressing up?
        use_down     = 0                  //Are we pressing down?

        //Disable Virtual Clicks If The Space Bar Is Used For Clicking Menu Elements
        if keyboard_check(vk_space) and use_write_keyboard_string_active_string != -1
        and use_cursor_mode = 0
            use_put_here = 0;
    }

        //==========================Cursor Movement==========================//

        //Determine Cursor Skin Based On Player's Skin
        switch(parent.skin)
            {
                case spr_lilac:
                    {
                        if parent.alt_skin = 0 {use_cursor_spr = ui_lilac_cursor_0; use_cursor_spr_1 = ui_lilac_cursor_1; use_cursor_spr_2 = ui_lilac_cursor_2;}
                        else            {use_cursor_spr = ui_lilac_cursor_old_0; use_cursor_spr_1 = ui_lilac_cursor_old_1; use_cursor_spr_2 = ui_lilac_cursor_old_2;}
                        break;
                    }
                case spr_carol:
                    {   
                        if parent.alt_skin = 0
                            {
                                use_cursor_spr = ui_carol_cursor_0; use_cursor_spr_1 = ui_carol_cursor_1; use_cursor_spr_2 = ui_carol_cursor_2;
                            }
                        if parent.alt_skin = 1
                            {
                                use_cursor_spr = ui_carrie_cursor_0; use_cursor_spr_1 = ui_carrie_cursor_1; use_cursor_spr_2 = ui_carrie_cursor_2;
                            }
                        if parent.alt_skin = 2
                            {
                                use_cursor_spr = ui_chiasa_cursor_0; use_cursor_spr_1 = ui_chiasa_cursor_1; use_cursor_spr_2 = ui_chiasa_cursor_2;
                            }
                        break;
                    }
                case spr_milla: {use_cursor_spr = ui_cursor_milla_0; use_cursor_spr_1 = ui_cursor_milla_1; use_cursor_spr_2 = ui_cursor_milla_2; break;}
                case spr_spade: {use_cursor_spr = ui_spade_cursor_0; use_cursor_spr_1 = ui_spade_cursor_1; use_cursor_spr_2 = ui_spade_cursor_2; break;}
            }
        //Determine Cursor Mode Based On Current Input Device
        if keyboard_check(vk_anykey) or mouse_check_button(mb_any)
            use_cursor_mode = 0;
        if (abs(edit_x) &gt; joy_deadzone or abs(edit_y) &gt; joy_deadzone or abs(look_x) &gt; joy_deadzone or abs(look_y) &gt; joy_deadzone)
        and not keyboard_check(vk_anykey)
            {
                use_dispaly_key_prompt = 0
                use_cursor_mode = 1
            }

        //Decrement Cool Down Timer For Mouse Inputs
        if use_tile_menu_cool_down &gt; 0 use_tile_menu_cool_down -= 1;

        //Animate Cursor
        if use_cursor_animation_trigger = 1
            {
                use_cursor_animation_frame += 0.16
                if use_cursor_animation_frame &gt; 3.9
                    {
                        use_cursor_animation_frame = 0
                        use_cursor_animation_trigger = 0
                    }
            }

        //Modify Cursor's Position Based On Current Input Device//
        //------------------------------------------------------//

        //Keyboard/Mouse
        if use_cursor_mode = 0
            {
                //Interact with the cursor when the window has focus
                if window_has_focus()
                    {
                        use_cursor_x = mouse_x
                        use_cursor_y = mouse_y
                        //Modify Cursor's Position Based on Digital Input (Panning Movement)
                        if user_cursor_mode = 0 and use_keyboard_active = 0
                            {
                                if use_right &gt; 0 view_xview[view_port] += floor(use_zoom_scroll_speed);
                                if use_left  &gt; 0 view_xview[view_port] -= floor(use_zoom_scroll_speed);
                                if use_up    &gt; 0 view_yview[view_port] -= floor(use_zoom_scroll_speed);
                                if use_down  &gt; 0 view_yview[view_port] += floor(use_zoom_scroll_speed);
                            }
                    }
                //Recenter the cursor if the window is out of focus
                else
                    {
                        use_cursor_x = view_xview[view_port]+213
                        use_cursor_y = view_yview[view_port]+120
                    }
            }
        //Controller
        else
            {
                //Modify Cursor's Position Based On Analog Input
                if use_move_mode = 0
                    {
                        if abs(edit_x) &gt; joy_deadzone and (device_mouse_x_to_gui(0) &gt;= 0 and device_mouse_x_to_gui(0) &lt;= 426) {use_cursor_x += edit_x * floor(use_zoom_scroll_speed);  use_dispaly_key_prompt = 0;}
                        if abs(edit_y) &gt; joy_deadzone {use_cursor_y += edit_y * floor(use_zoom_scroll_speed);  use_dispaly_key_prompt = 0;}
                        if abs(look_x) &gt; joy_deadzone {view_xview[view_port] += floor(look_x * use_zoom_scroll_speed*2); use_dispaly_key_prompt = 0;}
                        if abs(look_y) &gt; joy_deadzone {view_yview[view_port] += floor(look_y * use_zoom_scroll_speed*2); use_dispaly_key_prompt = 0;}
                    }
                //Otherwise, Only Move In Increments Across The Grid
                else
                    {
                        //Left Analog Stick
                        if (gamepad_axis_value(parent.joy_modern_id,gp_axislh) &lt; -parent.deadzone_mod) use_move_left += 1; else use_move_left = 0;   //Joystick Left
                        if (gamepad_axis_value(parent.joy_modern_id,gp_axislh) &gt;  parent.deadzone_mod) use_move_right += 1; else use_move_right = 0; //Joystick Right
                        if (gamepad_axis_value(parent.joy_modern_id,gp_axislv) &lt; -parent.deadzone_mod) use_move_up += 1;    else use_move_up = 0;    //Joystick Up
                        if (gamepad_axis_value(parent.joy_modern_id,gp_axislv) &gt;  parent.deadzone_mod) use_move_down += 1;  else use_move_down = 0;  //Joystick Down
                        if use_move_right = 1 use_cursor_x += floor(user_grid_snap);
                        if use_move_left  = 1 use_cursor_x -= floor(user_grid_snap);
                        if use_move_up    = 1 use_cursor_y -= floor(user_grid_snap);
                        if use_move_down  = 1 use_cursor_y += floor(user_grid_snap);
                        //Modify Cursor's Position Based on Digital Input (Panning Movement)
                        if use_move_right &gt; 8 use_cursor_x += floor(user_grid_snap);
                        if use_move_left  &gt; 8 use_cursor_x -= floor(user_grid_snap);
                        if use_move_up    &gt; 8 use_cursor_y -= floor(user_grid_snap);
                        if use_move_down  &gt; 8 use_cursor_y += floor(user_grid_snap);
                    }

                //Modify Cursor's Position Based on Digital Input (Pixel-Precise Movement)
                if use_right = 1 use_cursor_x += user_grid_snap;
                if use_left = 1  use_cursor_x -= user_grid_snap;
                if use_up = 1    use_cursor_y -= user_grid_snap;
                if use_down = 1  use_cursor_y += user_grid_snap;
                //Modify Cursor's Position Based on Digital Input (Panning Movement)
                if use_right &gt; 8 use_cursor_x += floor(user_grid_snap);
                if use_left  &gt; 8 use_cursor_x -= floor(user_grid_snap);
                if use_up    &gt; 8 use_cursor_y -= floor(user_grid_snap);
                if use_down  &gt; 8 use_cursor_y += floor(user_grid_snap);

                //Remove Subpixels From The Cursor's Movement
                use_cursor_x = floor(use_cursor_x)
                use_cursor_y = floor(use_cursor_y)

                if abs(edit_x) &gt; joy_deadzone or abs(edit_y) &gt; joy_deadzone
                    {
                        //Manipulate Real Mouse Position Based On Provided Coordinates
                        var use_cursor_mouse_x = abs(use_cursor_x-view_xview[view_port]);
                        var use_cursor_mouse_y = abs(use_cursor_y-view_yview[view_port]);
        
                        var use_window_width  = window_get_width()  / view_wview[view_port];
                        var use_window_height = window_get_height() / view_hview[view_port];
        
                        window_mouse_set(use_cursor_mouse_x*use_window_width,use_cursor_mouse_y*use_window_height);
                    }
            }

        //Disable The Screensaver While The Cursor Is Moving

        //Iterate Cursor Timer
        cursor_previous_timer += 1

        //Upon The Second Frame, Collect The Mouse's Current X/Y Positions
        if cursor_previous_timer = 2
            {
                cursor_previous_x = mouse_x
                cursor_previous_y = mouse_y
            }
        //If The Collected X/Y Positions Do Not Match the Current Frame,
        //Reset The Screensaver Timer
        if cursor_previous_timer &gt;= 3
            {
                cursor_previous_timer = 0
                if cursor_previous_x != mouse_x
                or cursor_previous_y != mouse_y
                    parent.joy_input_screen_saver = 0;
            }
        
        if abs(edit_x) &lt; joy_deadzone and abs(edit_y) &lt; joy_deadzone
        and point_distance(mouse_x,mouse_y,use_cursor_x,use_cursor_y) &gt; 8
            {
                use_dispaly_key_prompt = 1
                use_cursor_mode = 0
            }

        //Round Cursor Position Based On Grid Snap Size To Create A Grid
        user_grid_snap_x = round(use_cursor_x / user_grid_snap) * user_grid_snap
        user_grid_snap_y = round(use_cursor_y / user_grid_snap) * user_grid_snap

        //Prevent The Player From Placing Objects And Tiles Beyond The Boundaries Of The Room
        if use_cursor_x &lt; 0 user_grid_snap_x = 0;
        if use_cursor_x &gt; room_width user_grid_snap_x = room_width;
        if use_cursor_y &lt; 0 user_grid_snap_y = 0;
        if use_cursor_y &gt; room_height user_grid_snap_y = room_height;

        //Fade Effect For The Tile's Boundary Box
        if user_tile_boundary_fade_direction = 1 user_tile_boundary_alpha += 0.0075;
        if user_tile_boundary_fade_direction = 0 user_tile_boundary_alpha -= 0.0075;
        if user_tile_boundary_alpha &gt; 0.3 user_tile_boundary_fade_direction = 0;
        if user_tile_boundary_alpha &lt; 0.1 user_tile_boundary_fade_direction = 1;

        //Copy Keyboard Strings For The Save Menu
        if use_write_keyboard_string_active_string != -1
            {
                switch(use_write_keyboard_string_active_string)
                    {
                        //Stage Name
                        case 0:
                            {
                                //Check against non-lettered characters
                                if keyboard_check_pressed(vk_anykey)
                                    {
                                        var check_key = string_char_at(keyboard_string,string_length(keyboard_string));
                
                                        if check_key = "!"
                                        or check_key = '"'
                                        or check_key = "#"
                                        or check_key = "$"
                                        or check_key = "%"
                                        or check_key = "^"
                                        or check_key = "&amp;"
                                        or check_key = "'"
                                        or check_key = "("
                                        or check_key = ")"
                                        or check_key = "*"
                                        or check_key = "+"
                                        or check_key = "-"
                                        or check_key = "."
                                        or check_key = "/"
                                        or check_key = ":"
                                        or check_key = ";"
                                        or check_key = "&lt;"
                                        or check_key = "="
                                        or check_key = "&gt;"
                                        or check_key = "?"
                                        or check_key = "@"
                                        or check_key = "["
                                        or check_key = "\"
                                        or check_key = "]"
                                        or check_key = "^"
                                        or check_key = "_"
                                        or check_key = "`"
                                        or check_key = "{"
                                        or check_key = "|"
                                        or check_key = "}"
                                        or check_key = "~"
                                            {
                                                scr_set_message("No special characters allowed!")
                                                use_write_keyboard_string_stage_name = string_delete(use_write_keyboard_string_stage_name,string_length(use_write_keyboard_string_stage_name),1);
                                                keyboard_string = string_delete(keyboard_string,string_length(keyboard_string),1);
                                            }
                                    }
                                use_write_keyboard_string_stage_name = keyboard_string
                                //Increment Flash Timer
                                use_keyboard_active_timer += 1
                                //Reset Flash Timer
                                if use_keyboard_active_timer &gt; 32 use_keyboard_active_timer = 0;
                                if use_keyboard_active_timer &lt; 16 use_keyboard_active_indicator = "|";
                                else                              use_keyboard_active_indicator = "";
                                use_keyboard_active_indicator_description = ""
                                use_keyboard_active_indicator_architect = ""
                                //Enforce Strict Character Limit
                                if string_length(use_write_keyboard_string_stage_name) &gt; 30
                                    {
                                        use_write_keyboard_string_stage_name = string_copy(use_write_keyboard_string_stage_name,1,30);
                                        keyboard_string = string_copy(keyboard_string,1,30);
                                    }
                                break;
                            }
                        //Description
                        case 1:
                            {
                                use_write_keyboard_string_description = keyboard_string
                                //Increment Flash Timer
                                use_keyboard_active_timer_description += 1
                                //Reset Flash Timer
                                if use_keyboard_active_timer_description &gt; 32 use_keyboard_active_timer_description = 0;
                                if use_keyboard_active_timer_description &lt; 16 use_keyboard_active_indicator_description = "|";
                                else                                          use_keyboard_active_indicator_description = "";
                                use_keyboard_active_indicator = ""
                                use_keyboard_active_indicator_architect = ""
                                //Enforce Strict Character Limit
                                if string_length(use_write_keyboard_string_description) &gt; 32
                                    {
                                        use_write_keyboard_string_description = string_copy(use_write_keyboard_string_description,1,32);
                                        keyboard_string = string_copy(keyboard_string,1,32);
                                    }
                                break;
                            }
                        //Architect
                        case 2:
                            {
                                use_write_keyboard_string_architect = keyboard_string
                                //Increment Flash Timer
                                use_keyboard_active_timer_architect += 1
                                //Reset Flash Timer
                                if use_keyboard_active_timer_architect &gt; 32 use_keyboard_active_timer_architect = 0;
                                if use_keyboard_active_timer_architect &lt; 16 use_keyboard_active_indicator_architect = "|";
                                else                                        use_keyboard_active_indicator_architect = "";
                                use_keyboard_active_indicator_description = ""
                                use_keyboard_active_indicator = ""
                                //Enforce Strict Character Limit
                                if string_length(use_write_keyboard_string_architect) &gt; 12
                                    {
                                        use_write_keyboard_string_architect = string_copy(use_write_keyboard_string_architect, 1, 12);
                                        keyboard_string = string_copy(keyboard_string,1,12);
                                    }
                                break;
                            }
                    }
            }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Saving Algorithm

//==========================Save Level Data==========================//

//Increment Delay Timer (So the game logic object has time to reactivate all instances in the room)
if use_write_delay &gt; 0 use_write_delay += 1;
if use_write_delay &gt; 8
    {
        nsfs_init()
        //Set Multi-Map Section Shift In the Map
        var map_offset = "";
        if parent.use_maps_current_map &gt; 0
            {
                map_offset = string(parent.use_maps_current_map)
            }
        //Remove Older File If It Exists, And the File Has No Multi-Map Data
        if parent.use_maps_current_map = 0 and parent.use_maps_overwrite_protection = 0
            {
                if file_exists_ns(program_directory + "Maps\" + use_write_keyboard_string_stage_name + ".map")
                    file_delete_ns(program_directory + "Maps\" + use_write_keyboard_string_stage_name + ".map");
            }
        //Open Level Map
        ini_open_ns(program_directory + "Maps\" + use_write_keyboard_string_stage_name + ".map")
        //Overwrite Old Map Data Differently If We Are A Multimap stage
        if ini_section_exists("1lvl_hd")
            {
                //Flag Old Tile Data As "Ignore"
                use_write_position = 0
                use_write_length = ini_read_string(map_offset+"lvl_hd","lvl_tile_count",0)
                while(use_write_position &lt;= use_write_length)
                    {
                        if ini_section_exists(map_offset+"lvl_tiles_"+string(use_write_position))
                            ini_section_delete(map_offset+"lvl_tiles_"+string(use_write_position));
                        use_write_position += 1
                    }
                use_write_position = 0
                use_write_length = 0
                //Flag Old Object Data As "Ignore"
                use_write_obj_position = 0;
                use_write_length = ini_read_string(map_offset+"lvl_hd","lvl_obj_count",0);
                while(use_write_obj_position &lt;= use_write_length)
                    {
                        if ini_section_exists(map_offset+"lvl_objects_"+string(use_write_obj_position))
                            ini_section_delete(map_offset+"lvl_objects_"+string(use_write_obj_position));
                        use_write_obj_position += 1
                    }
                use_write_obj_position = 0
                use_write_length = 0
            }
        //Write Header
        ini_write_string("lvl_hd","lvl_name",use_write_keyboard_string_stage_name)
        ini_write_string("lvl_hd","lvl_author",use_write_keyboard_string_architect)
        ini_write_string("lvl_hd","lvl_description",use_write_keyboard_string_description)
        ini_write_string("lvl_hd","lvl_weather",use_weather_iterations)
        ini_write_string("lvl_hd","lvl_win_condition",use_win_iterations)
        //Check For Character Exclusivity (Default to All Characters)
        ini_write_string("lvl_hd","lvl_char","All")
        if instance_exists(obj_player_spawnpoint_lilac) ini_write_string("lvl_hd","lvl_char","Lilac");
        if instance_exists(obj_player_spawnpoint_carol) ini_write_string("lvl_hd","lvl_char","Carol");
        if instance_exists(obj_player_spawnpoint_milla) ini_write_string("lvl_hd","lvl_char","Milla");
        if instance_exists(obj_player_spawnpoint_carols_bike) ini_write_string("lvl_hd","lvl_char","Carol's Bike");
        if instance_exists(obj_player_spawnpoint_spade) ini_write_string("lvl_hd","lvl_char","Spade");
        if instance_exists(obj_player_spawnpoint_carrie) ini_write_string("lvl_hd","lvl_char","Carrie");
        if instance_exists(obj_player_spawnpoint_chiasa) ini_write_string("lvl_hd","lvl_char","Chiasa");
        //Clear Time Attack Save Data
        ini_write_string("lvl_hd","lvl_best_time","600000")
        ini_write_string("lvl_hd","version_number",string(obj_game_logic.version_number))
        //Write Tile Data
        use_write_array = tile_get_ids()
        use_write_length = array_length_1d(use_write_array)
        use_write_position = 0
        while(use_write_position &lt;= use_write_length)
            {
                //Arbitrary Asset Definition Table
                var use_conversion = 0;
                switch(tile_get_background(use_write_array[use_write_position]))
                    {
                        case mu_flat_0:   {use_conversion = 0; break;}
                        case mu_flat_1:   {use_conversion = 1; break;}
                        case mu_flat_2:   {use_conversion = 2; break;}
                        case mu_flat_3:   {use_conversion = 3; break;}
                        case mu_flat_4:   {use_conversion = 4; break;}
                        case mu_flat_5:   {use_conversion = 5; break;}
                        case mu_flat_6:   {use_conversion = 6; break;}
                        case mu_flat_7:   {use_conversion = 7; break;}
                        case mu_flat_8:   {use_conversion = 8; break;}
                        case mu_flat_9:   {use_conversion = 9; break;}
                        case mu_flat_10:  {use_conversion = 10; break;}
                        case mu_flat_11:  {use_conversion = 11; break;}
                        case mu_flat_12:  {use_conversion = 12; break;}
                        case mu_flat_13:  {use_conversion = 13; break;}
                        case mu_flat_14:  {use_conversion = 14; break;}
                        case mu_flat_15:  {use_conversion = 15; break;}
                        case mu_flat_16:  {use_conversion = 16; break;}
                        case mu_flat_17:  {use_conversion = 17; break;}
                        case mu_flat_18:  {use_conversion = 18; break;}
                        case mu_flat_19:  {use_conversion = 19; break;}
                        case mu_flat_20:  {use_conversion = 20; break;}
                        case mu_flat_21:  {use_conversion = 21; break;}
                        case mu_flat_22:  {use_conversion = 22; break;}
                        case mu_flat_23:  {use_conversion = 23; break;}
                        case mu_flat_24:  {use_conversion = 24; break;}
                        case mu_flat_25:  {use_conversion = 25; break;}
                        case mu_flat_26:  {use_conversion = 26; break;}
                        case mu_flat_27:  {use_conversion = 27; break;}
                        case mu_flat_28:  {use_conversion = 28; break;}
                        case mu_flat_29:  {use_conversion = 29; break;}
                        case mu_ramp_0:   {use_conversion = 30; break;}
                        case mu_ramp_1:   {use_conversion = 31; break;}
                        case mu_ramp_2:   {use_conversion = 32; break;}
                        case mu_ramp_3:   {use_conversion = 33; break;}
                        case mu_ramp_4:   {use_conversion = 34; break;}
                        case mu_ramp_5:   {use_conversion = 35; break;}
                        case mu_ramp_6:   {use_conversion = 36; break;}
                        case mu_ramp_7:   {use_conversion = 37; break;}
                        case mu_ramp_8:   {use_conversion = 38; break;}
                        case mu_ramp_9:   {use_conversion = 39; break;}
                        case mu_slope_0:  {use_conversion = 40; break;}
                        case mu_slope_1:  {use_conversion = 41; break;}
                        case mu_slope_6:  {use_conversion = 42; break;}
                        case mu_slope_7:  {use_conversion = 43; break;}
                        case mu_slope_8:  {use_conversion = 44; break;}
                        case mu_slope_9:  {use_conversion = 45; break;}
                        case mu_slope_10: {use_conversion = 46; break;}
                        case mu_slope_11: {use_conversion = 47; break;}
                        case mu_slope_12: {use_conversion = 48; break;}
                        case mu_slope_13: {use_conversion = 49; break;}
                        case tile_layer_changer:        {use_conversion = 50; break;}
                        case tile_layer_changer_left:   {use_conversion = 51; break;}
                        case mu_fof_0:                  {use_conversion = 52; break;}
                        case mu_fof_10:                 {use_conversion = 53; break;}
                        case mu_fof_2:                  {use_conversion = 54; break;}
                        case mu_fof_11:                 {use_conversion = 55; break;}
                        case tile_reverse_course_32:    {use_conversion = 56; break;}
                        case tile_ramp_entry:           {use_conversion = 57; break;}
                        case mu_slope_ceiling_16:       {use_conversion = 58; break;}
                        case mu_slope_ceiling_64:       {use_conversion = 59; break;}
                        case mu_scene_0:    {use_conversion = 60; break;}
                        case mu_scene_1:    {use_conversion = 61; break;}
                        case mu_scene_2:    {use_conversion = 62; break;}
                        case mu_scene_3:    {use_conversion = 63; break;}
                        case mu_scene_4:    {use_conversion = 64; break;}
                        case mu_scene_5:    {use_conversion = 65; break;}
                        case mu_scene_6:    {use_conversion = 66; break;}
                        case mu_scene_8:    {use_conversion = 67; break;}
                        case mu_scene_9:    {use_conversion = 68; break;}
                        case mu_scene_10:   {use_conversion = 69; break;}
                        case mu_scene_11:   {use_conversion = 70; break;}
                        case mu_scene_12:   {use_conversion = 71; break;}
                        case mu_scene_13:   {use_conversion = 72; break;}
                        case mu_scene_14:   {use_conversion = 73; break;}
                        case mu_scene_15:   {use_conversion = 74; break;}
                        case mu_scene_16:   {use_conversion = 75; break;}
                        case mu_scene_17:   {use_conversion = 76; break;}
                        case mu_scene_18:   {use_conversion = 77; break;}
                        case mu_scene_19:   {use_conversion = 78; break;}
                        case mu_scene_20:   {use_conversion = 79; break;}
                        case mu_scene_21:   {use_conversion = 80; break;}
                        case mu_scene_22:   {use_conversion = 81; break;}
                        case mu_scene_23:   {use_conversion = 82; break;}
                        case mu_scene24:    {use_conversion = 83; break;}
                        case mu_scene_25:   {use_conversion = 84; break;}
                        case spr_spikes_4:  {use_conversion = 85; break;}
                        case spr_spikes_3:  {use_conversion = 86; break;}
                        case spr_spikes_5:  {use_conversion = 87; break;}
                        case spr_spikes_6:  {use_conversion = 88; break;}
                        case spr_ladder_0:  {use_conversion = 89; break;}
                        case spr_hangbar_0: {use_conversion = 90; break;}
                        case spr_hangbar_1: {use_conversion = 91; break;}
                        case spr_dirt_0:    {use_conversion = 92; break;}
                        case spr_dirt_1:    {use_conversion = 93; break;}
                        case spr_flower_0:  {use_conversion = 94; break;}
                        case spr_flower_1:  {use_conversion = 95; break;}
                        case spr_flower_2:  {use_conversion = 96; break;}
                        case spr_flower_3:  {use_conversion = 97; break;}
                        case spr_flower_4:  {use_conversion = 98; break;}
                        case spr_flower_5:  {use_conversion = 99; break;}
                        case spr_flower_6:  {use_conversion = 100; break;}
                        case spr_flower_7:  {use_conversion = 101; break;}
                        case spr_flower_8:  {use_conversion = 102; break;}
                        case spr_crate_0:   {use_conversion = 103; break;}
                        case spr_gascan_0:  {use_conversion = 104; break;}
                        case spr_switch_0:  {use_conversion = 105; break;}
                        case spr_switch_2:  {use_conversion = 106; break;}
                        case spr_switch_4:  {use_conversion = 107; break;}
                        case spr_spring_0_0: {use_conversion = 108; break;}
                        case spr_spring_1_0: {use_conversion = 109; break;}
                        case spr_spring_2_0: {use_conversion = 110; break;}
                        case spr_spring_3_0: {use_conversion = 111; break;}
                        case spr_spring_4_0: {use_conversion = 112; break;}
                        case spr_spring_5_0: {use_conversion = 113; break;}
                        case spr_spring_6_0: {use_conversion = 114; break;}
                        case spr_spring_7_0: {use_conversion = 115; break;}
                        case spr_spring_8_0: {use_conversion = 116; break;}
                        case spr_spring_9_0: {use_conversion = 117; break;}
                        case spr_spring_10_0: {use_conversion = 118; break;}
                        case spr_spring_11_0: {use_conversion = 119; break;}
                        case spr_spring_12_0: {use_conversion = 120; break;}
                        case spr_spring_13_0: {use_conversion = 121; break;}
                        case spr_spring_14_0: {use_conversion = 122; break;}
                        case spr_spring_15_0: {use_conversion = 174; break;}
                        //Also convert double-sided slope tiles into their inside variants
                        case mu_slope_2:     {use_conversion = 42; break;}
                        case mu_slope_3:     {use_conversion = 43; break;}
                        case mu_slope_4:     {use_conversion = 44; break;}   
                        case mu_slope_5:     {use_conversion = 45; break;}                     
                        case mu_slope_14:    {use_conversion = 46; break;}
                        case mu_slope_15:    {use_conversion = 47; break;}
                        case mu_slope_16:    {use_conversion = 48; break;}
                        case mu_slope_17:    {use_conversion = 49; break;}
                        case mu_slope_20:    {use_conversion = 392; break;}
                        case mu_slope_21:    {use_conversion = 393; break;}
                        case mu_slope_22:    {use_conversion = 394; break;}
                        case mu_slope_23:    {use_conversion = 395; break;}
                        case mu_slope_24:    {use_conversion = 396; break;}
                        case mu_slope_25:    {use_conversion = 397; break;}
                        case mu_slope_26:    {use_conversion = 398; break;}
                        case mu_slope_27:    {use_conversion = 399; break;}
                        //Also convert tiles not registered in the level editor's tile definitions
                        case tile_reverse_course: {use_conversion = 154; break;}
                        case tile_ramp_1:         {use_conversion = 155; break;}
                        case tile_ramp_2:         {use_conversion = 156; break;}
                        case tile_ramp_3:         {use_conversion = 157; break;}
                        case tile_ramp_4:         {use_conversion = 158; break;}
                        case tile_ramp_auto:      {use_conversion = 160; break;}
                        case tile_ramp_item:      {use_conversion = 161; break;}
                        case mu_ramp_10:          {use_conversion = 162; break;}
                        case mu_ramp_11:          {use_conversion = 163; break;}
                        case mu_ramp_12:          {use_conversion = 164; break;}
                        case mu_ramp_13:          {use_conversion = 165; break;}
                        case mu_ramp_14:          {use_conversion = 166; break;}
                        case mu_ramp_15:          {use_conversion = 167; break;}
                        case mu_ramp_16:          {use_conversion = 168; break;}
                        case mu_ramp_17:          {use_conversion = 169; break;}
                        case mu_ramp_18:          {use_conversion = 170; break;}
                        case mu_ramp_19:          {use_conversion = 171; break;}
                        case mu_ramp_20:          {use_conversion = 172; break;}
                        case mu_ramp_21:          {use_conversion = 173; break;}
                        case mu_scene_27:         {use_conversion = 184; break;}
                        case mu_scene_28:         {use_conversion = 185; break;}
                        case mu_scene_29:         {use_conversion = 186; break;}
                        case mu_scene_30:         {use_conversion = 187; break;}
                        case mu_scene_31:         {use_conversion = 188; break;}
                        case mu_scene_32:         {use_conversion = 189; break;}
                        case mu_flat_30:          {use_conversion = 190; break;}
                        case mu_flat_31:          {use_conversion = 191; break;}
                        case mu_flat_32:          {use_conversion = 192; break;}
                        case mu_flat_33:          {use_conversion = 193; break;}
                        case mu_flat_34:          {use_conversion = 194; break;}
                        case mu_flat_35:          {use_conversion = 195; break;}
                        case mu_fof_12:           {use_conversion = 196; break;}
                        case mu_fof_13:           {use_conversion = 197; break;}
                        case mu_scene_33:         {use_conversion = 198; break;}
                        case mu_paint_black:      {use_conversion = 199; break;}
                        case mu_paint_white:      {use_conversion = 200; break;}
                        case mu_paint_red:        {use_conversion = 201; break;}
                        case mu_paint_burgundy:   {use_conversion = 202; break;}
                        case mu_paint_yellow:     {use_conversion = 203; break;}
                        case mu_paint_dark_yellow: {use_conversion = 204; break;}
                        case mu_paint_green:       {use_conversion = 205; break;}
                        case mu_paint_dark_green:  {use_conversion = 206; break;}
                        case mu_paint_cyan:        {use_conversion = 207; break;}
                        case mu_paint_dark_cyan:   {use_conversion = 208; break;}
                        case mu_paint_blue:        {use_conversion = 209; break;}
                        case mu_paint_pink:        {use_conversion = 210; break;}
                        case mu_paint_purple:      {use_conversion = 211; break;}
                        case mu_flat_36:           {use_conversion = 219; break;}
                        case mu_flat_37:           {use_conversion = 220; break;}
                        case mu_paint_dark_blue:   {use_conversion = 233; break;}
                        case mu_paint_light_gray:  {use_conversion = 234; break;}
                        case mu_slope_18:          {use_conversion = 238; break;}
                        case mu_slope_19:          {use_conversion = 239; break;}
                        //City Tile Set
                        case wd_flat_0:            {use_conversion = 270; break;}
                        case wd_flat_1:            {use_conversion = 271; break;}
                        case wd_flat_2:            {use_conversion = 272; break;}
                        case wd_flat_3:            {use_conversion = 273; break;}
                        case wd_flat_4:            {use_conversion = 274; break;}
                        case wd_flat_5:            {use_conversion = 275; break;}
                        case wd_flat_6:            {use_conversion = 276; break;}
                        case wd_flat_7:            {use_conversion = 277; break;}
                        case wd_flat_8:            {use_conversion = 278; break;}
                        case wd_flat_9:            {use_conversion = 279; break;}
                        case wd_flat_10:           {use_conversion = 280; break;}
                        case wd_flat_11:           {use_conversion = 281; break;}
                        case wd_flat_12:           {use_conversion = 282; break;}
                        case wd_flat_13:           {use_conversion = 283; break;}
                        case wd_flat_14:           {use_conversion = 284; break;}
                        case wd_flat_15:           {use_conversion = 285; break;}
                        case wd_flat_16:           {use_conversion = 286; break;}
                        case wd_flat_17:           {use_conversion = 287; break;}
                        case wd_flat_18:           {use_conversion = 448; break;}
                        case wd_flat_19:           {use_conversion = 449; break;}
                        //Ramps
                        case wd_ramp_0:            {use_conversion = 288; break;}
                        case wd_ramp_1:            {use_conversion = 289; break;}
                        case wd_ramp_2:            {use_conversion = 290; break;}
                        case wd_ramp_3:            {use_conversion = 291; break;}
                        case wd_ramp_4:            {use_conversion = 292; break;}
                        case wd_ramp_5:            {use_conversion = 293; break;}
                        case wd_ramp_6:            {use_conversion = 294; break;}
                        case wd_ramp_7:            {use_conversion = 295; break;}
                        case wd_ramp_8:            {use_conversion = 296; break;}
                        case wd_ramp_9:            {use_conversion = 297; break;}
                        case wd_ramp_10:           {use_conversion = 298; break;}
                        case wd_ramp_11:           {use_conversion = 299; break;}
                        case wd_ramp_12:           {use_conversion = 300; break;}
                        case wd_ramp_13:           {use_conversion = 301; break;}
                        case wd_ramp_14:           {use_conversion = 302; break;}
                        case wd_ramp_15:           {use_conversion = 303; break;}
                        case wd_ramp_16:           {use_conversion = 352; break;}
                        case wd_ramp_17:           {use_conversion = 353; break;}
                        case wd_ramp_18:           {use_conversion = 354; break;}
                        case wd_ramp_19:           {use_conversion = 355; break;}
                        case wd_ramp_20:           {use_conversion = 356; break;}
                        case wd_ramp_21:           {use_conversion = 357; break;}
                        case wd_ramp_22:           {use_conversion = 358; break;}
                        case wd_ramp_23:           {use_conversion = 359; break;}
                        case wd_ramp_24:           {use_conversion = 360; break;}
                        case wd_ramp_25:           {use_conversion = 361; break;}
                        case wd_ramp_26:           {use_conversion = 362; break;}
                        case wd_ramp_27:           {use_conversion = 363; break;}
                        //Slopes
                        case wd_slope_0:           {use_conversion = 304; break;}
                        case wd_slope_1:           {use_conversion = 305; break;}
                        case wd_slope_2:           {use_conversion = 306; break;}
                        case wd_slope_3:           {use_conversion = 307; break;}
                        case wd_slope_4:           {use_conversion = 308; break;}
                        case wd_slope_5:           {use_conversion = 309; break;}
                        case wd_slope_6:           {use_conversion = 310; break;}
                        case wd_slope_7:           {use_conversion = 311; break;}
                        case wd_slope_8:           {use_conversion = 312; break;}
                        case wd_slope_9:           {use_conversion = 313; break;}
                        case wd_slope_10:          {use_conversion = 314; break;}
                        case wd_slope_11:          {use_conversion = 315; break;}
                        case wd_slope_12:          {use_conversion = 316; break;}
                        case wd_slope_13:          {use_conversion = 317; break;}
                        case wd_slope_14:          {use_conversion = 318; break;}
                        case wd_slope_15:          {use_conversion = 319; break;}
                        case wd_slope_16:          {use_conversion = 344; break;}
                        case wd_slope_17:          {use_conversion = 345; break;}
                        case wd_slope_18:          {use_conversion = 346; break;}
                        case wd_slope_19:          {use_conversion = 347; break;}
                        case wd_slope_20:          {use_conversion = 348; break;}
                        case wd_slope_21:          {use_conversion = 349; break;}
                        case wd_slope_22:          {use_conversion = 350; break;}
                        case wd_slope_23:          {use_conversion = 351; break;}
                        //FOFs
                        case wd_fof_1:             {use_conversion = 609; break;}
                        case wd_fof_2:             {use_conversion = 610; break;}
                        case wd_fof_3:             {use_conversion = 611; break;}
                        case wd_fof_4:             {use_conversion = 612; break;}
                        case wd_fof_0:             {use_conversion = 613; break;}
                        //Scenery
                        case wd_scenery_0:         {use_conversion = 320; break;}
                        case wd_scenery_1:         {use_conversion = 321; break;}
                        case wd_scenery_2:         {use_conversion = 322; break;}
                        case wd_scenery_3:         {use_conversion = 323; break;}
                        case wd_scenery_4:         {use_conversion = 324; break;}
                        case wd_scenery_5:         {use_conversion = 325; break;}
                        case wd_scenery_6:         {use_conversion = 326; break;}
                        case wd_scenery_7:         {use_conversion = 327; break;}
                        case wd_scenery_8:         {use_conversion = 328; break;}
                        case wd_scenery_9:         {use_conversion = 329; break;}
                        case wd_scenery_10:        {use_conversion = 330; break;}
                        case wd_scenery_11:        {use_conversion = 331; break;}
                        case wd_scenery_12:        {use_conversion = 332; break;}
                        case wd_scenery_13:        {use_conversion = 400; break;}
                        case wd_scenery_14:        {use_conversion = 401; break;}
                        case wd_scenery_15:        {use_conversion = 402; break;}
                        case wd_scenery_16:        {use_conversion = 403; break;}
                        case wd_scenery_17:        {use_conversion = 404; break;}
                        case wd_scenery_18:        {use_conversion = 405; break;}
                        case wd_scenery_19:        {use_conversion = 406; break;}
                        case wd_scenery_20:        {use_conversion = 407; break;}
                        case wd_scenery_21:        {use_conversion = 408; break;}
                        case wd_scenery_22:        {use_conversion = 409; break;}
                        case wd_scenery_23:        {use_conversion = 410; break;}
                        case wd_scenery_24:        {use_conversion = 411; break;}
                        case wd_scenery_25:        {use_conversion = 412; break;}
                        case wd_scenery_26:        {use_conversion = 413; break;}
                        case wd_scenery_27:        {use_conversion = 414; break;}
                        case wd_scenery_28:        {use_conversion = 415; break;}
                        case wd_scenery_29:        {use_conversion = 416; break;}
                        case wd_scenery_30:        {use_conversion = 417; break;}
                        case wd_scenery_31:        {use_conversion = 418; break;}
                        case wd_scenery_32:        {use_conversion = 419; break;}
                        case wd_scenery_33:        {use_conversion = 420; break;}
                        case wd_scenery_34:        {use_conversion = 421; break;}
                        case wd_scenery_35:        {use_conversion = 428; break;}
                        case wd_scenery_36:        {use_conversion = 429; break;}
                        case wd_scenery_37:        {use_conversion = 437; break;}
                        case wd_scenery_38:        {use_conversion = 438; break;}
                        case wd_scenery_39:        {use_conversion = 439; break;}
                        case wd_scenery_40:        {use_conversion = 440; break;}
                        case wd_scenery_41:        {use_conversion = 455; break;}
                        case wd_scenery_42:        {use_conversion = 456; break;}
                        case wd_scenery_43:        {use_conversion = 458; break;}
                        case wd_scenery_44:        {use_conversion = 459; break;}
                        case wd_scenery_45:        {use_conversion = 460; break;}
                        case wd_scenery_46:        {use_conversion = 461; break;}
                        case wd_scenery_47:        {use_conversion = 462; break;}
                        case wd_scenery_48:        {use_conversion = 483; break;}
                        case wd_scenery_49:        {use_conversion = 484; break;}
                        case wd_scenery_50:        {use_conversion = 485; break;}
                        case wd_scenery_51:        {use_conversion = 486; break;}
                        case wd_scenery_52:        {use_conversion = 487; break;}
                        case wd_scenery_53:        {use_conversion = 488; break;}
                        case wd_scenery_54:        {use_conversion = 489; break;}
                        case wd_scenery_55:        {use_conversion = 490; break;}
                        case wd_scenery_56:        {use_conversion = 491; break;}
                        case wd_scenery_57:        {use_conversion = 492; break;}
                        case wd_scenery_58:        {use_conversion = 493; break;}
                        case wd_scenery_59:        {use_conversion = 494; break;}
                        //Mountain Tile Set
                        case mnt_flat_0:           {use_conversion = 498; break;}
                        case mnt_flat_1:           {use_conversion = 499; break;}
                        case mnt_flat_2:           {use_conversion = 500; break;}
                        case mnt_flat_3:           {use_conversion = 501; break;}
                        case mnt_flat_4:           {use_conversion = 502; break;}
                        //Ramps
                        case mnt_ramp_0:           {use_conversion = 503; break;}
                        case mnt_ramp_1:           {use_conversion = 504; break;}
                        case mnt_ramp_2:           {use_conversion = 505; break;}
                        case mnt_ramp_3:           {use_conversion = 506; break;}
                        //Scenery
                        case mnt_scene_0:          {use_conversion = 507; break;}
                        case mnt_scene_1:          {use_conversion = 508; break;}
                        case mnt_scene_2:          {use_conversion = 509; break;}
                        case mnt_scene_3:          {use_conversion = 510; break;}
                        case mnt_scene_4:          {use_conversion = 511; break;}
                        case mnt_scene_5:          {use_conversion = 512; break;}
                        case mnt_scene_6:          {use_conversion = 513; break;}
                        case mnt_scene_7:          {use_conversion = 514; break;}
                        case mnt_scene_8:          {use_conversion = 515; break;}
                        case mnt_scene_9:          {use_conversion = 516; break;}
                        case mnt_scene_10:         {use_conversion = 517; break;}
                        //Slope
                        case mnt_slope_0:          {use_conversion = 518; break;}
                        case mnt_slope_1:          {use_conversion = 519; break;}
                        case mnt_slope_2:          {use_conversion = 520; break;}
                        case mnt_slope_3:          {use_conversion = 521; break;}
                        case mnt_slope_4:          {use_conversion = 522; break;}
                        case mnt_slope_5:          {use_conversion = 523; break;}
                        case mnt_slope_6:          {use_conversion = 524; break;}
                        case mnt_slope_7:          {use_conversion = 525; break;}
                        //FOFs
                        case mnt_fof_0:            {use_conversion = 526; break;}
                        case mnt_fof_1:            {use_conversion = 621; break;}
                        case mnt_fof_2:            {use_conversion = 622; break;}
                        case mnt_fof_3:            {use_conversion = 623; break;}
                        case mnt_fof_4:            {use_conversion = 624; break;}

                        //Spikes
                        case spr_spikes_0:         {use_conversion = 333; break;}
                        case spr_spikes_7:         {use_conversion = 334; break;}
                        case spr_spikes_8:         {use_conversion = 335; break;}
                        case spr_spikes_9:         {use_conversion = 336; break;}
                        //Ladders
                        case spr_ladder_1:         {use_conversion = 337; break;}
                        case spr_ladder_2:         {use_conversion = 527; break;}
                        case spr_spikes_10:        {use_conversion = 528; break;}
                        case spr_spikes_11:        {use_conversion = 529; break;}
                        case spr_spikes_12:        {use_conversion = 530; break;}
                        case spr_spikes_13:        {use_conversion = 531; break;}
                        case mnt_flat_5:           {use_conversion = 532; break;}
                        case mnt_flat_6:           {use_conversion = 533; break;}
                        case mnt_flat_7:           {use_conversion = 534; break;}
                        case spr_hangbar_2:        {use_conversion = 535; break;}
                        case mnt_flat_8:           {use_conversion = 536; break;}
                        case mnt_flat_9:           {use_conversion = 537; break;}
                        case mnt_flat_10:          {use_conversion = 538; break;}
                        case mnt_flat_11:          {use_conversion = 539; break;}
                        case mnt_flat_12:          {use_conversion = 540; break;}
                        case mnt_flat_13:          {use_conversion = 541; break;}
                        case mnt_flat_14:          {use_conversion = 542; break;}
                        case mnt_flat_15:          {use_conversion = 543; break;}
                        case mnt_flat_16:          {use_conversion = 544; break;}
                        case mnt_flat_17:          {use_conversion = 545; break;}
                        case mnt_scene_11:         {use_conversion = 546; break;}
                        case mnt_scene_12:         {use_conversion = 547; break;}
                        case mnt_scene_13:         {use_conversion = 548; break;}
                        case mnt_scene_14:         {use_conversion = 549; break;}
                        case mnt_scene_15:         {use_conversion = 550; break;}
                        case mnt_flat_18:          {use_conversion = 551; break;}
                        case mnt_flat_19:          {use_conversion = 552; break;}
                        case mnt_flat_20:          {use_conversion = 553; break;}
                        case mnt_flat_21:          {use_conversion = 554; break;}
                        case mnt_flat_22:          {use_conversion = 555; break;}
                        case mnt_flat_23:          {use_conversion = 556; break;}
                        case mnt_slope_8:          {use_conversion = 557; break;}
                        case mnt_slope_9:          {use_conversion = 558; break;}
                        case mnt_slope_10:         {use_conversion = 559; break;}
                        case mnt_slope_11:         {use_conversion = 560; break;}
                        case mnt_slope_12:         {use_conversion = 561; break;}
                        case mnt_slope_13:         {use_conversion = 562; break;}
                        case mnt_slope_14:         {use_conversion = 563; break;}
                        case mnt_slope_15:         {use_conversion = 564; break;}
                        case mnt_slope_16:         {use_conversion = 565; break;}
                        case mnt_slope_17:         {use_conversion = 566; break;}
                        case mnt_slope_18:         {use_conversion = 567; break;}
                        case mnt_slope_19:         {use_conversion = 568; break;}
                        case mnt_slope_20:         {use_conversion = 569; break;}
                        case mnt_slope_21:         {use_conversion = 570; break;}
                        case mnt_slope_22:         {use_conversion = 571; break;}
                        case mnt_slope_23:         {use_conversion = 572; break;}
                        case mnt_ramp_4:           {use_conversion = 573; break;}
                        case mnt_ramp_5:           {use_conversion = 574; break;}
                        case mnt_ramp_6:           {use_conversion = 575; break;}
                        case mnt_ramp_7:           {use_conversion = 576; break;}
                        case mnt_ramp_8:           {use_conversion = 577; break;}
                        case mnt_ramp_9:           {use_conversion = 578; break;}
                        case mnt_ramp_10:          {use_conversion = 579; break;}
                        case mnt_ramp_11:          {use_conversion = 580; break;}
                        case mnt_slope_24:         {use_conversion = 581; break;}
                        case mnt_slope_25:         {use_conversion = 582; break;}
                        case mnt_slope_26:         {use_conversion = 583; break;}
                        case mnt_slope_27:         {use_conversion = 584; break;}
                        case mnt_slope_28:         {use_conversion = 585; break;}
                        case mnt_slope_29:         {use_conversion = 586; break;}
                        case mnt_slope_30:         {use_conversion = 587; break;}
                        case mnt_slope_31:         {use_conversion = 588; break;}
                        case mnt_scene_16:         {use_conversion = 589; break;}
                        case mnt_scene_17:         {use_conversion = 590; break;}
                        case mnt_scene_18:         {use_conversion = 591; break;}
                        case mnt_flat_24:          {use_conversion = 592; break;}
                        case mnt_flat_25:          {use_conversion = 593; break;}
                        case mnt_flat_26:          {use_conversion = 594; break;}
                        case mnt_flat_27:          {use_conversion = 595; break;}
                        case mnt_flat_28:          {use_conversion = 596; break;}
                        case mnt_flat_29:          {use_conversion = 597; break;}
                        case mnt_flat_30:          {use_conversion = 598; break;}
                        case mnt_flat_31:          {use_conversion = 599; break;}
                        case mnt_flat_32:          {use_conversion = 600; break;}
                        case mnt_flat_33:          {use_conversion = 606; break;}
                        case mnt_scene_19:         {use_conversion = 614; break;}
                        case mnt_scene_20:         {use_conversion = 615; break;}
                        case mnt_scene_21:         {use_conversion = 616; break;}
                        case mnt_scene_22:         {use_conversion = 617; break;}
                        case mnt_flat_34:          {use_conversion = 618; break;}
                        case mnt_scene_23:         {use_conversion = 619; break;}
                        case mnt_scene_24:         {use_conversion = 620; break;}
                        case mnt_ramp_12:          {use_conversion = 626; break;}
                        case mnt_ramp_13:          {use_conversion = 627; break;}
                        case mnt_ramp_14:          {use_conversion = 628; break;}
                        case mnt_ramp_15:          {use_conversion = 629; break;}
                        //Lagoon Tile Set
                        case ll_flat_0:            {use_conversion = 630; break;}
                        case ll_flat_1:            {use_conversion = 631; break;}
                        case ll_scene_0:           {use_conversion = 632; break;}
                        case wd_slope_24:          {use_conversion = 633; break;}
                        case wd_slope_25:          {use_conversion = 634; break;}
                        case wd_slope_26:          {use_conversion = 635; break;}
                        case wd_slope_27:          {use_conversion = 636; break;}
                        case wd_slope_28:          {use_conversion = 637; break;}
                        case wd_slope_29:          {use_conversion = 638; break;}
                        case wd_slope_30:          {use_conversion = 639; break;}
                        case wd_slope_31:          {use_conversion = 640; break;}
                        case ll_slope_0:           {use_conversion = 641; break;}
                        case ll_slope_1:           {use_conversion = 642; break;}
                        case ll_slope_2:           {use_conversion = 643; break;}
                        case ll_slope_3:           {use_conversion = 644; break;}
                        case ll_slope_4:           {use_conversion = 645; break;}
                        case ll_slope_5:           {use_conversion = 646; break;}
                        case ll_slope_6:           {use_conversion = 647; break;}
                        case ll_slope_7:           {use_conversion = 648; break;}
                        case ll_slope_8:           {use_conversion = 649; break;}
                        case ll_slope_9:           {use_conversion = 650; break;}
                        case ll_slope_10:          {use_conversion = 651; break;}
                        case ll_slope_11:          {use_conversion = 652; break;}
                        case ll_slope_12:          {use_conversion = 653; break;}
                        case ll_slope_13:          {use_conversion = 654; break;}
                        case ll_slope_14:          {use_conversion = 655; break;}
                        case ll_slope_15:          {use_conversion = 656; break;}
                        case ll_fof_0:             {use_conversion = 657; break;}
                        case ll_scene_1:           {use_conversion = 658; break;}
                        case ll_scene_2:           {use_conversion = 659; break;}
                        case ll_scene_3:           {use_conversion = 660; break;}
                        case ll_scene_4:           {use_conversion = 661; break;}
                        case ll_scene_5:           {use_conversion = 662; break;}
                        case ll_flat_2:            {use_conversion = 663; break;}
                        case ll_flat_3:            {use_conversion = 664; break;}
                        case ll_flat_4:            {use_conversion = 665; break;}
                        case spr_spikes_14:        {use_conversion = 666; break;}
                        case spr_spikes_15:        {use_conversion = 667; break;}
                        case spr_spikes_16:        {use_conversion = 668; break;}
                        case spr_spikes_17:        {use_conversion = 669; break;}
                        case spr_ladder_3:         {use_conversion = 670; break;}
                        case spr_ladder_4:         {use_conversion = 671; break;}
                        case spr_hangbar_3:        {use_conversion = 672; break;}
                        case ll_flat_5:            {use_conversion = 673; break;}
                        case ll_flat_6:            {use_conversion = 674; break;}
                        case ll_flat_7:            {use_conversion = 675; break;}
                        case ll_flat_8:            {use_conversion = 676; break;}
                        case ll_flat_9:            {use_conversion = 677; break;}
                        case ll_flat_10:           {use_conversion = 678; break;}
                        case ll_flat_11:           {use_conversion = 679; break;}
                        case ll_flat_12:           {use_conversion = 680; break;}
                        case ll_flat_13:           {use_conversion = 681; break;}
                        case ll_flat_14:           {use_conversion = 682; break;}
                        case ll_flat_15:           {use_conversion = 683; break;}
                        case ll_fof_1:             {use_conversion = 684; break;}
                        case ll_fof_2:             {use_conversion = 685; break;}
                        case ll_slope_16:          {use_conversion = 686; break;}
                        case ll_slope_17:          {use_conversion = 687; break;}
                        case ll_slope_18:          {use_conversion = 688; break;}
                        case ll_slope_19:          {use_conversion = 689; break;}
                        case ll_slope_20:          {use_conversion = 690; break;}
                        case ll_slope_21:          {use_conversion = 691; break;}
                        case ll_slope_22:          {use_conversion = 692; break;}
                        case ll_slope_23:          {use_conversion = 693; break;}
                        case ll_slope_24:          {use_conversion = 694; break;}
                        case ll_slope_25:          {use_conversion = 695; break;}
                        case ll_fof_3:             {use_conversion = 700; break;}
                        case ll_fof_4:             {use_conversion = 701; break;}
                        case ll_slope_26:          {use_conversion = 702; break;}
                        case ll_slope_27:          {use_conversion = 703; break;}
                        case ll_slope_28:          {use_conversion = 704; break;}
                        case ll_flat_16:           {use_conversion = 706; break;}
                        case ll_scene_6:           {use_conversion = 707; break;}
                        case ll_scene_7:           {use_conversion = 708; break;}
                        case ll_scene_8:           {use_conversion = 709; break;}
                        case ll_scene_9:           {use_conversion = 710; break;}
                        case ll_scene_10:          {use_conversion = 711; break;}
                        case ll_scene_11:          {use_conversion = 712; break;}
                        case ll_scene_12:          {use_conversion = 713; break;}
                        case ll_scene_13:          {use_conversion = 714; break;}
                        case ll_scene_14:          {use_conversion = 715; break;}
                        case ll_scene_15:          {use_conversion = 716; break;}
                        case ll_scene_16:          {use_conversion = 717; break;}
                        case ll_scene_17:          {use_conversion = 718; break;}
                        case ll_scene_18:          {use_conversion = 719; break;}
                        case ll_scene_19:          {use_conversion = 720; break;}
                        case ll_scene_20:          {use_conversion = 721; break;}
                        case ll_scene_21:          {use_conversion = 722; break;}
                        case ll_scene_22:          {use_conversion = 723; break;}
                        case ll_scene_23:          {use_conversion = 724; break;}
                        case ll_scene_24:          {use_conversion = 725; break;}
                        case ll_scene_25:          {use_conversion = 726; break;}
                        case ll_scene_26:          {use_conversion = 727; break;}
                        case ll_scene_27:          {use_conversion = 728; break;}
                        case ll_scene_28:          {use_conversion = 729; break;}
                        case ll_scene_29:          {use_conversion = 730; break;}
                        case ll_scene_30:          {use_conversion = 731; break;}
                        case ll_scene_31:          {use_conversion = 732; break;}
                        case ll_scene_32:          {use_conversion = 733; break;}
                        case ll_scene_33:          {use_conversion = 734; break;}
                        case ll_scene_34:          {use_conversion = 735; break;}
                        case ll_scene_35:          {use_conversion = 736; break;}
                        case ll_scene_36:          {use_conversion = 737; break;}
                        case ll_scene_37:          {use_conversion = 738; break;}
                        case ll_scene_38:          {use_conversion = 739; break;}
                        case ll_scene_39:          {use_conversion = 740; break;}
                        case ll_scene_40:          {use_conversion = 741; break;}
                        case ll_scene_41:          {use_conversion = 742; break;}
                        case ll_scene_42:          {use_conversion = 743; break;}
                        case ll_slope_29:          {use_conversion = 744; break;}
                        case ll_slope_30:          {use_conversion = 745; break;}
                        case ll_slope_31:          {use_conversion = 746; break;}
                        case ll_slope_32:          {use_conversion = 747; break;}
                        case ll_slope_33:          {use_conversion = 748; break;}
                        case ll_slope_34:          {use_conversion = 749; break;}
                        case ll_slope_35:          {use_conversion = 750; break;}
                        case ll_slope_36:          {use_conversion = 751; break;}
                        case ll_slope_37:          {use_conversion = 755; break;}
                        case ll_slope_38:          {use_conversion = 756; break;}
                        case ll_flat_17:           {use_conversion = 757; break;}
                        case ll_flat_18:           {use_conversion = 758; break;}
                        case ll_flat_19:           {use_conversion = 759; break;}
                        case ll_flat_20:           {use_conversion = 760; break;}
                        case ll_slope_39:          {use_conversion = 761; break;}
                        case ll_slope_40:          {use_conversion = 762; break;}
                        case ll_slope_41:          {use_conversion = 763; break;}
                        case ll_slope_42:          {use_conversion = 764; break;}
                        case ll_flat_21:           {use_conversion = 765; break;}
                        case ll_flat_22:           {use_conversion = 766; break;}
                        case ll_flat_23:           {use_conversion = 767; break;}
                        case ll_scene_43:          {use_conversion = 768; break;}
                        case ll_scene_44:          {use_conversion = 769; break;}
                        case ll_scene_45:          {use_conversion = 770; break;}
                        case ll_scene_46:          {use_conversion = 771; break;}
                        case ll_scene_47:          {use_conversion = 775; break;}
                        case ll_scene_48:          {use_conversion = 776; break;}
                        case ll_scene_49:          {use_conversion = 777; break;}
                        case ll_scene_50:          {use_conversion = 778; break;}
                        case ll_scene_51:          {use_conversion = 779; break;}
                        case ll_scene_52:          {use_conversion = 780; break;}
                        case wd_scenery_60:        {use_conversion = 781; break;}
                        case wd_scenery_61:        {use_conversion = 784; break;}
                        case wd_scenery_62:        {use_conversion = 785; break;}
                        case wd_flat_20:           {use_conversion = 795; break;}
                        case wd_flat_21:           {use_conversion = 796; break;}
                        case wd_flat_22:           {use_conversion = 797; break;}
                        case wd_flat_23:           {use_conversion = 798; break;}
                        case wd_flat_24:           {use_conversion = 799; break;}
                        case wd_flat_25:           {use_conversion = 800; break;}
                        case wd_flat_26:           {use_conversion = 801; break;}
                        case wd_flat_27:           {use_conversion = 802; break;}
                        case wd_flat_28:           {use_conversion = 803; break;}
                        case wd_flat_29:           {use_conversion = 804; break;}
                        case wd_flat_30:           {use_conversion = 805; break;}
                        case wd_flat_31:           {use_conversion = 806; break;}
                        case wd_flat_32:           {use_conversion = 807; break;}
                        case wd_flat_33:           {use_conversion = 808; break;}
                        case wd_scenery_63:        {use_conversion = 809; break;}
                        case wd_scenery_64:        {use_conversion = 810; break;}
                        case wd_scenery_65:        {use_conversion = 811; break;}
                        case wd_scenery_66:        {use_conversion = 812; break;}
                        case wd_scenery_67:        {use_conversion = 813; break;}
                        case rg_rail_0:            {use_conversion = 814; break;}
                        case rg_rail_1:            {use_conversion = 815; break;}
                        case rg_rail_2:            {use_conversion = 816; break;}
                        case rg_rail_3:            {use_conversion = 817; break;}
                        case rg_rail_4:            {use_conversion = 818; break;}
                        case rg_rail_5:            {use_conversion = 819; break;}
                        case wd_flat_34:           {use_conversion = 821; break;}
                        case wd_flat_35:           {use_conversion = 822; break;}
                        case wd_flat_36:           {use_conversion = 823; break;}
                        case wd_flat_37:           {use_conversion = 824; break;}
                        case wd_flat_38:           {use_conversion = 825; break;}
                        case wd_flat_39:           {use_conversion = 826; break;}
                        case wd_flat_40:           {use_conversion = 827; break;}
                        case spr_spikes_2:         {use_conversion = 828; break;}
                        case spr_spikes_18:        {use_conversion = 829; break;}
                        case spr_spikes_19:        {use_conversion = 830; break;}
                        case spr_spikes_20:        {use_conversion = 831; break;}
                        case spr_ladder_5:         {use_conversion = 832; break;}
                        case wd_scenery_68:        {use_conversion = 834; break;}
                        case wd_scenery_69:        {use_conversion = 835; break;}
                        case wd_scenery_70:        {use_conversion = 836; break;}
                        case wd_scenery_71:        {use_conversion = 837; break;}
                        case wd_flat_41:           {use_conversion = 838; break;}
                        case wd_flat_42:           {use_conversion = 839; break;}
                        case rg_rail_6:            {use_conversion = 870; break;}
                        case rg_rail_7:            {use_conversion = 871; break;}
                        case rg_rail_12:           {use_conversion = 872; break;}
                        case rg_rail_13:           {use_conversion = 873; break;}
                        case rg_rail_14:           {use_conversion = 874; break;}
                        case rg_rail_15:           {use_conversion = 875; break;}
                        case rg_rail_16:           {use_conversion = 876; break;}
                        case rg_rail_17:           {use_conversion = 877; break;}
                        case wd_scenery_72:        {use_conversion = 889; break;}
                        case wd_scenery_73:        {use_conversion = 890; break;}
                        case mu_flat_38:           {use_conversion = 891; break;}
                        case mu_flat_39:           {use_conversion = 892; break;}
                        case mu_flat_40:           {use_conversion = 893; break;}
                        case mu_flat_41:           {use_conversion = 894; break;}
                        case mu_flat_42:           {use_conversion = 895; break;}
                        case mu_flat_43:           {use_conversion = 896; break;}
                        case mu_scene_34:          {use_conversion = 897; break;}
                        case wd_scenery_74:        {use_conversion = 898; break;}
                        case cm_camera_100:        {use_conversion = 899; break;}
                        case cm_camera_50:         {use_conversion = 900; break;}
                        case cm_camera_25:         {use_conversion = 901; break;}
                        case wd_flat_43:           {use_conversion = 905; break;}
                        case wd_flat_44:           {use_conversion = 906; break;}
                        case wd_flat_45:           {use_conversion = 907; break;}
                        case wd_flat_46:           {use_conversion = 908; break;}
                        case wd_scenery_75:        {use_conversion = 909; break;}
                        case wd_scenery_76:        {use_conversion = 910; break;}
                        case wd_scenery_77:        {use_conversion = 911; break;}
                        case wd_scenery_78:        {use_conversion = 912; break;}
                        case wd_scenery_79:        {use_conversion = 913; break;}
                        case wd_scenery_80:        {use_conversion = 914; break;}
                        case wd_scenery_81:        {use_conversion = 915; break;}
                        case wd_scenery_82:        {use_conversion = 916; break;}
                        case wd_scenery_83:        {use_conversion = 917; break;}
                        case wd_scenery_84:        {use_conversion = 918; break;}
                        case wd_scenery_85:        {use_conversion = 919; break;}
                        case wd_scenery_86:        {use_conversion = 920; break;}
                        case wd_scenery_87:        {use_conversion = 921; break;}
                        case wd_scenery_88:        {use_conversion = 922; break;}
                        case wd_scenery_89:        {use_conversion = 923; break;}
                        case wd_scenery_90:        {use_conversion = 924; break;}
                        case wd_scenery_91:        {use_conversion = 925; break;}
                        case wd_scenery_92:        {use_conversion = 926; break;}
                        case wd_scenery_93:        {use_conversion = 927; break;}
                        case wd_scenery_94:        {use_conversion = 928; break;}
                        case wd_scenery_95:        {use_conversion = 929; break;}
                        case wd_scenery_96:        {use_conversion = 930; break;}
                        case wd_scenery_97:        {use_conversion = 931; break;}
                        case wd_scenery_98:        {use_conversion = 932; break;}
                        case wd_scenery_99:        {use_conversion = 933; break;}
                        case wd_scenery_100:       {use_conversion = 938; break;}
                        case wd_scenery_101:       {use_conversion = 939; break;}
                        case wd_scenery_102:       {use_conversion = 940; break;}
                        case wd_scenery_103:       {use_conversion = 945; break;}

                        //Ignore tile if it is not a registered tile in the definition table
                        default:                   {use_conversion = -1;  break;}
                    }
                //Skip Over Writing Tile Data For Tiles Not In Our Asset Definition Table
                if use_conversion != -1
                    {
                        ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_x",string(tile_get_x(use_write_array[use_write_position])))
                        ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_y",string(tile_get_y(use_write_array[use_write_position])))
                        ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_depth",string(tile_get_depth(use_write_array[use_write_position])))
                        ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_alpha",string(tile_get_alpha(use_write_array[use_write_position])))
                        ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_xscale",string(tile_get_xscale(use_write_array[use_write_position])))
                        ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_yscale",string(tile_get_yscale(use_write_array[use_write_position])))
                        ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_asset",string(use_conversion))
                    }
                else ini_write_string(map_offset+"lvl_tiles_"+string(use_write_position),"tile_ignore",string(-1));
                //Iterate Write Position
                use_write_position += 1
                //Exit Loop Once We Have Finished Writing
                if use_write_position = use_write_length break;
            }
        ini_write_string(map_offset+"lvl_hd","lvl_tile_count",string(use_write_position))
        //Write Object Data
        use_write_obj_position = 0
        var use_conversion_counter = 0;
        //Activate All Objects For Reading
        instance_activate_all()
        while(use_write_obj_position &lt;= instance_count)
            {
                var obj = instance_id[use_write_obj_position];
                //Arbitrary Asset Definition Table
                var use_conversion = 0;
                var use_conversion_npc = 0;
                switch(obj.object_index)
                    {
                        case obj_gem_float:                 {use_conversion = 123; break;}
                        case obj_petal_float:               {use_conversion = 124; break;}
                        case obj_1up:                       {use_conversion = 125; break;}
                        case obj_test_target:               {use_conversion = 126; break;}
                        case obj_checkpoint:                {use_conversion = 127; break;}
                        case obj_air_bubble:                {use_conversion = 128; break;}
                        case obj_player_spawnpoint:         {use_conversion = 129; break;}
                        case obj_player_spawnpoint_carol:   {use_conversion = 130; break;}
                        case obj_player_spawnpoint_milla:   {use_conversion = 131; break;}
                        case obj_camera_boundary_top:       {use_conversion = 132; break;}
                        case obj_camera_boundary_bottom:    {use_conversion = 133; break;}
                        case obj_camera_boundary_left:      {use_conversion = 134; break;}
                        case obj_camera_boundary_right:     {use_conversion = 135; break;}
                        case obj_waterheight:               {use_conversion = 136; break;}
                        case obj_water_height_switch:       {use_conversion = 137; break;}
                        case obj_platform_hor:              {use_conversion = 138; break;}
                        case obj_platform_ver:              {use_conversion = 139; break;}
                        case obj_platform_cir:              {use_conversion = 140; break;}
                        case obj_platform_half_cir:         {use_conversion = 141; break;}
                        case obj_shield_earth:              {use_conversion = 142; break;}
                        case obj_shield_fire:               {use_conversion = 143; break;}
                        case obj_shield_metal:              {use_conversion = 144; break;}
                        case obj_shield_water:              {use_conversion = 145; break;}
                        case obj_shield_wood:               {use_conversion = 146; break;}
                        case obj_mu_ball_spike:             {use_conversion = 149; break;}
                        case obj_mu_rotating_spikes:        {use_conversion = 150; break;}
                        case obj_metal_pup:                 {use_conversion = 151; break;}
                        case obj_blade_orbiter:             {use_conversion = 152; break;}
                        case obj_shock_puppet:              {use_conversion = 153; break;}
                        case obj_player_spawnpoint_carols_bike: {use_conversion = 180; break;}
                        case obj_keycard:                   {use_conversion = 181; break;}
                        case obj_keycard_terminal:          {use_conversion = 182; break;}
                        case obj_keycard_door:              {use_conversion = 183; break;}
                        case obj_camera_zoom_reset:         {use_conversion = 212; break;}
                        case obj_camera_zoom_2x:            {use_conversion = 213; break;}
                        case obj_camera_zoom_4x:            {use_conversion = 214; break;}
                        case obj_loop_exit:                 {use_conversion = 215; break;}
                        case obj_loop_logic:                {use_conversion = 216; break;}
                        case obj_bg_logic_nighttime:        {use_conversion = 217; break;}
                        case obj_bg_city:                   {use_conversion = 218; break;}
                        case obj_turretus:                  {use_conversion = 221; break;}
                        case obj_star_flounder:             {use_conversion = 222; break;}
                        case obj_shark_torpedo:             {use_conversion = 223; break;}
                        case obj_dna_cannon:                {use_conversion = 224; break;}
                        case obj_firespitter:               {use_conversion = 225; break;}
                        case obj_buoybuoy:                  {use_conversion = 226; break;}
                        case obj_ghetto_blaster:            {use_conversion = 227; break;}
                        case obj_bullfrag:                  {use_conversion = 228; break;}
                        case obj_bg_logic:                  {use_conversion = 229; break;}
                        case obj_bg_logic_alt:              {use_conversion = 230; break;}
                        case obj_bg_logic_night:            {use_conversion = 231; break;}
                        case obj_2D_tile_logic:             {use_conversion = 236; break;}
                        case obj_player_spawnpoint_lilac:   {use_conversion = 237; break;}
                        case obj_bg_logic_lagoon:           {use_conversion = 240; break;}
                        case obj_crystal_gem_flower:        {use_conversion = 241; break;}
                        case obj_health_petal_flower:       {use_conversion = 242; break;}
                        case obj_crystal_flower:            {use_conversion = 243; break;}
                        case obj_crystal_shield_water:      {use_conversion = 244; break;}
                        case obj_crystal_shield_earth:      {use_conversion = 245; break;}
                        case obj_crystal_shield_fire:       {use_conversion = 246; break;}
                        case obj_crystal_shield_metal:      {use_conversion = 247; break;}
                        case obj_crystal_invincibility:     {use_conversion = 248; break;}
                        case obj_crate:                     {use_conversion = 249; break;}
                        case obj_bomb:                      {use_conversion = 250; break;}
                        case obj_carols_gas_can:            {use_conversion = 251; break;}
                        case obj_spring_0:                  {use_conversion = 252; break;}
                        case obj_spring_1:                  {use_conversion = 253; break;}
                        case obj_spring_2:                  {use_conversion = 254; break;}
                        case obj_spring_3:                  {use_conversion = 255; break;}
                        case obj_spring_4:                  {use_conversion = 256; break;}
                        case obj_spring_5:                  {use_conversion = 257; break;}
                        case obj_spring_6:                  {use_conversion = 258; break;}
                        case obj_spring_7:                  {use_conversion = 259; break;}
                        case obj_spring_8:                  {use_conversion = 260; break;}
                        case obj_spring_9:                  {use_conversion = 261; break;}
                        case obj_spring_10:                 {use_conversion = 262; break;}
                        case obj_spring_11:                 {use_conversion = 263; break;}
                        case obj_spring_12:                 {use_conversion = 264; break;}
                        case obj_spring_13:                 {use_conversion = 265; break;}
                        case obj_spring_14:                 {use_conversion = 266; break;}
                        case obj_spring_15:                 {use_conversion = 267; break;}
                        case obj_rna_cannon:                {use_conversion = 268; break;}
                        case obj_bg_city_day:               {use_conversion = 269; break;}
                        case obj_spring_16:                 {use_conversion = 338; break;}
                        case obj_spring_17:                 {use_conversion = 339; break;}
                        case obj_spring_18:                 {use_conversion = 340; break;}
                        case obj_spring_19:                 {use_conversion = 341; break;}
                        case obj_axle_turret:               {use_conversion = 342; break;}
                        case obj_rocket_puncher:            {use_conversion = 343; break;}
                        case obj_skinny_loop:               {use_conversion = 364; break;}
                        case obj_road_loop:                 {use_conversion = 365; break;}
                        case obj_boost_pad:                 {use_conversion = 366; break;}
                        case obj_loop_changer_l:            {use_conversion = 367; break;}
                        case obj_loop_changer_r:            {use_conversion = 368; break;}
                        case obj_loop_layer_changer:        {use_conversion = 369; break;}
                        case obj_loop_layer_changer_l:      {use_conversion = 370; break;}
                        case obj_mega_crate:                {use_conversion = 371; break;}
                        case obj_mega_block:                {use_conversion = 372; break;}
                        case obj_disco_ball:                {use_conversion = 373; break;}
                        case obj_mega_bomb:                 {use_conversion = 374; break;}
                        case obj_boost_pad_90:              {use_conversion = 375; break;}
                        case obj_boost_pad_180:             {use_conversion = 376; break;}
                        case obj_boost_pad_270:             {use_conversion = 377; break;}
                        case obj_water_switch:              {use_conversion = 378; break;}
                        case obj_door_switch:               {use_conversion = 379; break;}
                        case obj_door_vertical:             {use_conversion = 380; break;}
                        case obj_bomb_switch:               {use_conversion = 381; break;}
                        case obj_door_horizontal:           {use_conversion = 382; break;}
                        case obj_metal_pup_child:           {use_conversion = 383; break;}
                        case obj_dna_cannon_child:          {use_conversion = 384; break;}
                        case obj_rna_cannon_child:          {use_conversion = 385; break;}
                        case obj_rocket_puncher_child:      {use_conversion = 386; break;}
                        case obj_fire_spitter_child:        {use_conversion = 387; break;}
                        case obj_ghetto_blaster_child:      {use_conversion = 388; break;}
                        case obj_bullfrag_child:            {use_conversion = 389; break;}
                        case obj_turretus_child:            {use_conversion = 390; break;}
                        case obj_mega_melon:                {use_conversion = 391; break;}
                        case obj_weather_clear:             {use_conversion = 422; break;}
                        case obj_weather_rain:              {use_conversion = 423; break;}
                        case obj_weather_storm:             {use_conversion = 424; break;}
                        case obj_rock_shield:               {use_conversion = 425; break;}
                        case obj_crosswalk_signal:          {use_conversion = 426; break;}
                        case obj_shield_rock:               {use_conversion = 427; break;}
                        case obj_mega_car:                  {use_conversion = 430; break;}
                        case obj_mega_dumpster:             {use_conversion = 431; break;}
                        case obj_mega_cube:                 {use_conversion = 432; break;}
                        case obj_bench:                     {use_conversion = 433; break;}
                        case obj_bench_city:                {use_conversion = 434; break;}
                        case obj_bench_zao:                 {use_conversion = 435; break;}
                        case obj_weather_tempest:           {use_conversion = 436; break;}
                        case obj_music_on:                  {use_conversion = 441; break;}
                        case obj_music_off:                 {use_conversion = 442; break;}
                        case obj_water_switch_2x:           {use_conversion = 443; break;}
                        case obj_water_switch_3x:           {use_conversion = 444; break;}
                        case obj_mega_milk_crate:           {use_conversion = 445; break;}
                        case obj_smart_pools:               {use_conversion = 446; break;}
                        case obj_waterfall:                 {use_conversion = 447; break;}
                        case obj_skyscraper:                {use_conversion = 450; break;}
                        case obj_skyscraper_1:              {use_conversion = 451; break;}
                        case obj_skyscraper_2:              {use_conversion = 452; break;}
                        case obj_bird:                      {use_conversion = 453; break;}
                        case obj_bird_ambiance:             {use_conversion = 454; break;}
                        case obj_smart_petal_pool:          {use_conversion = 457; break;}
                        case obj_speed_booster:             {use_conversion = 463; break;}
                        case obj_bench_stool:               {use_conversion = 464; break;}
                        case obj_bench_high_stool:          {use_conversion = 465; break;}
                        case obj_petalfall:                 {use_conversion = 466; break;}
                        case obj_mega_bouncy:               {use_conversion = 467; break;}
                        case obj_enemy_delete_wall:         {use_conversion = 468; break;}
                        case obj_enemy_charge_floor:        {use_conversion = 469; break;}
                        case obj_fireworks_tank:            {use_conversion = 470; break;}
                        case obj_fireworks_tank_stub:       {use_conversion = 470; break;}
                        case obj_boss_music:                {use_conversion = 471; break;}
                        case obj_checkpoint_marker:         {use_conversion = 472; break;}
                        case obj_blade_subordinate:         {use_conversion = 473; break;}
                        case obj_blade_stubordinate:        {use_conversion = 473; break;}
                        case obj_boss_boundary_top:         {use_conversion = 474; break;}
                        case obj_boss_boundary_bottom:      {use_conversion = 475; break;}
                        case obj_boss_boundary_left:        {use_conversion = 476; break;}
                        case obj_boss_boundary_right:       {use_conversion = 477; break;}
                        case obj_gold_gem_float:            {use_conversion = 478; break;}
                        case obj_mini_boss_music:           {use_conversion = 479; break;}
                        case obj_star_marine:               {use_conversion = 480; break;}
                        case obj_stub_marine:               {use_conversion = 480; break;}
                        case obj_bg_space:                  {use_conversion = 481; break;}
                        case obj_player_spawnpoint_spade:   {use_conversion = 482; break;}
                        case obj_bg_logic_mnt:              {use_conversion = 495; break;}
                        case obj_bg_city_sewers:            {use_conversion = 496; break;}
                        case obj_bg_logic_mnt_nite:         {use_conversion = 497; break;}
                        case obj_green_pot:                 {use_conversion = 601; break;}
                        case obj_yellow_pot:                {use_conversion = 602; break;}
                        case obj_mega_green_pot:            {use_conversion = 603; break;}
                        case obj_mega_yellow_pot:           {use_conversion = 604; break;}
                        case obj_rock_destructible:         {use_conversion = 605; break;}
                        case obj_bridge:                    {use_conversion = 607; break;}
                        case obj_destructible_floor:        {use_conversion = 608; break;}
                        case obj_bg_logic_mnt_nighttime:    {use_conversion = 625; break;}
                        case obj_water_cube:                {use_conversion = 696; break;}
                        case obj_wind_turbine:              {use_conversion = 697; break;}
                        case obj_wind_stopper:              {use_conversion = 698; break;}
                        case obj_soda_can:                  {use_conversion = 699; break;}
                        case obj_basket_ball:               {use_conversion = 705; break;}
                        case obj_bg_logic_lagoon_sunrise:   {use_conversion = 752; break;}
                        case obj_bg_space_night:            {use_conversion = 753; break;}
                        case obj_bg_logic_streamer:         {use_conversion = 754; break;}
                        case obj_wind_turbine_0:            {use_conversion = 772; break;}
                        case obj_wind_turbine_180:          {use_conversion = 773; break;}
                        case obj_wind_turbine_270:          {use_conversion = 774; break;}
                        case obj_bg_beihai_bay:             {use_conversion = 782; break;}
                        case obj_bg_beihai_bay_sunset:      {use_conversion = 783; break;}
                        case obj_mu_ramp_6_18:              {use_conversion = 786; break;}
                        case obj_mu_ramp_7_19:              {use_conversion = 787; break;}
                        case obj_bouncer:                   {use_conversion = 788; break;}
                        case obj_bouncer_stub:              {use_conversion = 788; break;}
                        case obj_spring_20:                 {use_conversion = 789; break;}
                        case obj_spring_21:                 {use_conversion = 790; break;}
                        case obj_spring_22:                 {use_conversion = 791; break;}
                        case obj_spring_23:                 {use_conversion = 792; break;}
                        case obj_crystal_gold_flower:       {use_conversion = 793; break;}
                        case obj_water_pool:                {use_conversion = 794; break;}
                        case obj_waterfall_small:           {use_conversion = 820; break;}
                        case obj_platform_midboss:          {use_conversion = 833; break;}
                        case obj_bg_changer_0:              {use_conversion = 840; break;}
                        case obj_bg_changer_1:              {use_conversion = 841; break;}
                        case obj_bg_changer_2:              {use_conversion = 842; break;}
                        case obj_bg_changer_3:              {use_conversion = 843; break;}
                        case obj_bg_changer_4:              {use_conversion = 844; break;}
                        case obj_bg_changer_5:              {use_conversion = 845; break;}
                        case obj_bg_changer_6:              {use_conversion = 846; break;}
                        case obj_bg_changer_7:              {use_conversion = 847; break;}
                        case obj_bg_changer_8:              {use_conversion = 848; break;}
                        case obj_bg_changer_9:              {use_conversion = 849; break;}
                        case obj_bg_changer_10:             {use_conversion = 850; break;}
                        case obj_bg_changer_11:             {use_conversion = 851; break;}
                        case obj_bg_changer_12:             {use_conversion = 852; break;}
                        case obj_bg_changer_13:             {use_conversion = 853; break;}
                        case obj_bg_changer_14:             {use_conversion = 854; break;}
                        case obj_bg_changer_15:             {use_conversion = 855; break;}
                        case obj_bg_changer_16:             {use_conversion = 856; break;}
                        case obj_player_spawnpoint_carrie:  {use_conversion = 857; break;}
                        case obj_water_platform_hor:        {use_conversion = 858; break;}
                        case obj_water_platform_ver:        {use_conversion = 859; break;}
                        case obj_crystal_green_flower:      {use_conversion = 860; break;}
                        case obj_potion_chest:              {use_conversion = 861; break;}
                        case obj_shop_milla:                {use_conversion = 862; break;}
                        case obj_mud_cube:                  {use_conversion = 863; break;}
                        case obj_mud_block:                 {use_conversion = 864; break;}
                        case obj_mud_water:                 {use_conversion = 865; break;}
                        case obj_portal_1a:                 {use_conversion = 866; break;}
                        case obj_portal_1b:                 {use_conversion = 867; break;}
                        case obj_portal_2a:                 {use_conversion = 868; break;}
                        case obj_portal_2b:                 {use_conversion = 869; break;}
                        case obj_player_spawnpoint_chiasa:  {use_conversion = 878; break;}
                        case obj_spring_24:                 {use_conversion = 879; break;}
                        case obj_spring_25:                 {use_conversion = 880; break;}
                        case obj_spring_26:                 {use_conversion = 881; break;}
                        case obj_spring_27:                 {use_conversion = 882; break;}
                        case obj_spring_28:                 {use_conversion = 883; break;}
                        case obj_spring_29:                 {use_conversion = 884; break;}
                        case obj_spring_30:                 {use_conversion = 885; break;}
                        case obj_spring_31:                 {use_conversion = 886; break;}
                        case obj_treasure_chest:            {use_conversion = 887; break;}
                        case obj_bg_train_station:          {use_conversion = 888; break;}
                        case obj_instant_water:             {use_conversion = 902; break;}
                        case obj_mega_rogue_cube:           {use_conversion = 903; break;}
                        case obj_city_ambiance:             {use_conversion = 904; break;}
                        case obj_bg_mnt_cave:               {use_conversion = 934; break;}
                        case obj_bg_city_sewers_day:        {use_conversion = 935; break;}
                        case obj_bg_changer_17:             {use_conversion = 936; break;}
                        case obj_bg_changer_18:             {use_conversion = 937; break;}
                        case obj_petal_shard_float:         {use_conversion = 941; break;}
                        case obj_spring_32:                 {use_conversion = 942; break;}
                        case obj_spring_33:                 {use_conversion = 943; break;}
                        case obj_mega_boss_music:           {use_conversion = 944; break;}
                        case obj_angle_gear_0:              {use_conversion = 946; break;}
                        case obj_angle_gear_90:             {use_conversion = 947; break;}
                        case obj_angle_gear_180:            {use_conversion = 948; break;}
                        case obj_angle_gear_270:            {use_conversion = 949; break;}
                        case obj_stop_music:                {use_conversion = 950; break;}
                        case obj_start_music:               {use_conversion = 951; break;}
                        case obj_creepy_ambiance:           {use_conversion = 952; break;}
                        case obj_creepy_caves:              {use_conversion = 953; break;}

                        case obj_npc_lilac:  {use_conversion_npc = 1; use_conversion = -1; break;}
                        case obj_npc_carol:  {use_conversion_npc = 2; use_conversion = -1; break;}
                        case obj_npc_milla:  {use_conversion_npc = 3; use_conversion = -1; break;}
                        case obj_npc_stella: {use_conversion_npc = 4; use_conversion = -1; break;}
                        case obj_npc_shy:    {use_conversion_npc = 5; use_conversion = -1; break;}
                        case obj_npc_tiwi:   {use_conversion_npc = 6; use_conversion = -1; break;}
                        case obj_npc_sign:   {use_conversion_npc = 7; use_conversion = -1; break;}
                        case obj_npc_stumpy: {use_conversion_npc = 8; use_conversion = -1; break;}
                        case obj_npc_cook:   {use_conversion_npc = 9; use_conversion = -1; break;}
                        case obj_npc_wacky:  {use_conversion_npc = 10; use_conversion = -1; break;}
                        case obj_npc_harige: {use_conversion_npc = 11; use_conversion = -1; break;}
                        case obj_npc_bird_guard: {use_conversion_npc = 12; use_conversion = -1; break;}
                        case obj_npc_jamie: {use_conversion_npc = 13; use_conversion = -1; break;}
                        case obj_npc_cassandre: {use_conversion_npc = 14; use_conversion = -1; break;}
                        case obj_npc_spade: {use_conversion_npc = 15; use_conversion = -1; break;}
                        case obj_npc_azuli: {use_conversion_npc = 16; use_conversion = -1; break;}
                        case obj_npc_astum: {use_conversion_npc = 17; use_conversion = -1; break;}
                        case obj_npc_beibo: {use_conversion_npc = 18; use_conversion = -1; break;}
                        case obj_npc_trip:  {use_conversion_npc = 19; use_conversion = -1; break;}
                        case obj_npc_axl:   {use_conversion_npc = 20; use_conversion = -1; break;}
                        case obj_npc_candy: {use_conversion_npc = 21; use_conversion = -1; break;}
                        case obj_npc_umi:   {use_conversion_npc = 22; use_conversion = -1; break;}
                        case obj_npc_allister: {use_conversion_npc = 23; use_conversion = -1; break;}
                        case obj_npc_abby:   {use_conversion_npc = 24; use_conversion = -1; break;}
                        case obj_npc_alexis: {use_conversion_npc = 25; use_conversion = -1; break;}
                        case obj_npc_kyomi:  {use_conversion_npc = 26; use_conversion = -1; break;}
                        case obj_npc_xavier: {use_conversion_npc = 27; use_conversion = -1; break;}
                        case obj_npc_carrie: {use_conversion_npc = 28; use_conversion = -1; break;}
                        case obj_npc_ryusei: {use_conversion_npc = 29; use_conversion = -1; break;}
                        case obj_npc_savvy:  {use_conversion_npc = 30; use_conversion = -1; break;}
                        case obj_npc_rhyme:  {use_conversion_npc = 31; use_conversion = -1; break;}
                        case obj_npc_clyde:  {use_conversion_npc = 32; use_conversion = -1; break;}
                        case obj_npc_bucky:  {use_conversion_npc = 33; use_conversion = -1; break;}
                        case obj_npc_ness:   {use_conversion_npc = 34; use_conversion = -1; break;}
                        case obj_npc_hyper:  {use_conversion_npc = 35; use_conversion = -1; break;}
                        case obj_npc_iris:   {use_conversion_npc = 36; use_conversion = -1; break;}
                        case obj_npc_maika:  {use_conversion_npc = 37; use_conversion = -1; break;}
                        case obj_npc_leela:  {use_conversion_npc = 38; use_conversion = -1; break;}
                        case obj_npc_tsuki:  {use_conversion_npc = 39; use_conversion = -1; break;}
                        case obj_npc_libbie_dark:  {use_conversion_npc = 40; use_conversion = -1; break;}
                        case obj_npc_pumppy:       {use_conversion_npc = 41; use_conversion = -1; break;}
                        case obj_npc_libbie:       {use_conversion_npc = 42; use_conversion = -1; break;}
                        case obj_npc_serena:       {use_conversion_npc = 43; use_conversion = -1; break;}
                        case obj_npc_chiasa:       {use_conversion_npc = 44; use_conversion = -1; break;}
                        case obj_npc_dean:         {use_conversion_npc = 45; use_conversion = -1; break;}
                        case obj_npc_shan:         {use_conversion_npc = 46; use_conversion = -1; break;}
                        case obj_npc_mei:          {use_conversion_npc = 47; use_conversion = -1; break;}
                        case obj_npc_vivid:        {use_conversion_npc = 48; use_conversion = -1; break;}
                        case obj_npc_garrett:      {use_conversion_npc = 49; use_conversion = -1; break;}
                        case obj_npc_maria:        {use_conversion_npc = 50; use_conversion = -1; break;}
                        case obj_npc_elric:        {use_conversion_npc = 51; use_conversion = -1; break;}
                        case obj_npc_beldr:        {use_conversion_npc = 52; use_conversion = -1; break;}
                        case obj_npc_leo:          {use_conversion_npc = 53; use_conversion = -1; break;}
                        case obj_npc_jett:         {use_conversion_npc = 54; use_conversion = -1; break;}
                        case obj_npc_marshmallow:  {use_conversion_npc = 55; use_conversion = -1; break;}
                        case obj_npc_vela:         {use_conversion_npc = 56; use_conversion = -1; break;}
                        case obj_npc_leone:        {use_conversion_npc = 57; use_conversion = -1; break;}
                        case obj_npc_pat:          {use_conversion_npc = 58; use_conversion = -1; break;}
                        case obj_npc_uny:          {use_conversion_npc = 59; use_conversion = -1; break;}
                        default:                   {use_conversion = -1; use_conversion_npc = 0; break;}
                    }
                //Write Collected Object Data
                if use_conversion != -1
                    {
                        switch(obj.item)
                            {
                                case spr_target:  {use_conversion_item = 1; break;}
                                case spr_keycard: {use_conversion_item = 2; break;}
                                case spr_mod_chip_alt_weapon:   {use_conversion_item = 3; break;}
                                case spr_mod_chip_health:       {use_conversion_item = 4; break;}
                                case spr_mod_chip_speed:        {use_conversion_item = 5; break;}
                                case spr_mod_chip_extra_large:  {use_conversion_item = 6; break;}
                                case spr_mod_chip_bomb:         {use_conversion_item = 7; break;}
                                case spr_mod_chip_spring:       {use_conversion_item = 8; break;}
                                case spr_mod_chip_detonate:     {use_conversion_item = 9; break;}
                                default: {use_conversion_item = 0; break;}
                            }
                        ini_write_string(map_offset+"lvl_objects_"+string(use_write_obj_position),"obj_x",string(obj.x))
                        ini_write_string(map_offset+"lvl_objects_"+string(use_write_obj_position),"obj_y",string(obj.y))
                        ini_write_string(map_offset+"lvl_objects_"+string(use_write_obj_position),"obj_asset",string(use_conversion))
                        ini_write_string(map_offset+"lvl_objects_"+string(use_write_obj_position),"obj_item",string(use_conversion_item))
                    }
                //Skip Over Writing Object Data For Objects Not In Our Asset Definition Table
                else ini_write_string(map_offset+"lvl_objects_"+string(use_write_obj_position),"obj_ignore",string(-1));
                if use_conversion_npc &gt; 0
                    {
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_x",string(obj.x))
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_y",string(obj.y))
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_object",string(use_conversion_npc))
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_emotion",string(obj.npc_emotion_index))
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_direction",string(obj.npc_direction))
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_string_0",obj.npc_dialog_string_p1)
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_string_1",obj.npc_dialog_string_p2)
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_emotion_0",obj.npc_dialog_emotion_p1)
                        ini_write_string(map_offset+"lvl_npcs_"+string(use_conversion_counter),"npc_emotion_1",obj.npc_dialog_emotion_p2)
                        use_conversion_counter += 1
                    }
                //Iterate Write Position
                use_write_obj_position += 1
                //Exit Loop Once We Have Finished Writing
                if use_write_obj_position = instance_count break;
            }
        ini_write_string(map_offset+"lvl_hd","lvl_obj_count",string(use_write_obj_position))
        ini_write_string(map_offset+"lvl_hd","lvl_npc_count",string(use_conversion_counter))
        //Write Player Health
        ini_write_string("lvl_health","health",string(use_health_petal_mod))
        //Close Level Map
        ini_close_ns()
        //Empty Tile Array
        use_write_array = 0
        use_write_length = 0
        use_write_position = 0
        use_write_obj_position = 0
        use_write_delay = 0
        parent.use_write_delay = 0
        scr_set_message("Saving complete!")
        //Enter Next Stage If Next/Previous Buttons Were Clicked
        if parent.use_maps_transition &gt; 0
            {
                if parent.use_maps_transition = 1
                    parent.use_maps_current_map -= 1;
                if parent.use_maps_transition = 2
                    parent.use_maps_current_map += 1;
                parent.use_maps_transition = 0
                //Set A Stage Name, Architect Name, And Description Based On Previously Obtained Information
                use_write_keyboard_string_stage_name = use_write_reserve_string_stage_name
                use_write_keyboard_string_architect = use_write_reserve_string_architect
                use_write_keyboard_string_description = use_write_reserve_string_description
                //Clear previous map data by restarting the room
                scr_set_message("Now loading...")
                parent.use_maps_select = use_write_keyboard_string_stage_name + ".map"
                use_loading_screen = 1
            }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Graphical Interface

//=============================================================//
//------------------Shang Mu Architect Editor------------------//
//=============================================================//

//Disable tile interactions behind the tile properties popup if we are hovering over it
if  use_tile_properties_enable &gt; 0
and use_cursor_x &gt;= use_tile_properties_cursor_boundary_x1+use_zoom_tile_menu_scaling_horizontal_0 and use_cursor_x &lt;= use_tile_properties_cursor_boundary_x2-use_zoom_tile_menu_scaling_horizontal_1
and use_cursor_y &gt;= use_tile_properties_cursor_boundary_y1 and use_cursor_y &lt;= use_tile_properties_cursor_boundary_y2+use_zoom_tile_menu_scaling_vertical_4
        use_tile_properties_cursor_boundary_disable = 1;
else
        use_tile_properties_cursor_boundary_disable = 0;

//Prevent placement of tiles/objects when the cursor is hovering over the sidebar
side_bar_allow = 0
if device_mouse_x_to_gui(0) &gt;= user_editor_hud_offset-6
    {
        user_place_allow = 0;
        side_bar_allow = 1;
    }
//Or when the cursor is hovering over the next/previous map buttons
use_next_previous_confirm = 0
if (mouse_x &gt; use_line_left[0] and mouse_x &lt; use_line_left[0]+64 and parent.use_maps_current_map &gt; 0)
or (mouse_x &gt; use_line_right[2]-64 and mouse_x &lt; use_line_right[2])
    use_next_previous_confirm = 1;

if parent.pause = 1 and depth = -7
    depth = -5;
if parent.pause = 0 and depth = -5
    depth = -7;

if use_auto_save = 1
    use_auto_save_timer += 1;

if (keyboard_check_pressed(vk_f5) or use_auto_save_timer = 18000)
    {
        if tile_get_count() &gt; user_tile_limit_warning_value
            {
                scr_set_message("Tile limit reached!  Remove tiles to optimize.")
            }
        else
            {
                if use_write_reserve_string_stage_name = ""
                    {
                        use_tile_menu = 4
                        keyboard_string=""
                        //Create The Maps Directory If It Doesn't Already Exist
                        if !directory_exists_ns("Maps") directory_create_ns("Maps");
                    }
                else
                    {
                        //Trigger Write Process If A Stage Name Was Provided
                        use_tile_menu = 0
                        use_tile_menu_cool_down = 8
                        //Trigger Write Process
                        use_write_delay = 1
                        parent.use_write_delay = 1
                        use_keyboard_active = 0
                        scr_set_message("Saving... please wait!")
                        use_write_keyboard_string_active_string = -1
                        //Set A Stage Name, Architect Name, And Description Based On Previously Obtained Information
                        use_write_keyboard_string_stage_name = use_write_reserve_string_stage_name
                        use_write_keyboard_string_architect = use_write_reserve_string_architect
                        use_write_keyboard_string_description = use_write_reserve_string_description
                    }
                //Play menu sound
                audio_play_sound(pause_select,50,false)
                //Trigger Highlighter
                scr_set_highlighter(324,98,413,114)
            }
    }
if (use_auto_save_timer &gt; 18000) use_auto_save_timer = 0;

//Check for regions of the screen to interact with if we have pressed the mouse button
if (mouse_check_button_pressed(joy_mouse_button_left) or use_put_here = 1)
    {
        //Change key prompts to button prompts
        if !mouse_check_button_pressed(joy_mouse_button_left) and !keyboard_check(key_put_here) use_dispaly_key_prompt = 0;
        //Change button prompts to key prompts
        if mouse_check_button_pressed(joy_mouse_button_left) or keyboard_check(key_put_here) use_dispaly_key_prompt = 1;

        if (use_next_previous_confirm = 1 and use_tile_menu = 0 and use_tile_menu_cool_down = 0
        and side_bar_allow = 0)
            {
                if use_write_reserve_string_stage_name = ""
                    {
                        scr_set_message("Stage must be saved first!")
                    }
                else
                    {
                        if tile_get_count() &gt; 0
                            {
                                //Pass Along The Submap Loading Process To the Saving Algorithm Instead
                                if (mouse_x &lt; use_line_left[0]+64 and parent.use_maps_current_map &gt; 0)
                                    parent.use_maps_transition = 1;
                                if (mouse_x &gt; use_line_right[2]-64)
                                    parent.use_maps_transition = 2;
                                //Trigger Write Process If A Stage Name Was Provided
                                use_tile_menu = 0
                                use_tile_menu_cool_down = 16
                                parent.use_maps_overwrite_protection = 1
                                use_tile_menu_cool_down = 256
                                //Trigger Write Process
                                use_write_delay = 1
                                parent.use_write_delay = 1
                                use_keyboard_active = 0
                                scr_set_message("Saving... please wait!")
                                //Set A Stage Name, Architect Name, And Description Based On Previously Obtained Information
                                use_write_keyboard_string_stage_name = use_write_reserve_string_stage_name
                                use_write_keyboard_string_architect = use_write_reserve_string_architect
                                use_write_keyboard_string_description = use_write_reserve_string_description
                                parent.use_maps_load = 1
                                //Disable Carol's Bike Sounds If They Were Still Playing
                                audio_stop_sound(carol_bike_idle)
                                audio_stop_sound(carol_bike_moving)
                                audio_stop_sound(carol_bike_skidding)
                            }
                        else
                            scr_set_message("Stage must have tiles to be saved!");
                    }
            }

        //Interact with the tile properties popup menu
        if  use_tile_properties_enable &gt; 0
        and use_cursor_x &gt;= use_tile_properties_cursor_boundary_x1+use_zoom_tile_menu_scaling_horizontal_0 and use_cursor_x &lt;= use_tile_properties_cursor_boundary_x2-use_zoom_tile_menu_scaling_horizontal_1
        and use_cursor_y &gt;= use_tile_properties_cursor_boundary_y1 and use_cursor_y &lt;= use_tile_properties_cursor_boundary_y2
            {
                //Advanced tile properties popup
                if user_layer_selected != surface_slopes and user_layer_selected != surface_flats and use_tile_properties_tile_id != -1
                    {
                        //Flip X
                        if use_cursor_y &gt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_0 and use_cursor_y &lt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_1
                            {
                                //Mirror Tile Backwards
                                if use_tile_properties_xscale &gt; 0
                                    {
                                        tile_set_scale(use_tile_properties_tile_id,-1,floor(use_tile_properties_yscale))
                                        tile_set_position(use_tile_properties_tile_id,floor(tile_get_x(use_tile_properties_tile_id)+tile_get_width(use_tile_properties_tile_id)),floor(tile_get_y(use_tile_properties_tile_id)))
                                        use_tile_menu_cool_down = 8
                                    }
                                //Mirror Tile Forwards
                                if use_tile_properties_xscale &lt; 0
                                    {
                                        tile_set_scale(use_tile_properties_tile_id,1,use_tile_properties_yscale)
                                        tile_set_position(use_tile_properties_tile_id,floor(tile_get_x(use_tile_properties_tile_id)-tile_get_width(use_tile_properties_tile_id)),floor(tile_get_y(use_tile_properties_tile_id)))
                                        use_tile_menu_cool_down = 8
                                    }
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter_tile_properties(use_tile_properties_cursor_boundary_x1,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_0,
                                use_tile_properties_cursor_boundary_x2,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_1)
                                use_tile_properties_enable = 0
                                use_tile_properties_timer = 0
                            }
                        //Flip Y
                        if use_cursor_y &gt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_y_0 and use_cursor_y &lt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_y_1
                            {
                                //Mirror Tile Backwards
                                if use_tile_properties_yscale &gt; 0
                                    {
                                        tile_set_scale(use_tile_properties_tile_id,use_tile_properties_xscale,-1)
                                        tile_set_position(use_tile_properties_tile_id,floor(tile_get_x(use_tile_properties_tile_id)),floor(tile_get_y(use_tile_properties_tile_id)+tile_get_height(use_tile_properties_tile_id)))
                                        use_tile_menu_cool_down = 8
                                    }
                                //Mirror Tile Forwards
                                if use_tile_properties_yscale &lt; 0
                                    {
                                        tile_set_scale(use_tile_properties_tile_id,use_tile_properties_xscale,floor(1))
                                        tile_set_position(use_tile_properties_tile_id,floor(tile_get_x(use_tile_properties_tile_id)),floor(tile_get_y(use_tile_properties_tile_id)-tile_get_height(use_tile_properties_tile_id)))
                                        use_tile_menu_cool_down = 8
                                    }
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter_tile_properties(use_tile_properties_cursor_boundary_x1,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_y_0,
                                use_tile_properties_cursor_boundary_x2,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_y_1)
                                use_tile_properties_enable = 0
                                use_tile_properties_timer = 0
                            }
                        //Alpha
                        if use_cursor_y &gt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_alpha_0 and use_cursor_y &lt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_alpha_1
                            {
                                use_tile_properties_tile_alpha += 0.1
                                if use_tile_properties_tile_alpha &gt; 1 use_tile_properties_tile_alpha = 0.1;
                                tile_set_alpha(use_tile_properties_tile_id,use_tile_properties_tile_alpha)
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter_tile_properties(use_tile_properties_cursor_boundary_x1,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_alpha_0,
                                use_tile_properties_cursor_boundary_x2,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_alpha_1)
                            }
                    }
                //Simplified tile properties popup for slope tiles
                else
                    {
                        //Alpha
                        if use_cursor_y &gt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_0 and use_cursor_y &lt;= use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_1
                        and use_tile_properties_tile_id != -1
                            {
                                use_tile_properties_tile_alpha += 0.1
                                if use_tile_properties_tile_alpha &gt; 1 use_tile_properties_tile_alpha = 0.1;
                                tile_set_alpha(use_tile_properties_tile_id,use_tile_properties_tile_alpha)
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter_tile_properties(use_tile_properties_cursor_boundary_x1,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_0,
                                use_tile_properties_cursor_boundary_x2,use_tile_properties_cursor_boundary_y1+use_zoom_tile_menu_scaling_flip_x_1)
                            } 
                    }
            }
        //If we are currently not using the tile menu, are not currently hovering over the sidebar, and aren't in play mode, place a tile
        if use_tile_menu = 0 and (side_bar_allow = 0) and user_cursor_mode = 0
        and use_tile_properties_cursor_boundary_disable = 0 and use_next_previous_confirm = 0
        //Disable tile placement while dragging the tile repeat box
        and use_tile_menu_cool_down != 16
            {
                if user_place_mode = 0 and use_file_menu != 2
                    {
                        var user_tile_allow = 1;
                        if tile_get_count() &gt; user_tile_limit_warning_value
                            {
                                user_tile_allow = 0
                                scr_set_message("Tile limit reached!  Remove tiles to optimize.")
                            }
                        //Place a tile
                        if user_cursor_display_mode = 0 and user_tile_allow = 1 and user_place_allow = 0
                            {
                                //Sentinel check on layer value for current tile; check to see if the tile shouldn't be
                                //placed on a specific layer
                                scr_set_layer_surface();
                                //Now, let's also check if we are placing the current tile over an existing slope tile, if we are on the slope layer;
                                //we can't have any overlapping slope tiles, it creates obvious logical issues for the player's slope sensors
                                var user_tile_valid = 1;
                                if user_layer_selected = surface_slopes
                                    {
                                        var user_tile_scan_x = user_grid_snap_x+user_grid_offset_x;
                                        var user_tile_scan_y = user_grid_snap_y+user_grid_offset_y;
                                        var user_tile_scan_distance = background_get_width(user_tile_selected)/4;

                                        while(user_tile_scan_y &lt; user_grid_snap_y+user_grid_offset_y+background_get_height(user_tile_selected))
                                            {
                                                user_tile_scan_x += user_tile_scan_distance
                                                if tile_layer_find(surface_slopes,user_tile_scan_x,user_tile_scan_y) != -1
                                                    {
                                                        user_tile_valid = 0
                                                        scr_set_message("Slope Tile Is Overlapping With Another!")
                                                        break
                                                    }
                                                if user_tile_scan_x &gt;= user_grid_snap_x+user_grid_offset_x+background_get_width(user_tile_selected)-user_tile_scan_distance
                                                    {
                                                        user_tile_scan_x = user_grid_snap_x+user_grid_offset_x
                                                        user_tile_scan_y += 4
                                                    }
                                            }
                                    }
                                if user_tile_valid = 1
                                    {
                                        //Place a tile
                                        var added_tile = -1;
                                        added_tile = tile_add(user_tile_selected,0,0,background_get_width(user_tile_selected),background_get_height(user_tile_selected),user_grid_snap_x+user_grid_offset_x,user_grid_snap_y+user_grid_offset_y,user_layer_selected);
                                        //Trigger tile dragging
                                        use_corner_box = 5
                                        use_corner_box_id = added_tile;
                                        use_corner_box_bottom_left_x = tile_get_x(added_tile)
                                        use_corner_box_bottom_left_y = tile_get_y(added_tile)+tile_get_height(added_tile)
                                        use_corner_box_top_right_x = user_grid_snap_x
                                        use_corner_box_top_right_y = user_grid_snap_y
                                        //Place 2D tile logic controller, if it has double-sided collisions
                                        var yes = 0;
                                        yes = scr_set_check_slope_tiles(user_tile_selected);
                                        if yes = 1 and user_layer_iteration &lt; 5
                                            {
                                                if user_tile_selected = mu_ramp_6 or user_tile_selected = mu_ramp_18
                                                or user_tile_selected = mu_ramp_7 or user_tile_selected = mu_ramp_19
                                                    {
                                                        if (user_tile_selected = mu_ramp_6 or user_tile_selected = mu_ramp_18)
                                                            instance_create(user_grid_snap_x,user_grid_snap_y,obj_mu_ramp_6_18);
                                                        if (user_tile_selected = mu_ramp_7 or user_tile_selected = mu_ramp_19)
                                                            instance_create(user_grid_snap_x,user_grid_snap_y,obj_mu_ramp_7_19);
                                                    }
                                                else
                                                    instance_create(user_grid_snap_x,user_grid_snap_y,obj_2D_tile_logic);
                                            }
                                        use_tile_menu_cool_down = 8
                                        //Play Sound Effect
                                        audio_play_sound(snd_hammer,50,false)
                                        //Play Particle Effect
                                        use_confirm = 1
                                    }
                            }
                        //Place an object
                        if user_cursor_display_mode = 1 and user_place_allow = 0
                            {
                                scr_create_object();
                                use_tile_menu_cool_down = 8
                                audio_play_sound(snd_hammer,50,false)
                                //Play Particle Effect
                                use_confirm = 1
                            }
                    }
                if user_place_mode = 2 and use_item_check_verified = 1
                and user_cursor_display_mode = 1 and user_place_allow = 0
                    {
                        scr_create_object();
                        use_tile_menu_cool_down = 8
                        audio_play_sound(snd_hammer,50,false)
                        //Play Particle Effect
                        use_confirm = 1
                    }
            }

        //Check the tile menu's inventory otherwise
        if use_tile_menu = 1 and use_tile_menu_cool_down = 0
            {
                //Check Tabs Item
                if (device_mouse_x_to_gui(0) &gt;= 8 and device_mouse_x_to_gui(0) &lt;= 49
                and device_mouse_y_to_gui(0) &gt;= 165 and device_mouse_y_to_gui(0) &lt;= 206)
                and use_tile_menu_subpage = 0
                    {
                        //Click Left Button
                        if (device_mouse_x_to_gui(0) &gt;= 8 and device_mouse_x_to_gui(0) &lt;= 17
                        and device_mouse_y_to_gui(0) &gt;= 165 and device_mouse_y_to_gui(0) &lt;= 206)
                            {
                                use_tileset_preview_set_increment -= 1
                                if use_tileset_preview_set_increment &lt; 0 use_tileset_preview_set_increment = 5;
                                //Trigger Highlighter
                                scr_set_highlighter(8,165,17,206)
                            }
                        //Click Right Button
                        if (device_mouse_x_to_gui(0) &gt;= 40 and device_mouse_x_to_gui(0) &lt;= 49
                        and device_mouse_y_to_gui(0) &gt;= 165 and device_mouse_y_to_gui(0) &lt;= 206)
                            {
                                use_tileset_preview_set_increment += 1
                                if use_tileset_preview_set_increment &gt; 5 use_tileset_preview_set_increment = 0;
                                //Trigger Highlighter
                                scr_set_highlighter(40,165,49,206)
                            }
                        switch(use_tileset_preview_set_increment)
                            {
                                case 0: {use_tileset_preview_set = ui_tileset_temple; scr_set_temple_definition_table(); break;}
                                case 1: {use_tileset_preview_set = ui_tileset_city; scr_set_city_definition_table(); break;}
                                case 2: {use_tileset_preview_set = ui_tileset_city_2; scr_set_city_extended_definition_table(); break;}
                                case 3: {use_tileset_preview_set = ui_tileset_ravine; scr_set_mountain_definition_table(); break;}
                                case 4: {use_tileset_preview_set = ui_tileset_lagoon; scr_set_lagoon_definition_table(); break;}
                                case 5: {use_tileset_preview_set = ui_tileset_platform; scr_set_platforms_definition_table(); break;}
                            }
                        scr_change_page()
                        scr_change_aspect_ratio_preview(user_tile_selected)
                        scr_get_tile_offsets()
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                    }
                //Check Row 1
                if device_mouse_y_to_gui(0) &gt;= 23 and device_mouse_y_to_gui(0) &lt;= 56
                    {
                        //Check Menu Item 1
                        if device_mouse_x_to_gui(0) &gt;= 31 and device_mouse_x_to_gui(0) &lt;= 64
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[0] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[0] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[0]; user_layer_selected = use_layer_menu_item[0]; user_layer_iteration = use_layer_selected_item[0]; user_grid_offset_x = use_layer_offset_x_item[0]; user_grid_offset_y = use_layer_offset_y_item[0]; use_item_description = use_tile_menu_item_description[0]; use_item_aspect_ratio = display_tile_menu_ratio[0]; use_item_offset_x = offset_tile_menu_icons_x[0]; use_item_offset_y = offset_tile_menu_icons_y[0];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_gem,"Gem Crystal","Pickup that grants additional stamina!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_cube_mega_item,"Mega Cube","Large bouncy cube! Can be pushed, but not broken!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 {scr_set_object(spr_spring_0,"Blue Spring","Bounces the player upwards!"); use_item_offset_y = 8;}
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 {scr_set_object(spr_spring_20,"Glass Spring","The harder you land on these springs, the faster you bounce! Warning: Very fragile! This spring shatters upon impact!"); use_item_offset_y = 8;}
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_player_spawnpoint_generic,"Spawnpoint - Generic","This allows any character to play a stage!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_smart_pool,"Pools","Can be stacked or placed in rows, or both, to create larger pools!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_smart_pool_water,"Water Pools","Can be stacked or placed in rows, or both, to create larger pools!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_camera_zoom_reset,"Camera Zoom - Default (1x)","Reset camera zoom level to default!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_loop_exit,"Easy Loops - Wooden Exit Loop","Spawns a large wooden loop-de-loop, complete with layer switchers!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_angle_gear,"Angle Gear (Angle 0)","These digital gears can be placed over certain items to rotate them! This allows certain items to be placed on walls and ceilings, isn't that neat? (Note: The editor must be set to Manual Mode, instead of Auto)");

                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_mu_ball_spike,"Spike Ball","Deals damage to players if they pass by.");
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 1 scr_set_object(spr_fireworks_tank_thumbnail,"Fireworks Tank","Fireworks Tank, ready to fire! (Sprites by Alestance.) Zao's finest tanks have been graceously donated for training at the academy! The Fireworks Tank may be slow, but it is armored to the tires and should be approached with care.");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_lilac_cs_talking_neutral,"Lilac","Lilac the Dragon Girl, at your service! She is headstrong, courteous, and well-intentioned in everything she does. Her unshakable determination gives her the strength to see any mission through.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_candy_idle,"Candy","The one and only Candy! Candy may be easy-going, but she goes to bat for her friends, and takes great joy in the finer things in life. If anyone has your back, it's her! (She's also a massive nerd.)")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_pumppy_idle,"Pumppy","It's your new best friend, Pumppy the Pumpkin! Milla and Carrie both have fun drawing different faces on Pumppy. What will you imagine Pumppy says next?")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(31,23,64,56)
                            }
                        //Check Menu Item 2
                        if device_mouse_x_to_gui(0) &gt;= 67 and device_mouse_x_to_gui(0) &lt;= 100
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[1] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[1] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[1]; user_layer_selected = use_layer_menu_item[1]; user_layer_iteration = use_layer_selected_item[1]; user_grid_offset_x = use_layer_offset_x_item[1]; user_grid_offset_y = use_layer_offset_y_item[1];  use_item_description = use_tile_menu_item_description[1]; use_item_aspect_ratio = display_tile_menu_ratio[1]; use_item_offset_x = offset_tile_menu_icons_x[1]; use_item_offset_y = offset_tile_menu_icons_y[1];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_petal_flower,"Petal Flower","Grants 2HP when collected!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_mega_melon,"Mega Melon","Spawns several petal flowers when broken! Very fragile!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_1,"Blue Spring","Bounces the player when touched!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_21,"Glass Spring","The harder you land on these springs, the faster you bounce! Warning: Very fragile! This spring shatters upon impact!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_angle_gear_90,"Angle Gear (Angle 90)","These digital gears can be placed over certain items to rotate them! This allows certain items to be placed on walls and ceilings, isn't that neat? (Note: The editor must be set to Manual Mode, instead of Auto");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0
                                    {
                                        user_cursor_display_mode = 1;
                                        //Lilac Spawnpoint
                                        if (device_mouse_x_to_gui(0) &gt;= 67 and device_mouse_x_to_gui(0) &lt;= 83
                                        and device_mouse_y_to_gui(0) &gt;= 24 and device_mouse_y_to_gui(0) &lt;= 39)
                                            scr_set_object(spr_player_spawnpoint,"Lilac Spawnpoint","Sets your stage as exclusive to Lilac!");
                                        //Carol Spawnpoint
                                        if (device_mouse_x_to_gui(0) &gt;= 84 and device_mouse_x_to_gui(0) &lt;= 100
                                        and device_mouse_y_to_gui(0) &gt;= 24 and device_mouse_y_to_gui(0) &lt;= 39)
                                            scr_set_object(spr_player_spawnpoint_carol,"Carol Spawnpoint","Sets your stage as exclusive to Carol!");
                                        //Milla Spawnpoint
                                        if (device_mouse_x_to_gui(0) &gt;= 67 and device_mouse_x_to_gui(0) &lt;= 83
                                        and device_mouse_y_to_gui(0) &gt;= 39 and device_mouse_y_to_gui(0) &lt;= 56)
                                            scr_set_object(spr_player_spawnpoint_milla,"Milla Spawnpoint","Sets your stage as exclusive to Milla!");
                                        //Carol's Bike Spawnpoint
                                        if (device_mouse_x_to_gui(0) &gt;= 84 and device_mouse_x_to_gui(0) &lt;= 100
                                        and device_mouse_y_to_gui(0) &gt;= 39 and device_mouse_y_to_gui(0) &lt;= 56)
                                            scr_set_object(spr_player_spawnpoint_spade,"Spade Spawnpoint","Sets your stage as exclusive to Spade!");
                                    }
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_waterfall_node,"Waterfall","Draws a large waterfall that scales with the water level");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_waterfall_small,"Small Waterfall","Can be stacked or placed in rows, or both, to create smaller waterfalls!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_camera_zoom_out_2x,"Camera Zoom Out (2x)","Zooms out the camera by 50% when passed by!");
                               //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_music_on,"Enable Music","Turns music back on when passed by, if it was turned off.");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_mu_rotating_spikes,"Spike Wall","Rotating hazard that damages players who get too close.");
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 1 scr_set_object(spr_blade_subordinate,"Blade Subordinate","Blade Subordinate, hands at the ready! (Shading by Treylina.) He is a bigger brother unit of the Blade Orbiters. The Blade Subordinate cycles through four weapons with each blow, and strikes faster when attacked up close.");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_carol_cs_talking_neutral,"Carol","Carol the Wildcat, over here! She is pragmatic and prone to napping, but this spunky wildcat will never let you down! Carol likes a good scrap as much as movie night with her best friends. She is a driven force to be reckoned with.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_umi_idle,"Umi","Watch out, it's Umina Hazuna! (She prefers Umi.) Umi is a troubled, but humorous fox girl who lives for a good joke. She takes on life moment to moment, and won't let anything slow down her shenanigans!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_libbie_idle,"Libbie Oryx","Libbie Oryx, at your service! Libbie works tirelessly as Mayor Zao's personal office assistant, and often goes beyond her job description for his sake. How does Libbie spend her time off from her duties? It's up to you!")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(67,23,100,56)
                            }
                        //Check Menu Item 3
                        if device_mouse_x_to_gui(0) &gt;= 103 and device_mouse_x_to_gui(0) &lt;= 136
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[2] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[2] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[2]; user_layer_selected = use_layer_menu_item[2]; user_layer_iteration = use_layer_selected_item[2]; user_grid_offset_x = use_layer_offset_x_item[2]; user_grid_offset_y = use_layer_offset_y_item[2];  use_item_description = use_tile_menu_item_description[2]; use_item_aspect_ratio = display_tile_menu_ratio[2]; use_item_offset_x = offset_tile_menu_icons_x[2]; use_item_offset_y = offset_tile_menu_icons_y[2];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_crystal_gem_flower,"Gem Flower","Sprouts with several gems when attacked!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_mega_dumpster,"Mega Dumpster","Indestructible dumpster! Enemies who fall into this disappear!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_2,"Blue Spring","Bounces the player!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_22,"Glass Spring","The harder you land on these springs, the faster you bounce! Warning: Very fragile! This spring shatters upon impact!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_angle_gear_180,"Angle Gear (Angle 180)","These digital gears can be placed over certain items to rotate them! This allows certain items to be placed on walls and ceilings, isn't that neat? (Note: The editor must be set to Manual Mode, instead of Auto)");

                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0
                                    {
                                        //Gas Can
                                        if (device_mouse_x_to_gui(0) &gt;= 104 and device_mouse_x_to_gui(0) &lt;= 118
                                        and device_mouse_y_to_gui(0) &gt;= 24 and device_mouse_y_to_gui(0) &lt;= 39)
                                            scr_set_object(spr_gascan_0_copy,"Gas Can","Grants Carol her bike if touched; also an explosive pickup for Milla!");
                                        //Carol's Bike Spawnpoint
                                        if (device_mouse_x_to_gui(0) &gt;= 119 and device_mouse_x_to_gui(0) &lt;= 136
                                        and device_mouse_y_to_gui(0) &gt;= 24 and device_mouse_y_to_gui(0) &lt;= 39)
                                            scr_set_object(spr_player_spawnpoint_carols_bike,"Carol + Bike Spawnpoint","Sets your stage as exclusive to Carol's Bike!");
                                        //Carrie Spawnpoint
                                        if (device_mouse_x_to_gui(0) &gt;= 104 and device_mouse_x_to_gui(0) &lt;= 118
                                        and device_mouse_y_to_gui(0) &gt;= 39 and device_mouse_y_to_gui(0) &lt;= 56)
                                            scr_set_object(spr_player_spawnpoint_carrie,"Carrie Spawnpoint","Sets your stage as exclusive to Carrie!");
                                        //Carrie Spawnpoint
                                        if (device_mouse_x_to_gui(0) &gt;= 119 and device_mouse_x_to_gui(0) &lt;= 136
                                        and device_mouse_y_to_gui(0) &gt;= 39 and device_mouse_y_to_gui(0) &lt;= 56)
                                            scr_set_object(spr_player_spawnpoint_chiasa,"Chiasa Spawnpoint","Sets your stage as exclusive to Chiasa!");
                                    }
                                    
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_skyscraper_day_0,"Skyscraper - Roof Piece","Roof tops of skyscrapers!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_platform_midboss_gate,"Mid-Boss Gate","Shiny gates that disappear whenever a boss is defeated! Place these in boss rooms as needed, and watch the magic!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_camera_zoom_out_4x,"Camera Zoom Out (4x)","Zooms out the camera by 200%!");
                               //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_music_off,"Disable Music","Mutes any playing music when passed by!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_metal_pup,"Metal Pup","Rolls around and bites nearby players!"); 
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 1 scr_set_object(spr_star_marine_base_1,"Star Marine","Star Marine, serving a torrent of trouble! (Concepted by RocketPotato) Neither the skies nor the seas are safe from the Star Marine's RNA Cannon! Evasive maneuvers are encouraged while her cannon is warming up.");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_milla_cs_talking_neutral,"Milla","Milla the Basset Hound! Don't let her curious, wandering eyes fool you, this pup is dynamite! Milla's prowess in alchemy is only equaled by her innocence, but her heart is always in the right place. She gives it her all for her friends!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_allister_idle,"Allister","Look up, it's Allister! His fascination with astronomy, inspired by Sci-Fi shows from an early age, takes him across Avalice as he surveys the sky. But sometimes he does take a break in the arcade.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_serena_idle,"Serena Katt","She's working over here! Serena is a busy mom, working as hard as she plays. When she's not in the mines, Serena fishes along the river with family. Perhaps she was once more adventurous than her daily life implies? It's up to you!")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(103,23,136,56)
                            }
                        //Check Menu Item 4
                        if device_mouse_x_to_gui(0) &gt;= 139 and device_mouse_x_to_gui(0) &lt;= 172
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[3] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[3] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[3]; user_layer_selected = use_layer_menu_item[3]; user_layer_iteration = use_layer_selected_item[3]; user_grid_offset_x = use_layer_offset_x_item[3]; user_grid_offset_y = use_layer_offset_y_item[3];  use_item_description = use_tile_menu_item_description[3]; use_item_aspect_ratio = display_tile_menu_ratio[3]; use_item_offset_x = offset_tile_menu_icons_x[3]; use_item_offset_y = offset_tile_menu_icons_y[3];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_health_petal_flower,"Petal Flower","Sprouts with several petal flowers when attacked!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_mega_car,"Mega Car","A car that can be pushed around, or destroyed for fun!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_3,"Blue Spring","Bounces the player!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_23,"Glass Spring","The harder you land on these springs, the faster you bounce! Warning: Very fragile! This spring shatters upon impact!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0
                                    {
                                        //Keycard
                                        if (device_mouse_x_to_gui(0) &gt;= 140 and device_mouse_x_to_gui(0) &lt;= 154
                                        and device_mouse_y_to_gui(0) &gt;= 24  and device_mouse_y_to_gui(0) &lt;= 55)
                                            scr_set_object(spr_keycard,"Key Card","Collect these cards to open key card doors!");
                                        //Keycard Terminal
                                        if (device_mouse_x_to_gui(0) &gt;= 155 and device_mouse_x_to_gui(0) &lt;= 171
                                        and device_mouse_y_to_gui(0) &gt;= 24  and device_mouse_y_to_gui(0) &lt;= 39)
                                            scr_set_object(spr_keycard_terminal,"Key Card Terminal","Place this near an unlockable laser door!");
                                        //Keycard Door
                                        if (device_mouse_x_to_gui(0) &gt;= 155 and device_mouse_x_to_gui(0) &lt;= 171
                                        and device_mouse_y_to_gui(0) &gt;= 40  and device_mouse_y_to_gui(0) &lt;= 55)
                                            scr_set_object(spr_keycard_door,"Unlockable Laser Door","Place this near a key card terminal!");
                                    }
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_skyscraper_day_2,"Skyscraper - Windows","Window sections of skyscrapers!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_platform_water_horizontal,"Moving Water Platform","Make your water cubes move like moving platforms! How crazy is that?");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_camera_boundary_top,"Camera Boundary - Top","Sets the ceiling for your stage!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_birds_ambiance,"Bird Song Ambiance","Triggers momentary bird songs when passed by!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_angle_gear_270,"Angle Gear (Angle 270)","These digital gears can be placed over certain items to rotate them! This allows certain items to be placed on walls and ceilings, isn't that neat? (Note: The editor must be set to Manual Mode, instead of Auto)");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_blade_orbiter,"Blade Orbiter","Slashes anything below them!");
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 1 scr_set_object(spr_bouncer_thumbnail,"Bouncer","Chomper is back, and this time with a vengeance, rebranded as Bouncer! Bouncer is meaner and greaner than ever! This mini-boss aggressively leaps forward, upwards, and even slams their body into the ground. All the better to crush you with!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_stella_idle,"Stella the Mouse","Stella the Mouse, she's waving at you! Stella may seem the quiet type, but she always has something to say! Every so often, she travels to escape the daily grind of her projects at the Shang Mu Observatory. What is on her mind?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_abby_idle,"Abby","Don't let her small size fool you, Abby is more than an ankle-biter! She means business, even if not everything she says makes sense. Abby keeps up her guard, only showing her true self to her friends, especially Shyama.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_chiasa_idle,"Chiasa Wildcat","Smile and wave, it's Chiasa! Chiasa is a new feline fighter in training at the academy, making use of both her claws and hair whipping technique for a unique advantage. She is always ready !... unless it's broccoli, or cauliflower.")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(139,23,172,56)
                            }
                        //Check Menu Item 5
                        if device_mouse_x_to_gui(0) &gt;= 175 and device_mouse_x_to_gui(0) &lt;= 208
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[4] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[4] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[4]; user_layer_selected = use_layer_menu_item[4]; user_layer_iteration = use_layer_selected_item[4]; user_grid_offset_x = use_layer_offset_x_item[4]; user_grid_offset_y = use_layer_offset_y_item[4];  use_item_description = use_tile_menu_item_description[4]; use_item_aspect_ratio = display_tile_menu_ratio[4]; use_item_offset_x = offset_tile_menu_icons_x[4]; use_item_offset_y = offset_tile_menu_icons_y[4];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 {scr_set_object(spr_flower_2_copy,"Wood Shield Flower","Grants the player a shield that attracts health petals!"); use_item_offset_y = -4; user_grid_offset_y = -4;}
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_mega_milk,"Mega Milk Crate","A large milk crate that can be pushed around! Spill hazard when broken!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_4,"Blue Spring","Bounces the player!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_24,"Green Spring","A weaker variant of the venerable blue springs! These underpowered springs can be very handy under fairly-specific circumstances, give them a try!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0
                                    {
                                        if device_mouse_x_to_gui(0) &gt;= 176 and device_mouse_x_to_gui(0) &lt;= 193
                                                scr_set_object(spr_switch_door,"Door Switch","Activates nearby doors when stood on!");
                                        if  device_mouse_x_to_gui(0) &gt;= 194 and device_mouse_x_to_gui(0) &lt;= 207
                                            {
                                                if device_mouse_y_to_gui(0) &gt;= 24  and device_mouse_y_to_gui(0) &lt;= 37
                                                    scr_set_object(spr_door_0,"Door - Vertical","Switch-activated puzzle door! Place near a door switch!");
                                                if device_mouse_y_to_gui(0) &gt;= 38  and device_mouse_y_to_gui(0) &lt;= 55
                                                    scr_set_object(spr_door_1,"Door - Horizontal","Switch-activated puzzle door! Place near a door switch!");
                                            }
                                    }
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_skyscraper_day_4,"Skyscraper - Entrance","Ground level pieces for skyscrapers!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_platform_water_vertical,"Moving Water Platform","Make your water cubes move like moving platforms! How crazy is that?");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_camera_boundary_bottom,"Camera Boundary - Bottom","Sets the bottom of your stage! Players will die if they fall below it!");
                               //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_boss_music,"Boss Music Trigger","Triggers boss music when passed by! (Track by Synx!)");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_stop_music,"Stop Music","Sometimes, you may want a more atmospheric place with background ambiance, instead of music. And you may want to restart the stage's music afterwards. This trigger is your friend for such use-cases!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_shock_puppet,"Shock Puppet","Shocks nearby players!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_shy_idle,"Shyama","Shyama the Dragon Girl is here! Friendly, social, and silly to a fault, Shy is the opposite of her namesake. She may be, at times, too spontaneous for her own good, but her friends know who is always ready to be of good cheer!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_alexis_idle,"Alexis","Alexis is the opposite of her younger sister, Abby. She is smug, and pushes back when complimented. While she is mostly harmless, don't expect Alexis to play nice, either!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_dean_idle,"Dr. Dean B","Dr. Dean, at your service! He is the lead director of research and development at Shang Mu Academy, with an express interest in understanding alien robots and materials, for the betterment and safety of Avalice!")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(175,23,208,56)
                            }
                        //Check Menu Item 6
                        if device_mouse_x_to_gui(0) &gt;= 211 and device_mouse_x_to_gui(0) &lt;= 244
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[5] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[5] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[5]; user_layer_selected = use_layer_menu_item[5]; user_layer_iteration = use_layer_selected_item[5]; user_grid_offset_x = use_layer_offset_x_item[5]; user_grid_offset_y = use_layer_offset_y_item[5];  use_item_description = use_tile_menu_item_description[5]; use_item_aspect_ratio = display_tile_menu_ratio[5]; use_item_offset_x = offset_tile_menu_icons_x[5]; use_item_offset_y = offset_tile_menu_icons_y[5];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 {scr_set_object(spr_flower_3_copy,"Water Shield Flower","Grants the player a shield that lets them breathe underwater!") use_item_offset_y = -4; user_grid_offset_y = -4;}
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_gold_gem,"Boost Gem Crystal","Pickup that grants 1.5x more stamina than normal gem crystals! Boost Gem Crystals can additionally push the stamina bar up to 150% if collected. (Note: Normal gem crystals cannot add anymore stamina beyond 100%!)");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_5,"Gold Spring","Bounces the player strongly!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_25,"Green Spring","A weaker variant of the venerable blue springs! These underpowered springs can be very handy under fairly-specific circumstances, give them a try!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0
                                    {
                                        if device_mouse_x_to_gui(0) &gt;= 212 and device_mouse_x_to_gui(0) &lt;= 226
                                            scr_set_object(spr_switch_water,"Water Switch","Stand on this switch to raise or lower the water level!");
                                        if  device_mouse_x_to_gui(0) &gt;= 227 and device_mouse_x_to_gui(0) &lt;= 243
                                            scr_set_object(spr_switch_bomb,"Bomb Switch","Stand on this switch to trigger nearby bomb flowers!");
                                    }
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_bird,"Bird","Birds that flutter away when players get close! Colors and shapes are random!")
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_potion_shop_spawn_point,"Milla's Super Potion Shop","Milla is running her own potion shop now! Simply place this anywhere in a stage to help Milla setup shop! Yay!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_camera_boundary_left,"Camera Boundary - Left","Sets the left boundary of your stage! Players can't walk beyond this point!")
                               //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_mini_boss_music,"Midboss Music Trigger","Triggers midboss music when passed by! (Track by Dusky!)");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_start_music,"Start Music","Sometimes, you may want a more atmospheric place with background ambiance, instead of music. And you may want to restart the stage's music afterwards. This trigger is your friend for such use-cases!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_turretus,"Turretus","Shoots nearby players with a bullet!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_tiwi_idle,"Tiwi the Mouse","Tiwi the Mouse, likes a good sandwich! Ask him what his favorite kind of sandwich is! He might surprise you with his varied tastes!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_kyomi_idle,"Kyomi","Part of a power metal band, PetalForce, Kyomi is their moody bassist with an edge. She is also friends with Allister. (Who wishes to join the band someday.)")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_shan_idle,"Shan","")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(211,23,244,56)
                            }
                        //Check Menu Item 7
                        if device_mouse_x_to_gui(0) &gt;= 247 and device_mouse_x_to_gui(0) &lt;= 280
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[6] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[6] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[6]; user_layer_selected = use_layer_menu_item[6]; user_layer_iteration = use_layer_selected_item[6]; user_grid_offset_x = use_layer_offset_x_item[6]; user_grid_offset_y = use_layer_offset_y_item[6];  use_item_description = use_tile_menu_item_description[6]; use_item_aspect_ratio = display_tile_menu_ratio[6]; use_item_offset_x = offset_tile_menu_icons_x[6]; use_item_offset_y = offset_tile_menu_icons_y[6];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_flower_4_copy,"Earth Shield Flower","Grants the player a shield that attracts crystal gems!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_green_pot_destructible,"Green Pot","Breaks in one hit, and grants one crystal gem!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_6,"Gold Spring","Bounces the player strongly!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_26,"Green Spring","A weaker variant of the venerable blue springs! These underpowered springs can be very handy under fairly-specific circumstances, give them a try!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_crosswalk_signal,"Player Hazard - Crosswalk Signal","Cars will drive by if the player stands near it for too long! Watch out!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_smart_petal_pool,"Petal Pools","Regenerates your health while swimming inside them!")
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_mud_cube,"Mud Cubes","Especially dense water cubes that cause players to sink instead of swim! Mud cubes present a unique danger to water-based stages! Use with Caution!")

                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(star_flounder,"Star Flounder","Patrols the water back and forth. Please keep him hydrated!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_camera_boundary_right,"Camera Boundary - Right","Sets the right side of your stage! The player can't walk past this point!");
                               //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_mega_boss_music,"Mega Boss Music Trigger","Triggers mega boss music when passed by! (Track by Bobtheguy!)");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_creepy_ambiance,"Creepy Underworld Ambiance","This is for those spooky scary stages, oohohohohoohoooooooooo!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_sign_idle,"Posted Sign","Posted Sign, ready to inform the public! This can be used to inform the player of any upcoming dangers, or any other storytelling purposes you may have in mind!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_xavier_idle,"Xavier","Xavier is a moody, but passionate, electric-elemental snow leopard-dragon chimera, and a mechanic. Despite his pacifist ways, Xavier keeps a custom pistol handy, to protect himself from robots in the wilderness.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_mei_idle,"Mei","")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(247,23,280,56)
                            }
                    }
                //Check Row 2
                if device_mouse_y_to_gui(0) &gt;= 59 and device_mouse_y_to_gui(0) &lt;= 92
                    {
                        //Check Menu Item 8 (Last Page)
                        if device_mouse_x_to_gui(0) &gt;= 13 and device_mouse_x_to_gui(0) &lt;= 46
                            {
                                //Scroll through pages for the tile menu
                                if use_tile_menu_subpage = 0
                                    {
                                        use_tile_menu_page -= 1
                                        //Wrap around to the fourth page if we have scrolled past the first page
                                        if use_tile_menu_page &lt; 0 use_tile_menu_page = 5;
                                        //Change the displayed items based on our current page
                                        scr_change_page()
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 1
                                    {
                                        use_item_menu_page -= 1
                                        //Wrap around to the third page if we have scrolled past the first page
                                        if use_item_menu_page &lt; 0 use_item_menu_page = 1;
                                    }
                                if use_tile_menu_subpage = 2
                                    {
                                        use_enemy_menu_page -= 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_enemy_menu_page &lt; 0 use_enemy_menu_page = 1;
                                    }
                                //Scroll through pages for the springs menu
                                if use_tile_menu_subpage = 3
                                    {
                                        use_springs_menu_page -= 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_springs_menu_page &lt; 0 use_springs_menu_page = 1;
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 4
                                    {
                                        use_gimmicks_menu_page -= 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_gimmicks_menu_page &lt; 0 use_gimmicks_menu_page = 2;
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 5
                                    {
                                        use_advanced_menu_page -= 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_advanced_menu_page &lt; 0 use_advanced_menu_page = 2;
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 6
                                    {
                                        use_actors_menu_page -= 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_actors_menu_page &lt; 0 use_actors_menu_page = 2;
                                    }
                                //Play page turning sound
                                audio_play_sound(snd_turn_page,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(13,59,46,92)
                            }
                        //Check Menu Item 9
                        if device_mouse_x_to_gui(0) &gt;= 49 and device_mouse_x_to_gui(0) &lt;= 82
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[7] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[7] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[7]; user_layer_selected = use_layer_menu_item[7]; user_layer_iteration = use_layer_selected_item[7]; user_grid_offset_x = use_layer_offset_x_item[7]; user_grid_offset_y = use_layer_offset_y_item[7];  use_item_description = use_tile_menu_item_description[7]; use_item_aspect_ratio = display_tile_menu_ratio[7]; use_item_offset_x = offset_tile_menu_icons_x[7]; use_item_offset_y = offset_tile_menu_icons_y[7];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 {scr_set_object(spr_flower_5_copy,"Fire Shield Flower","Grants the player a shield that slightly damages nearby enemies!") use_item_offset_y = -4; user_grid_offset_y = -4;}
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_yellow_pot_destructible,"Yellow Pot","Breaks in one hit, and grants one crystal gem!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_7,"Gold Spring","Bounces the player strongly!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_27,"Green Spring","A weaker variant of the venerable blue springs! These underpowered springs can be very handy under fairly-specific circumstances, give them a try!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_boost_pad,"Boost Pad","Increase the player's speed when passed by!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_bench_0,"Bench - Temple","Press down nearby them to sit down! Really!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_mud_block,"Mud Blocks","Especially dense water cubes that can be stood on top of, unlike their larger cousins! Mud blocks are slippery, and may present a unique challenge to test your players' intuition! Please use cautiously!")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_water_height,"Water Depth Adjuster","Modifies the depth of the global body of water!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_boss_boundary_top,"Boss Camera Boundary - Top","Sets the ceiling for your stage's boss arena!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 2 scr_set_object(spr_creepy_caves,"Creepy Caves Ambiance","This is for those spooky scary stages, oohohohohoohoooooooooo!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_shark_torpedo_unloaded,"Shark Torpedo","Patrols the water back-and-forth, and shoots crystal projectiles at the player! Disclaimer: Does not like dry land");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_stumpy_idle,"Stumpy","Milla's trusty stump! He doesn't have much to say, but Milla likes to draw new faces on him every now and then! What will you imagine he says next?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_carrie_idle,"Carrie","Carrie Mei the River Cat, here and there! Carrie hails from the sleepy river town of Wuzhen, where she prefers the quiet life with those closest to her. But adventure calls for Carrie once more! Where will she go next?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_vivid_idle,"Vivid the Avian","Watch out, it's Vivid! This young lady doesn't let her bad sight stop her from making trouble at every turn. She lives for the moment and all the chaos it brings. What rascally deed will she commit next?")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(49,59,82,92)
                            }
                        //Check Menu Item 10
                        if device_mouse_x_to_gui(0) &gt;= 85 and device_mouse_x_to_gui(0) &lt;= 118
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[8] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[8] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[8]; user_layer_selected = use_layer_menu_item[8]; user_layer_iteration = use_layer_selected_item[8]; user_grid_offset_x = use_layer_offset_x_item[8]; user_grid_offset_y = use_layer_offset_y_item[8];  use_item_description = use_tile_menu_item_description[8]; use_item_aspect_ratio = display_tile_menu_ratio[8]; use_item_offset_x = offset_tile_menu_icons_x[8]; use_item_offset_y = offset_tile_menu_icons_y[8];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 {scr_set_object(spr_flower_6_copy,"Metal Shield Flower","Grants the player a shield that protects them from spikes!") use_item_offset_y = -4; user_grid_offset_y = -4;}
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_mega_green_pot,"Mega Green Pot","Grants many crystal gems when broken!");
                                //Select an item on page 2
                                //if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_speed_booster,"Stamina Booster","Grants the player faster stamina recovery for a short time!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_8,"Gold Spring","Bounces the player strongly!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_28,"Spiky Spring","When the stakes need to be raised, variety is the spice of life, as they say! Or was it pain? Spiky springs damage the player with each bounce. (While they are not in a hurt state, of course.)");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_bubbles_air,"Air Bubble","Instantly refills the player's breath meter while they are underwater!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_bench_1,"Bench - City","Press down nearby them to sit down! Really!")
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_smart_pool_mud,"Mud Water","Especially dense water that causes players to sink instead of swim! Muddy water presents a unique danger to water-based stages! Use with Caution!")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_loop_exit_road,"Loop-De-Loop Exit Controller - Road","Place over a pre-assembled loop for creating exit loops more easily!")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_boss_boundary_bottom,"Boss Camera Boundary - Bottom","Sets the bottom of your stage's boss arena!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_dna_cannon,"DNA Cannon","Fires a beam of plasma in the player's direction!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_cook_idle,"Cook","Cook (Starbuster Cameo), serving up trouble! Cook may not be a five-star chef, but he always knows what to dish out when things aren't going right. Mind his apprehension of sunlight, and maybe he won't yeet you into next Taco Tuesday.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_ryusei_idle,"Ryusei","Say hello, Ryusei. Don't be shy! Ryusei has to fight his timid nature, and the limits of his mechanical arm, as much any other enemy robot in his way. He finds peace meditating at the high temples on the mountains. What's on his mind?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_garrett_idle,"Garrett","")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(85,59,118,92)
                            }
                        //Check Menu Item 11
                        if device_mouse_x_to_gui(0) &gt;= 121 and device_mouse_x_to_gui(0) &lt;= 154
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[9] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[9] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[9]; user_layer_selected = use_layer_menu_item[9]; user_layer_iteration = use_layer_selected_item[9]; user_grid_offset_x = use_layer_offset_x_item[9]; user_grid_offset_y = use_layer_offset_y_item[9];  use_item_description = use_tile_menu_item_description[9]; use_item_aspect_ratio = display_tile_menu_ratio[9]; use_item_offset_x = offset_tile_menu_icons_x[9]; use_item_offset_y = offset_tile_menu_icons_y[9];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_flower_10_copy,"Rock Shield","Grants the player a shield that deals more damage to enemies, the faster they move!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_mega_yellow_pot,"Mega Yellow Pot","Grants many crystal gems when broken!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_9,"Gold Spring","Bounces the player strongly!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_29,"Spiky Spring","When the stakes need to be raised, variety is the spice of life, as they say! Or was it pain? Spiky springs damage the player with each bounce. (While they are not in a hurt state, of course.)");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_platform_modifier_horizontal,"Floating Platform - Horizontal","Click, drag, and release to create a horizontal moving platform!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_bench_2,"Bench - Zao","Press down nearby them to sit down! Really!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_train_station_spawner,"Instant Train Station","Turn any existing background into a train station in one simple click! Yay!")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_loop_layer_changer,"Loop-De-Loop Layer Set High","Changes which side of the loop the player interacts with!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_boss_boundary_left,"Boss Camera Boundary - Left","Sets the left-hand side of your stage's boss arena!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 {use_item_offset_y = -8; user_grid_offset_y = -8; scr_set_object(spr_fire_spitter,"Firespitter","Shoots a column of fire at nearby players!");}
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_wacky_idle,"Scaly","Scaly the Earth Snake, now invading Avalice! Scaly crashed his ship in Shang Mu, while searching for his mother; he aspires to be a great space pirate like her one day. Is he integrating well with the locals? It's up to you!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_savvy_idle,"Savvy","Hey! It's your boss calling! Meet Savvy Marigold, director of Shang Mu Academy's expansion projects. When she's not training staff or managing the managers, Savvy is hard at work in the field herself! Does she ever sleep?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_maria_idle,"Maria Notte","Lights! Camera! It's Maria Notte, on the case! Maria is a news reporter for the Tri-Kingdom News Network. The latest scoop is never out of reach for this bold lady bat! Who will she interview next? It's up to you!")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(121,59,154,92)
                            }
                        //Check Menu Item 12
                        if device_mouse_x_to_gui(0) &gt;= 157 and device_mouse_x_to_gui(0) &lt;= 190
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[10] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[10] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[10]; user_layer_selected = use_layer_menu_item[10]; user_layer_iteration = use_layer_selected_item[10]; user_grid_offset_x = use_layer_offset_x_item[10]; user_grid_offset_y = use_layer_offset_y_item[10];  use_item_description = use_tile_menu_item_description[10]; use_item_aspect_ratio = display_tile_menu_ratio[10]; use_item_offset_x = offset_tile_menu_icons_x[10]; use_item_offset_y = offset_tile_menu_icons_y[10];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 {scr_set_object(spr_flower_7_copy,"Invincibility Flower","Grants the player temporary invulnerability!") use_item_offset_y = -4; user_grid_offset_y = -4;}
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_rock_destructible,"Breakable Rock","Grants one crystal gem when broken!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_10,"Blue Spring","Bounces the player!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_30,"Spiky Spring","When the stakes need to be raised, variety is the spice of life, as they say! Or was it pain? Spiky springs damage the player with each bounce. (While they are not in a hurt state, of course.)");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_platform_modifier_vertical,"Floating Platform - Vertical","Click, drag, and release to create a vertical moving platform!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_bench_3,"Bench - Stool","Press down nearby them to sit down! Really!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 2 scr_set_object(spr_rogue_cube,"Rogue Cube","The bomb cube's evil twin, it's the rogue cube! These cubes behave exactly like Milla's bomb cubes, but worse; they never shrink away, and will explode after receiving enough damage! Use at your own risk!")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_loop_layer_changer_l,"Loop-De-Loop Layer Set Low","Changes which of the loop the player interacts with!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_boss_boundary_right,"Boss Camera Boundary - Right","Sets the right-hand side of your stage's boss arena!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_buoybuoy,"Buoy Buoy","Damages nearby players! Can be placed in or above water.");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_harige_idle,"Harige","Harige the cat, ready to cook! This old cat came from a distant place, looking for new recipes and a new job. Harige loves to cook, he can make you anything in an instant! (Except a hamburger. Anything but a hamburger!)")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_rhyme_idle,"Rhyme","")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_elric_idle,"Elric","Look up at the sky, it's Elric! Elric is a pilot and enthusiastic mechanic; he is in his element tinkering with new gadgets or old airplanes. What job will he be assigned next? You decide!")

                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(157,59,190,92)
                            }
                        //Check Menu Item 13
                        if device_mouse_x_to_gui(0) &gt;= 193 and device_mouse_x_to_gui(0) &lt;= 226
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[11] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[11] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[11]; user_layer_selected = use_layer_menu_item[11]; user_layer_iteration = use_layer_selected_item[11]; user_grid_offset_x = use_layer_offset_x_item[11]; user_grid_offset_y = use_layer_offset_y_item[11];  use_item_description = use_tile_menu_item_description[11]; use_item_aspect_ratio = display_tile_menu_ratio[11]; use_item_offset_x = offset_tile_menu_icons_x[11]; use_item_offset_y = offset_tile_menu_icons_y[11];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 {scr_set_object(spr_flower_8_copy,"Bomb Flower","Triggers an explosion when attacked! Be careful!"); use_item_offset_y = -4; user_grid_offset_y = -4;}
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_crystal_gold_flower,"Gold Crystal Gems","Sprouts with several gold gems when attacked!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_11,"Blue Spring","Bounces the player!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_31,"Spiky Spring","When the stakes need to be raised, variety is the spice of life, as they say! Or was it pain? Spiky springs damage the player with each bounce. (While they are not in a hurt state, of course.)");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_platform_modifier_circular,"Floating Platform - Pinwheel","Four floating platforms rotating around a central point!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_bench_4,"Bench - High Stool","Press down nearby them to sit down! Really!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_loop_changer_l,"Loop-De-Loop Layer Changer Low","Place this over loop pieces you want to change layers!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_wind_turbine_stopper,"Wind Stopper","Stops the wind effects of the wind turbine below its default range! Place this wind stopper at some point above the wind turbine, to make its maximum lift height shorter!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_ghetto_blaster,"Whelk Blaster","This snail bot crawls both the land and the sea at a modest pace. It blasts the nearby air with concussive shockwaves that reach high into the air!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_bird_guard_idle,"Bird Guard","Wah?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_clyde_idle,"Cutter Clyde","Yeehaw! Guess who the cat dragged in? It's Cutter Clyde, at your service. He is one of many aliens stranded on the surface of Avalice, but Clyde wants to stay and learn the strange new customs of the locals. How's it goin', partner?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_beldr_idle,"Beldr","Who did you hire for the job? Beldr, of course! Beldr is a mercenary by trade. He is calm and collected, and takes his jobs seriously; no one's ever seen him laugh. Will he have a reason to smile, at least? That's up to you!")
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(193,59,226,92)
                            }
                        //Check Menu Item 14
                        if device_mouse_x_to_gui(0) &gt;= 229 and device_mouse_x_to_gui(0) &lt;= 262
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[12] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[12] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[12]; user_layer_selected = use_layer_menu_item[12]; user_layer_iteration = use_layer_selected_item[12]; user_grid_offset_x = use_layer_offset_x_item[12]; user_grid_offset_y = use_layer_offset_y_item[12];  use_item_description = use_tile_menu_item_description[12]; use_item_aspect_ratio = display_tile_menu_ratio[12]; use_item_offset_x = offset_tile_menu_icons_x[12]; use_item_offset_y = offset_tile_menu_icons_y[12];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_speed_booster,"Stamina Booster","Grants the player faster stamina recovery for a short time!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_crystal_green_flower,"Green Crystal Gems","Sprouts with several green gems when attacked!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_12,"Blue Spring","Bounces the player!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_32,"Push Spring","These purple springs can be pushed around to different locations! Useful for solving puzzles or jumping higher in more advantageous areas!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_platform_modifier_halfcircle,"Floating Platform - Pendulum","Singular floating platform, attached to and swinging from a point!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_petalfall_node,"Petalfalls","Heal yourself beneath this pretty pink waterfall!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_loop_changer_r,"Loop-De-Loop Layer Changer High","Place this over loop pieces you want to change layers!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_bg_change_0,"Background Changer","Changes the background of your stages on-the-fly! Highly recommended for placement in tunnels or other types of scenery!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_bullfrag,"Bullfrag","Fires sludge orbs at the player!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_jamie_idle,"Jamie","Jamie the wildcat, disgruntled OSHA inspector, at your service!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_bucky_idle,"Bucky Bart","Yeehoo! That cat's been mighty busy lately. It's Clyde's partner, Bucky Bart! His zany demeanor and lanky limbs are a contrast to his partner Clyde. Seriousness is a funny suggestion to Bucky. Who will suffer his jawin' next?");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_leo_idle,"Leo","You are now logged into LionOS! Welcome to Leo, everyone's friendly (yet-sassy) chat bot. His conversational ability is uncanny. Who is the clever programmer behind his mannerisms? Have fun with Leo!");
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(229,59,262,92)
                            }
                        //Check Menu Item 15 (Next Page)
                        if device_mouse_x_to_gui(0) &gt;= 265 and device_mouse_x_to_gui(0) &lt;= 298
                            {
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 0
                                    {
                                        use_tile_menu_page += 1
                                        //Wrap around to the first page if we have scrolled past the fourth page
                                        if use_tile_menu_page &gt; 5 use_tile_menu_page = 0;
                                        //Change the displayed items based on our current page
                                        scr_change_page()
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 1
                                    {
                                        use_item_menu_page += 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_item_menu_page &gt; 1 use_item_menu_page = 0;
                                    }
                                if use_tile_menu_subpage = 2
                                    {
                                        use_enemy_menu_page += 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_enemy_menu_page &gt; 1 use_enemy_menu_page = 0;
                                    }
                                //Scroll through pages for the springs menu
                                if use_tile_menu_subpage = 3
                                    {
                                        use_springs_menu_page += 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_springs_menu_page &gt; 1 use_springs_menu_page = 0;
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 4
                                    {
                                        use_gimmicks_menu_page += 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_gimmicks_menu_page &gt; 2 use_gimmicks_menu_page = 0;
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 5
                                    {
                                        use_advanced_menu_page += 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_advanced_menu_page &gt; 2 use_advanced_menu_page = 0;
                                    }
                                //Scroll through pages for the items menu
                                if use_tile_menu_subpage = 6
                                    {
                                        use_actors_menu_page += 1
                                        //Wrap around to the first page if we have scrolled past the third page
                                        if use_actors_menu_page &gt; 2 use_actors_menu_page = 0;
                                    }
                                //Play page turning sound
                                audio_play_sound(snd_turn_page,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(265,59,298,92)
                            }
                    }
                //Check Row 3
                if device_mouse_y_to_gui(0) &gt;= 95 and device_mouse_y_to_gui(0) &lt;= 128
                    {
                        //Check Menu Item 16
                        if device_mouse_x_to_gui(0) &gt;= 31 and device_mouse_x_to_gui(0) &lt;= 64
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[13] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[13] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[13]; user_layer_selected = use_layer_menu_item[13]; user_layer_iteration = use_layer_selected_item[13]; user_grid_offset_x = use_layer_offset_x_item[13]; user_grid_offset_y = use_layer_offset_y_item[13];  use_item_description = use_tile_menu_item_description[13]; use_item_aspect_ratio = display_tile_menu_ratio[13]; use_item_offset_x = offset_tile_menu_icons_x[13]; use_item_offset_y = offset_tile_menu_icons_y[13];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_chibililac_cage,"1up Fairy","Grants the player an additional life when caught!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_potion_chest,"Potion Chest","This chest of randomized potions can be very handy for a wary player in a pinch! Simply place them where you think is appropriate, and watch the magic!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_13,"Gold Spring","Bounces the player strongly!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 1 scr_set_object(spr_spring_33,"Balloon","Balloons can be placed in mid-air, and used like a spring to bounce to higher places!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_shield_earth,"Shield Spawner - Earth Shield","Place near spawn points to give players a starting shield!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_cube_mega_bouncy,"Bouncy Cube Wall","A large jiggly cube wall! Pops when bounced against after so often!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_weather_clear,"Set Weather - Clear","Resets weather conditions to a clear, sunny day!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_portal_1A,"Portal Start Point - 1A","Press up to teleport the player to different places in your stages! This is the start point of Portal 1!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_rna_cannon,"RNA Cannon","A unicycle variant of the DNA Cannon!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_cassandre_idle,"Cassandre","Red scarves sub chief and main doctor chief, Cassandre is an expert in Dim Mak arts and traditional medcine. She collects ancient artifacts in free time, and loves spicy food.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_ness_idle,"NE5Server","NE5Server is here! (Or Ness for short.) Ness won't say where she came from, only that she is not of this planet. She is warm and helpful, like an oracle, but distant; bound by her duties not to disrupt the lives of the natives.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_jett_idle,"Jett","Look out, it's Jett! This teen ram goat relishes in playful mischief and thrilling stunts, like riding on rockets. Even when things blow up in her face, she takes it in stride with a wicked smile. What trouble will she get into next?");
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(31,95,64,128)
                            }
                        //Check Menu Item 17
                        if device_mouse_x_to_gui(0) &gt;= 67 and device_mouse_x_to_gui(0) &lt;= 100
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[14] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[14] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[14]; user_layer_selected = use_layer_menu_item[14]; user_layer_iteration = use_layer_selected_item[14]; user_grid_offset_x = use_layer_offset_x_item[14]; user_grid_offset_y = use_layer_offset_y_item[14];  use_item_description = use_tile_menu_item_description[14]; use_item_aspect_ratio = display_tile_menu_ratio[14]; use_item_offset_x = offset_tile_menu_icons_x[14]; use_item_offset_y = offset_tile_menu_icons_y[14];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_target,"Brass Target","Used for 'Hit the Targets' stages, or as a goal post in 'Reach the Target' stages!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_treasure_chest,"Treasure Chest","This chest of randomized gems and petals can be very handy for a wary player in a pinch! Simply place them where you think is appropriate, and watch the magic!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_14,"Gold Spring","Bounces the player strongly!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_shield_fire_front,"Shield Spawner - Fire Shield","Place near spawn points to give players a starting shield!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_bridge_post,"Wooden Bridge","A large, (fire-proof) wooden bridge!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_weather_rain,"Set Weather - Rain","Passing by this sets the weather severity to level 1!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_portal_1B,"Portal Start Point - 1B","Press up to teleport the player to different places in your stages! This is the end point of Portal 1!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_axle_turret_thumbnail,"Axle Turret","Shoots players from all directions at random!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_spade_cs_talking_neutral,"Spade","Coolness personified! Whether he's leaning surreptitiously against lampposts in the night, or throwing that ace up his sleeve with deadly precision, Spade's heady mix of angst and style is an impenetrable miasma of mystery..." )
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_hyper_idle,"Hyper","It's Hyper! Hailing from the old Woosung Railway, Hyper wishes to grow his self-confidence in the big city at Shang Mu. He's learning not to hide behind his friends, but don't scare him! This little fox is easily startled.")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_marshmallow_idle,"Marshmallow","Don't be shy, Marshmallow! Marshmallow gets into a lot of trouble for a curious, shy puppy. He makes a lot of things explode by accident, but his friends know he means well, and can't help it. (Yet!)");
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(67,95,100,128)
                            }
                        //Check Menu Item 18
                        if device_mouse_x_to_gui(0) &gt;= 103 and device_mouse_x_to_gui(0) &lt;= 136
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[15] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[15] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[15]; user_layer_selected = use_layer_menu_item[15]; user_layer_iteration = use_layer_selected_item[15]; user_grid_offset_x = use_layer_offset_x_item[15]; user_grid_offset_y = use_layer_offset_y_item[15];  use_item_description = use_tile_menu_item_description[15]; use_item_aspect_ratio = display_tile_menu_ratio[15]; use_item_offset_x = offset_tile_menu_icons_x[15]; use_item_offset_y = offset_tile_menu_icons_y[15];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 {scr_set_object(spr_checkpoint,"Tin Target - Checkpoint","Creates a checkpoint when hit!");}
                                //Select an item on page 2
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 1 scr_set_object(spr_petal_shard,"Petal Shard","Collect these to redeem them at Milla's potion shop! Every 5 petal shards entitles you to a free petal potion!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_15,"Gold Spring","Bounces the player strongly!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_shield_metal,"Shield Spawner - Metal Shield","Place near spawn points to give players a starting shield!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_rock_floor_distructible,"Destructible Floor","These floors collapse shortly after walking over them!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_weather_storm,"Set Weather - Storm","Passing by this sets the weather severity to level 2!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_portal_2A,"Portal Start Point - 2A","Press up to teleport the player to different places in your stages! This is the start point of Portal 2!");
                                //Select an enemy
                                if use_tile_menu_subpage = 2 and use_enemy_menu_page = 0 scr_set_object(spr_rocket_puncher,"Rocket Puncher","Punches nearby players!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_azuli_idle,"Azuli","Azuli the miner, at your service! Azuli is a kind, volunteering geologist, hailing from Taishan Mountain, who was recently employed by the Shang Mu Academy for his experience. What's on his mind?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_iris_idle,"Iris","")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_vela_idle,"Vela Cosmos","Hello there, it's Vela! This quirky mountain goat's pursuit of astronomy takes her everywhere. Don't mind Vela occasionally shouting 'Beep beep!', or her obsession with brick architecture!");
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(103,95,136,128)
                            }
                        //Check Menu Item 19
                        if device_mouse_x_to_gui(0) &gt;= 139 and device_mouse_x_to_gui(0) &lt;= 172
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[16] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[16] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[16]; user_layer_selected = use_layer_menu_item[16]; user_layer_iteration = use_layer_selected_item[16]; user_grid_offset_x = use_layer_offset_x_item[16]; user_grid_offset_y = use_layer_offset_y_item[16];  use_item_description = use_tile_menu_item_description[16]; use_item_aspect_ratio = display_tile_menu_ratio[16]; use_item_offset_x = offset_tile_menu_icons_x[16]; use_item_offset_y = offset_tile_menu_icons_y[16];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_crate_0_copy,"Crate","A simple crate that spawns several gems when broken!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_16,"Variable Spring","The harder you land on these springs, the faster you bounce!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_shield_water,"Shield Spanwer - Water Shield","Place near spawn points to give players a starting shield!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_water_cube,"Water Cube","Water cubes! They are perfect for placing water wherever you might need it above the global body of water, as well as in places you couldn't place water before!")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_weather_tempest,"Set Weather - Tempest","Passing by this sets the weather severity to level 3!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_portal_2B,"Portal End Point - 2B","Press up to teleport the player to different places in your stages! This is the end point of Portal 2!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_astum_idle,"Astum","Heeeere's Astum! Small, naive, and tenacious! Astum's whimsical inclinations lead her curiosities about the world around her, as well as her misadventures. Where will she go next? You best keep an eye on this little fox at all times!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_maika_idle,"Maika","Smile, Maika's on camera! Maika is a plucky new actress, seen across Zao Star Station's many television programs. From protagonists to talking trees, she's done it all! What script will you give her to read next?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_leone_idle,"Leone","Don't mind him, he's busy being grumpy! Leone is Serena's husband, and father to Carrie; they are the only who see his softer side. Leone cares a lot, even when he hesitates to say it.");
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(139,95,172,128)
                            }
                        //Check Menu Item 20
                        if device_mouse_x_to_gui(0) &gt;= 175 and device_mouse_x_to_gui(0) &lt;= 208
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[17] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[17] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[17]; user_layer_selected = use_layer_menu_item[17]; user_layer_iteration = use_layer_selected_item[17]; user_grid_offset_x = use_layer_offset_x_item[17]; user_grid_offset_y = use_layer_offset_y_item[17];  use_item_description = use_tile_menu_item_description[17]; use_item_aspect_ratio = display_tile_menu_ratio[17]; use_item_offset_x = offset_tile_menu_icons_x[17]; use_item_offset_y = offset_tile_menu_icons_y[17];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_mega_crate,"Mega Crate","Larger version of the simple crate! Spawns gems when broken!")
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_17,"Variable Spring","The harder you land on these springs, the faster you bounce!")
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_shield_wood,"Shield Spawner - Wood Shield","Place near spawn points to give players a starting shield!");
                                //Select an item on page 4 
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_wind_turbine,"Wind Turbine","Allows players and enemies to float into the air! Lilac's dragon boost's arc can also be modified by the wind turbine, so look out!")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_loop_logic,"Easy Loops - Wooden Loop-de-Loop","Place an entire wooden loop in one easy click!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_instant_water,"Instant Water","This in-game water height adjuster invisibly change the height of the water, as the player walks into it! Useful for adjusting the height of the water to better suit a heigher or lower point in a map!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_beibo_idle,"Beibo","Beibo, #1 babysitter here! While she is still childish herself, Beibo puts the needs of others before her own, as much as she can help it. (Psst, she loves catnip!)")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_leela_idle,"Leela","Leela, reporting for duty! This panda warrior is always in such a bad mood, Leela grinds her teeth even when she cries. Don't get on her bad side, it's the only side she has!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_pat_idle,"Pat","");
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(175,95,208,128)
                            }
                        //Check Menu Item 21
                        if device_mouse_x_to_gui(0) &gt;= 211 and device_mouse_x_to_gui(0) &lt;= 244
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[18] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[18] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[18]; user_layer_selected = use_layer_menu_item[18]; user_layer_iteration = use_layer_selected_item[18]; user_grid_offset_x = use_layer_offset_x_item[18]; user_grid_offset_y = use_layer_offset_y_item[18];  use_item_description = use_tile_menu_item_description[18]; use_item_aspect_ratio = display_tile_menu_ratio[18]; use_item_offset_x = offset_tile_menu_icons_x[18]; use_item_offset_y = offset_tile_menu_icons_y[18];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_mega_bomb,"Mega Bomb","Explodes when attacked! Look out!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_18,"Variable Spring","The harder you land on these springs, the faster you bounce!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_shield_rock,"Shield Spawner - Rock Shield","Place near spawn points to give players a starting shield!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_soda_can,"Soda Can","A kickable soda can! You can kick it all day long, and attack it, too! (Mod chips can also be applied to it, with all of the implications that come with it!)")
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_brick_loop,"Easy Loops - Brick Loop-de-Loop","Place an entire brick loop in one easy click!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_city_ambiance,"City Ambiance","Triggers momentary city sounds when passed by!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_trip_idle,"Trip","Trip the artisan, ready to create! He loves nothing more than expressing his vivid imagination through his work. What will he draw up next?")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_tsuki_idle,"Tsuki","Tsuki, landing on a planet near you! This self-described punk often lets his actions get ahead of his thoughts, but make no mistake, Tsuki stands by his words. What scrap will he get into next? It's up to you!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 2 scr_set_object(spr_npc_uny_idle,"Uny","Uny tends to refer themself in third person, Uny is a explorer that travels to a lots of places, this time in Shang Mu. Uny loves to take photos of places, people, objects and food!");
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(211,95,244,128)
                            }
                        //Check Menu Item 22
                        if device_mouse_x_to_gui(0) &gt;= 247 and device_mouse_x_to_gui(0) &lt;= 279
                            {
                                //Clear offset values, until a tile menu item modifies them
                                if use_tile_menu_item[19] != ui_unknown_tile
                                    {
                                        user_grid_offset_x      = 0
                                        user_grid_offset_y      = 0
                                        use_item_offset_x       = 0
                                        use_item_offset_y       = 0
                                        scr_change_aspect_ratio_preview(user_tile_selected)
                                    }
                                //Select a tile
                                if use_tile_menu_item[19] != ui_unknown_tile and use_tile_menu_subpage = 0 {user_cursor_display_mode = 0; user_tile_selected = use_tile_menu_item[19]; user_layer_selected = use_layer_menu_item[19]; user_layer_iteration = use_layer_selected_item[19]; user_grid_offset_x = use_layer_offset_x_item[19]; user_grid_offset_y = use_layer_offset_y_item[19];  use_item_description = use_tile_menu_item_description[19]; use_item_aspect_ratio = display_tile_menu_ratio[19]; use_item_offset_x = offset_tile_menu_icons_x[19]; use_item_offset_y = offset_tile_menu_icons_y[19];}
                                //Select an item on page 1
                                if use_tile_menu_subpage = 1 and use_item_menu_page = 0 scr_set_object(spr_mega_block,"Mega Block","An indestructible, pushable block!");
                                //Select an item on page 2
                                if use_tile_menu_subpage = 3 and use_springs_menu_page = 0 scr_set_object(spr_spring_19,"Variable Spring","The harder you land on these springs, the faster you bounce!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 0 scr_set_object(spr_disc_ball,"Disco Ball","Players dance while standing nearby this disco ball!");
                                //Select an item on page 3
                                if use_tile_menu_subpage = 4 and use_gimmicks_menu_page = 1 scr_set_object(spr_basket_ball,"Basket Ball","A rolling basket ball! You can hit it all day long!");
                                //Select an item on page 4
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 0 scr_set_object(spr_road_loop,"Easy Loops - Road Loop-de-Loop","Place an entire road loop in one easy click!");
                               //Select an item on page 4 
                                if use_tile_menu_subpage = 5 and use_advanced_menu_page = 1 scr_set_object(spr_checkpoint_marker,"Checkpoint Marker","Creates a checkpoint when passed by!");
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 0 scr_set_object(spr_npc_axl_idle,"Axl","Axl, stirring up trouble! He is a mean-spirited, but well-meaning axolotl, which gets him into a lot of trouble. What's going on in that empty head of his? You decide!")
                                //Select an NPC
                                if use_tile_menu_subpage = 6 and use_actors_menu_page = 1 scr_set_object(spr_npc_libbie_dark_idle,"Libbie - Dark","Dark Libbie is here, at your service! As Savvy's office assistant, Libbie's little sister pulls in long hours to keep the machine of business of moving. Does she live in the office? It's up to you!")
                                //Trigger Highlighter
                                scr_set_highlighter(247,95,280,128)
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                            }
                        
                    }
                //Check If We Should 
                //Check Quick Tools
                if device_mouse_x_to_gui(0) &gt;= 2 and device_mouse_x_to_gui(0) &lt;= 55
                and use_tile_menu_subpage &gt; 0
                    {
                        //Row 1
                        if device_mouse_y_to_gui(0) &gt;= 165 and device_mouse_y_to_gui(0) &lt;= 178
                            {
                                //Alt Weapon
                                if device_mouse_x_to_gui(0) &gt;= 8 and device_mouse_x_to_gui(0) &lt;= 21
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_mod_chip_detonate,"Mod Chip - Detonator","Makes enemies explode when jumped on!");
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_gem,"Gem Crystal","Pickup that grants additional stamina!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(8,165,21,178)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                                //Speed
                                if device_mouse_x_to_gui(0) &gt;= 22 and device_mouse_x_to_gui(0) &lt;= 35
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_mod_chip_speed,"Mod Chip - Speed","Increases an enemy's default movement and attack speed!");
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_petal_flower,"Petal Flower","Grants 2HP when collected!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(22,165,35,178)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                                //Health
                                if device_mouse_x_to_gui(0) &gt;= 36 and device_mouse_x_to_gui(0) &lt;= 49
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_mod_chip_health,"Mod Chip - Health","Increases an enemy's health capacity!");
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_keycard,"Key Card","Collect these cards to open key card doors!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(36,165,49,178)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                            }
                        //Row 2
                        if device_mouse_y_to_gui(0) &gt;= 179 and device_mouse_y_to_gui(0) &lt;= 192
                            {
                                if device_mouse_x_to_gui(0) &gt;= 8 and device_mouse_x_to_gui(0) &lt;= 21
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_mod_chip_extra_large,"Mod Chip - Extra Large","Increases an enemy's size!");
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_crystal_gem_flower,"Gem Flower","Sprouts with several gems when attacked!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(8,179,21,192)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                                
                                if device_mouse_x_to_gui(0) &gt;= 22 and device_mouse_x_to_gui(0) &lt;= 35
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_mod_chip_bomb,"Mod Chip - Bomb","Makes enemies explode when they lose all of their HP!");
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_health_petal_flower,"Petal Flower","Sprouts with several petal flowers when attacked!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(22,179,35,192)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 36 and device_mouse_x_to_gui(0) &lt;= 49
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_mod_chip_spring,"Mod Chip - Spring","Makes enemies bouncy when colliding with them, like mega cubes!");
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_crate_0_copy,"Crate","A simple crate that spawns several gems when broken!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(36,179,49,192)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                            }
                        //Row 3
                        if device_mouse_y_to_gui(0) &gt;= 193 and device_mouse_y_to_gui(0) &lt;= 206
                            {
                                if device_mouse_x_to_gui(0) &gt;= 8 and device_mouse_x_to_gui(0) &lt;= 21
                                    {
                                        if use_tile_menu_subpage = 2 {user_cursor_display_mode = 0; user_tile_selected = tile_layer_changer; user_layer_selected = surface_flags; user_layer_iteration = 4; user_grid_offset_x = 0; user_grid_offset_y = 0; use_item_description = "Enemy Reverse Course"; use_item_aspect_ratio = 1 use_item_offset_x = 0 use_item_offset_y = 0;
                                        scr_change_aspect_ratio_preview(user_tile_selected)}
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_chibililac_cage,"1up Fairy","Grants the player an additional life when caught!")
                                        //Trigger Highlighter
                                        scr_set_highlighter(8,193,21,206)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 22 and device_mouse_x_to_gui(0) &lt;= 35
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_enemy_delete_wall,"Enemy Delete Wall","Enemies explode when they touch this type of wall!")
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_gascan_0_copy,"Gas Can","Grants Carol her bike if touched; also an explosive pickup for Milla!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(22,193,35,206)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 36 and device_mouse_x_to_gui(0) &lt;= 49
                                    {
                                        if use_tile_menu_subpage = 2 scr_set_object(spr_enemy_charge_floor,"Enemy Recharge Floor","Enemies slowly recharge their health as they stand on, or rove across, this type of floor!")
                                        if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2 scr_set_object(spr_target,"Brass Target","Used for 'Hit the Targets' stages, or as a goal post in 'Reach the Target' stages!");
                                        //Trigger Highlighter
                                        scr_set_highlighter(36,193,49,206)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                    }
                            }
                    }
                //Check Sub Menu Part 1
                if device_mouse_x_to_gui(0) &gt;= 63 and device_mouse_x_to_gui(0) &lt;= 178
                    {
                        //Check Tiles
                        if device_mouse_y_to_gui(0) &gt;= 156 and device_mouse_y_to_gui(0) &lt;= 175
                            {
                                use_tile_menu_subpage = 0
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(63,156,178,175)
                            }
                        //Check Items
                        if  device_mouse_y_to_gui(0) &gt;= 176 and device_mouse_y_to_gui(0) &lt;= 194
                            {
                                use_tile_menu_subpage = 1
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(63,176,178,194)
                            }
                        //Check Springs
                        if device_mouse_y_to_gui(0) &gt;= 195 and device_mouse_y_to_gui(0) &lt;= 213
                            {
                                use_tile_menu_subpage = 3
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(63,195,178,213)
                            }
                        //Check Actors
                        if  device_mouse_y_to_gui(0) &gt;= 214 and device_mouse_y_to_gui(0) &lt;= 232
                            {
                                use_tile_menu_subpage = 6
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(63,214,178,232)
                            }
                    }
                //Check Sub Menu Part 2
                if device_mouse_x_to_gui(0) &gt;= 189 and device_mouse_x_to_gui(0) &lt;= 304
                    {
                        //Check Gimmicks
                        if device_mouse_y_to_gui(0) &gt;= 156 and device_mouse_y_to_gui(0) &lt;= 175
                            {
                                use_tile_menu_subpage = 4
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(189,156,304,175)
                            }
                        //Check Enemies
                        if  device_mouse_y_to_gui(0) &gt;= 176 and device_mouse_y_to_gui(0) &lt;= 194
                            {
                                use_tile_menu_subpage = 2
                                use_enemy_menu_page = 0
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(189,176,304,194)
                            }
                        //Check Advanced
                        if device_mouse_y_to_gui(0) &gt;= 195 and device_mouse_y_to_gui(0) &lt;= 213
                            {
                                use_tile_menu_subpage = 5
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(189,195,304,213)
                            }
                        //Check Bosses
                        if  device_mouse_y_to_gui(0) &gt;= 214 and device_mouse_y_to_gui(0) &lt;= 232
                            {
                                use_tile_menu_subpage = 2
                                use_enemy_menu_page = 1
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(189,214,304,232)
                            }
                    }
                var background_selector_prevent_exit = 0;
                //Check Stamp Selector (Maximize)
                if (device_mouse_x_to_gui(0) &gt;= 323 and device_mouse_x_to_gui(0) &lt;= 412
                and device_mouse_y_to_gui(0) &gt;= 158 and device_mouse_y_to_gui(0) &lt;= 175)
                and use_stamp_state = 1 and use_tile_menu_cool_down = 0 and use_tile_menu_subpage = 0
                    {
                        use_stamp_state = 0
                        use_tile_menu_cool_down = 8
                        background_selector_prevent_exit = 1
                        audio_play_sound(pause_select,50,false)
                        scr_set_highlighter(323,158,412,175)
                    }
                //Check Stamp Selector (Minimize)
                if (device_mouse_x_to_gui(0) &gt;= 323 and device_mouse_x_to_gui(0) &lt;= 412
                and device_mouse_y_to_gui(0) &gt;= 158 and device_mouse_y_to_gui(0) &lt;= 217)
                and use_stamp_state = 0 and use_tile_menu_cool_down = 0 and use_tile_menu_subpage = 0
                    {
                        if device_mouse_y_to_gui(0) &lt;= 175
                            {
                                use_stamp_state = 1;
                                audio_play_sound(pause_select,50,false)
                                scr_set_highlighter(323,158,412,175)
                            }
                        use_tile_menu_cool_down = 8
                        background_selector_prevent_exit = 1
                    }
                //Check Background Selector (Minimized)
                if (device_mouse_x_to_gui(0) &gt;= 321 and device_mouse_x_to_gui(0) &lt;= 416
                and device_mouse_y_to_gui(0) &gt;= 228 and device_mouse_y_to_gui(0) &lt;= 239)
                and use_bg_selector_minimize = 1 and use_tile_menu_cool_down = 0
                    {
                        use_bg_selector_minimize = 0
                        use_tile_menu_cool_down = 8
                        background_selector_prevent_exit = 1
                        audio_play_sound(pause_select,50,false)
                        scr_set_highlighter(321,228,416,239)
                    }
                //Check Background Selector (Restored)
                if (device_mouse_x_to_gui(0) &gt;= 321 and device_mouse_x_to_gui(0) &lt;= 416
                and device_mouse_y_to_gui(0) &gt;= 52 and device_mouse_y_to_gui(0) &lt;= 118)
                and use_bg_selector_minimize = 0 and use_tile_menu_cool_down = 0
                    {
                        background_selector_prevent_exit = 1
                        //Check Minimize Button
                        if (device_mouse_x_to_gui(0) &gt;= 401 and device_mouse_x_to_gui(0) &lt;= 410
                        and device_mouse_y_to_gui(0) &gt;= 52 and device_mouse_y_to_gui(0) &lt;= 64)
                            {
                                use_bg_selector_minimize = 1
                                use_tile_menu_cool_down = 8
                                background_selector_prevent_exit = 1
                                audio_play_sound(pause_select,50,false)
                                scr_set_highlighter(401,56,410,60)
                            }
                        var use_background_confirm = 0;
                        //Check Row 1
                        if device_mouse_y_to_gui(0) &gt;= 72 and device_mouse_y_to_gui(0) &lt;= 83
                            {
                                if device_mouse_x_to_gui(0) &gt;= 325 and device_mouse_x_to_gui(0) &lt;= 336
                                    {
                                        use_background = 0; use_background_confirm = 1; scr_set_highlighter(325,72,336,83);
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 340 and device_mouse_x_to_gui(0) &lt;= 352
                                    {
                                        use_background = 1; use_background_confirm = 1; scr_set_highlighter(340,72,352,83)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 355 and device_mouse_x_to_gui(0) &lt;= 366
                                    {
                                        use_background = 2; use_background_confirm = 1; scr_set_highlighter(355,72,366,83);
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 370 and device_mouse_x_to_gui(0) &lt;= 381
                                    {
                                        use_background = 3; use_background_confirm = 1; scr_set_highlighter(370,72,381,83);
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 385 and device_mouse_x_to_gui(0) &lt;= 396
                                    {
                                        use_background = 4; use_background_confirm = 1; scr_set_highlighter(385,72,396,83);
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 400 and device_mouse_x_to_gui(0) &lt;= 411
                                    {
                                        use_background = 5; use_background_confirm = 1; scr_set_highlighter(400,72,411,83)
                                    }
                            }
                        //Check Row 2
                        if device_mouse_y_to_gui(0) &gt;= 87 and device_mouse_y_to_gui(0) &lt;= 98
                            {
                                if device_mouse_x_to_gui(0) &gt;= 325 and device_mouse_x_to_gui(0) &lt;= 336
                                    {
                                        use_background = 6; use_background_confirm = 1; scr_set_highlighter(325,87,336,98)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 340 and device_mouse_x_to_gui(0) &lt;= 352
                                    {
                                        use_background = 7; use_background_confirm = 1; scr_set_highlighter(340,87,352,98)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 355 and device_mouse_x_to_gui(0) &lt;= 366
                                    {
                                        use_background = 8; use_background_confirm = 1; scr_set_highlighter(355,87,366,98)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 370 and device_mouse_x_to_gui(0) &lt;= 381
                                    {
                                        use_background = 10; use_background_confirm = 1; scr_set_highlighter(370,87,381,98)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 385 and device_mouse_x_to_gui(0) &lt;= 396
                                    {
                                        use_background = 11; use_background_confirm = 1; scr_set_highlighter(385,87,396,98)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 400 and device_mouse_x_to_gui(0) &lt;= 411
                                    {
                                        use_background = 9; use_background_confirm = 1; scr_set_highlighter(400,87,411,98);
                                    }
                            }
                        //Check Row 3
                        if device_mouse_y_to_gui(0) &gt;= 102 and device_mouse_y_to_gui(0) &lt;= 113
                            {
                                if device_mouse_x_to_gui(0) &gt;= 325 and device_mouse_x_to_gui(0) &lt;= 336
                                    {
                                        use_background = 12; use_background_confirm = 1; scr_set_highlighter(325,102,336,113);
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 340 and device_mouse_x_to_gui(0) &lt;= 352
                                    {
                                        use_background = 13; use_background_confirm = 1; scr_set_highlighter(340,102,352,113);
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 355 and device_mouse_x_to_gui(0) &lt;= 366
                                    {
                                        use_background = 14; use_background_confirm = 1; scr_set_highlighter(355,102,366,113);
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 370 and device_mouse_x_to_gui(0) &lt;= 381
                                    {
                                        use_background = 15; use_background_confirm = 1; scr_set_highlighter(370,102,381,113)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 385 and device_mouse_x_to_gui(0) &lt;= 396
                                    {
                                        use_background = 16; use_background_confirm = 1; scr_set_highlighter(385,102,396,113)
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 400 and device_mouse_x_to_gui(0) &lt;= 411
                                    {
                                        use_background = 17; use_background_confirm = 1; scr_set_highlighter(400,102,411,113);
                                    }
                            }
                        if use_background_confirm = 1
                            {
                                scr_set_background()
                                audio_play_sound(pause_select,50,false)
                            }
                    }
                //Check Exit
                if device_mouse_x_to_gui(0) &gt;= 314 and device_mouse_x_to_gui(0) &lt;= 425
                    {
                        if background_selector_prevent_exit = 0
                            {
                                use_tile_menu = 0
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(snd_turn_page,50,false)
                            }
                    }
                //Clear NPC Clipboard if a tile was selected
                if user_cursor_display_mode = 0 and npc_clipboard_dialog_active = 1
                    {
                        npc_clipboard_dialog_active = 0
                        scr_set_message("NPC clipboard cleared!");
                    }
            }
        //Check the quit menu's items
        if use_tile_menu = 2 and use_tile_menu_cool_down = 0
            {
                //Return To The Titlescreen
                if (device_mouse_x_to_gui(0) &gt;= 70 and device_mouse_x_to_gui(0) &lt;= 111
                and device_mouse_y_to_gui(0) &gt;= 146 and device_mouse_y_to_gui(0) &lt;= 161)
                    {
                        audio_play_sound(pause_exit,50,false)
                        parent.transition_active = 1
                        use_tile_menu_cool_down = 256
                        depth = -5
                        parent.use_maps_load = 0
                        parent.use_maps_current_map = 0
                        parent.use_maps_overwrite_protection = 0
                        use_write_reserve_string_stage_name = ""
                        use_write_reserve_string_architect = ""
                        use_write_reserve_string_description = ""
                        //Disable Carol's Bike Sounds If They Were Still Playing
                        audio_stop_sound(carol_bike_idle)
                        audio_stop_sound(carol_bike_moving)
                        audio_stop_sound(carol_bike_skidding)
                    }
                //Check Exit
                if (device_mouse_x_to_gui(0) &gt;= 314)
                or (device_mouse_x_to_gui(0) &gt;= 211 and device_mouse_x_to_gui(0) &lt;= 241
                and device_mouse_y_to_gui(0) &gt;= 146 and device_mouse_y_to_gui(0) &lt;= 160)
                    {
                        use_tile_menu = 0
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(snd_turn_page,50,false)
                    }
            } 
        //Check the open menu's items
        if use_tile_menu = 3 and use_tile_menu_cool_down = 0
            {
                //Check Menu Items
                if device_mouse_x_to_gui(0) &gt;= 28 and device_mouse_x_to_gui(0) &lt;= 272
                    {
                        //Click Menu Item 1
                        if (device_mouse_y_to_gui(0) &gt;= 81 and device_mouse_y_to_gui(0) &lt;= 95)
                            {
                                //Set File Selection
                                use_maps_select = use_maps_files[use_maps_page,0]
                                //Set Highlight Position
                                use_maps_highlight_y = 94
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(28,81,273,95)
                            }
                        //Click Menu Item 2
                        if (device_mouse_y_to_gui(0) &gt;= 96 and device_mouse_y_to_gui(0) &lt;= 110)
                            {
                                //Set File Selection
                                use_maps_select = use_maps_files[use_maps_page,1]
                                //Set Highlight Position
                                use_maps_highlight_y = 109
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(28,96,273,110)
                            }
                        //Click Menu Item 3
                        if (device_mouse_y_to_gui(0) &gt;= 111 and device_mouse_y_to_gui(0) &lt;= 125)
                            {
                                //Set File Selection
                                use_maps_select = use_maps_files[use_maps_page,2]
                                //Set Highlight Position
                                use_maps_highlight_y = 124
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(28,111,273,125)
                            }
                        //Click Menu Item 4
                        if (device_mouse_y_to_gui(0) &gt;= 126 and device_mouse_y_to_gui(0) &lt;= 140)
                            {
                                //Set Highlight Position
                                use_maps_highlight_y = 139
                                //Set File Selection
                                use_maps_select = use_maps_files[use_maps_page,3]
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(28,126,273,140)
                            }
                        //Click Menu Item 5
                        if (device_mouse_y_to_gui(0) &gt;= 141 and device_mouse_y_to_gui(0) &lt;= 155)
                            {
                                //Set File Selection
                                use_maps_select = use_maps_files[use_maps_page,4]
                                //Set Highlight Position
                                use_maps_highlight_y = 154
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(28,141,273,155)
                            }
                    }
                //Click Scollbar Button (Up)
                if (device_mouse_x_to_gui(0) &gt;= 281 and device_mouse_x_to_gui(0) &lt;= 290
                and device_mouse_y_to_gui(0) &gt;= 77  and device_mouse_y_to_gui(0) &lt;= 90)
                    {
                        use_maps_page -= 1
                        if use_maps_page &lt; 0 use_maps_page = 0;
                        //Update Currently Listed Maps
                        use_maps_map[0] = use_maps_files[use_maps_page,0]
                        use_maps_map[1] = use_maps_files[use_maps_page,1]
                        use_maps_map[2] = use_maps_files[use_maps_page,2]
                        use_maps_map[3] = use_maps_files[use_maps_page,3]
                        use_maps_map[4] = use_maps_files[use_maps_page,4]
                        //Move scrollbar upwards
                        use_scrollbar_position -= use_scrollbar_speed
                        //Keep the boundaries of the scrollbar in check
                        if use_scrollbar_position &lt; 95 use_scrollbar_position = 95;
                        //Disable Highlighter
                        use_maps_highlight_y = -1
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(281,77,291,90)
                    }
                //Click Scollbar Button (Down)
                if (device_mouse_x_to_gui(0) &gt;= 281 and device_mouse_x_to_gui(0) &lt;= 290
                and device_mouse_y_to_gui(0) &gt;= 145 and device_mouse_y_to_gui(0) &lt;= 158)
                    {
                        use_maps_page += 1
                        if use_maps_page &gt; use_maps_pages use_maps_page = use_maps_pages;
                        //Update Currently Listed Maps
                        use_maps_map[0] = use_maps_files[use_maps_page,0]
                        use_maps_map[1] = use_maps_files[use_maps_page,1]
                        use_maps_map[2] = use_maps_files[use_maps_page,2]
                        use_maps_map[3] = use_maps_files[use_maps_page,3]
                        use_maps_map[4] = use_maps_files[use_maps_page,4]
                        //Move scrollbar downwards
                        use_scrollbar_position += use_scrollbar_speed
                        //Keep the boundaries of the scrollbar in check
                        if use_scrollbar_position &gt; 133 use_scrollbar_position = 133;
                        //Disable Highlighter
                        use_maps_highlight_y = -1
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(281,145,291,158)
                    }
                //Load Stage
                if (device_mouse_x_to_gui(0) &gt;= 68  and device_mouse_x_to_gui(0) &lt;= 127
                and device_mouse_y_to_gui(0) &gt;= 165 and device_mouse_y_to_gui(0) &lt;= 180)
                and use_maps_select!="..."
                    {
                        //Send the main logic object map data for loading
                        parent.use_maps_x = view_xview[view_port]
                        parent.use_maps_y = view_yview[view_port]
                        parent.use_maps_select = use_maps_select
                        parent.use_maps_load = 1
                        //Reset multimap counter
                        parent.use_maps_current_map = 0
                        parent.use_maps_overwrite_protection = 0
                        //Disable Carol's Bike Sounds If They Were Still Playing
                        audio_stop_sound(carol_bike_idle)
                        audio_stop_sound(carol_bike_moving)
                        audio_stop_sound(carol_bike_skidding)
                        //Clear previous map data by restarting the room
                        scr_set_message("Now loading...")
                        use_loading_screen = 2
                        use_write_keyboard_string_stage_name = ""
                        use_write_keyboard_string_architect = ""
                        use_write_keyboard_string_description = ""
                        use_write_reserve_string_stage_name = ""
                        use_write_reserve_string_architect = ""
                        use_write_reserve_string_description = ""
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                    }
                //Check Exit
                if (device_mouse_x_to_gui(0) &gt;= 314)
                or (device_mouse_x_to_gui(0) &gt;= 160 and device_mouse_x_to_gui(0) &lt;= 239
                and device_mouse_y_to_gui(0) &gt;= 165 and device_mouse_y_to_gui(0) &lt;= 180)
                    {
                        use_tile_menu = 0
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(snd_turn_page,50,false)
                    }
            }
        //Check the save menu's items
        if use_tile_menu = 4 and use_tile_menu_cool_down = 0
            {
                //Click Stage Name Dialogue Box
                if (device_mouse_x_to_gui(0) &gt;= 55 and device_mouse_x_to_gui(0) &lt;= 254
                and device_mouse_y_to_gui(0) &gt;= 90 and device_mouse_y_to_gui(0) &lt;= 107)
                    {
                        use_write_keyboard_string_active_string = 0
                        use_keyboard_active = 1
                        keyboard_string = ""
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(55,90,254,107)
                    }
                //Click Description Dialogue Box
                if (device_mouse_x_to_gui(0) &gt;= 12  and device_mouse_x_to_gui(0) &lt;= 150
                and device_mouse_y_to_gui(0) &gt;= 134 and device_mouse_y_to_gui(0) &lt;= 168)
                    {
                        use_write_keyboard_string_active_string = 1
                        use_keyboard_active = 1
                        keyboard_string = ""
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(12,134,150,168)
                    }
                //Click Architect Dialogue Box
                if (device_mouse_x_to_gui(0) &gt;= 184 and device_mouse_x_to_gui(0) &lt;= 298
                and device_mouse_y_to_gui(0) &gt;= 135 and device_mouse_y_to_gui(0) &lt;= 152)
                    {
                        use_write_keyboard_string_active_string = 2
                        use_keyboard_active = 1
                        keyboard_string = ""
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(184,135,298,152)
                    }
                //Click Okay
                if (device_mouse_x_to_gui(0) &gt;= 70  and device_mouse_x_to_gui(0) &lt;= 129
                and device_mouse_y_to_gui(0) &gt;= 178 and device_mouse_y_to_gui(0) &lt;= 193)
                    {
                        //Trigger Write Process If A Stage Name Was Provided
                        if use_write_keyboard_string_stage_name != ""
                        //And If There Are More Tiles Than None
                        and tile_get_count() &gt; 0
                            {
                                use_tile_menu = 0
                                use_tile_menu_cool_down = 8
                                //Trigger Write Process
                                use_write_delay = 1
                                parent.use_write_delay = 1
                                use_keyboard_active = 0
                                scr_set_message("Saving... please wait!")
                                use_write_keyboard_string_active_string = -1
                                //Set A Stage Name If The Spacebar Was Pressed Accidentally
                                if use_write_keyboard_string_stage_name = ""
                                or use_write_keyboard_string_stage_name = " "
                                or use_write_keyboard_string_stage_name = "  "
                                or use_write_keyboard_string_stage_name = "   "
                                or use_write_keyboard_string_stage_name = "    "
                                or use_write_keyboard_string_stage_name = "     "
                                or use_write_keyboard_string_stage_name = "      "
                                or use_write_keyboard_string_stage_name = "       "
                                or use_write_keyboard_string_stage_name = "        "
                                or use_write_keyboard_string_stage_name = "         "
                                or use_write_keyboard_string_stage_name = "          "
                                or use_write_keyboard_string_stage_name = "           "
                                or use_write_keyboard_string_stage_name = "            "
                                or use_write_keyboard_string_stage_name = "             "
                                or use_write_keyboard_string_stage_name = "              "
                                or use_write_keyboard_string_stage_name = "               "
                                or use_write_keyboard_string_stage_name = "                "
                                   use_write_keyboard_string_stage_name = "Lilac's Treehouse";
                                //Set An Architect Name If One Wasn't Provided
                                if use_write_keyboard_string_architect = "" use_write_keyboard_string_architect = "Ms. Heropants";
                                use_write_reserve_string_stage_name = use_write_keyboard_string_stage_name
                                use_write_reserve_string_architect = use_write_keyboard_string_architect
                                use_write_reserve_string_description = use_write_keyboard_string_description
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                            }
                        //Play Parrying Sound If A Stage Name Wasn't Provided
                        else
                            {
                                scr_set_message("No stage name was provided, or no tiles were present")
                            }
                    }

                //Check Exit
                if (device_mouse_x_to_gui(0) &gt;= 314)
                or (device_mouse_x_to_gui(0) &gt;= 162 and device_mouse_x_to_gui(0) &lt;= 241
                and device_mouse_y_to_gui(0) &gt;= 178 and device_mouse_y_to_gui(0) &lt;= 193)
                    {
                        use_tile_menu = 0
                        use_tile_menu_cool_down = 8
                        use_keyboard_active = 0
                        use_write_keyboard_string_active_string = -1
                        //Play menu sound
                        audio_play_sound(snd_turn_page,50,false)
                    }
            }
        //Check the new canvas menu's items
        if use_tile_menu = 5 and use_tile_menu_cool_down = 0
            {
                //Reset Canvas
                if (device_mouse_x_to_gui(0) &gt;= 70 and device_mouse_x_to_gui(0) &lt;= 111
                and device_mouse_y_to_gui(0) &gt;= 160 and device_mouse_y_to_gui(0) &lt;= 177)
                    {
                        use_write_reserve_string_stage_name = ""
                        use_write_reserve_string_architect = ""
                        use_write_reserve_string_description = ""
                        view_xview[view_port] = 0
                        view_yview[view_port] = 0
                        use_cursor_x = 0
                        use_cursor_y = 0
                        scr_stop_music()
                        audio_play_sound(ost_titlescreen_aqua_surface_woofle,50,true)
                        if parent.use_maps_current_map &gt; 0
                            {
                                scr_set_message("New stage started.")
                                scr_set_message("Unsaved multi-map data cleared.")
                            }
                        parent.use_maps_current_map = 0
                        parent.use_maps_overwrite_protection = 0
                        use_write_keyboard_string_stage_name = ""
                        use_write_keyboard_string_architect = ""
                        use_write_keyboard_string_description = ""
                        use_write_reserve_string_stage_name = ""
                        use_write_reserve_string_architect = ""
                        use_write_reserve_string_description = ""
                        
                        //Adjust Current Song's Volume
                        if parent.music_mute = 0 scr_adjust_music_silent(parent.music_volume/100,1000);
                        else scr_adjust_music_silent(0,1000);
                        //Clear previous map data by restarting the room
                        room_restart()
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                    }
                //Check Exit
                if (device_mouse_x_to_gui(0) &gt;= 314)
                or (device_mouse_x_to_gui(0) &gt;= 211 and device_mouse_x_to_gui(0) &lt;= 241
                and device_mouse_y_to_gui(0) &gt;= 160 and device_mouse_y_to_gui(0) &lt;= 177)
                    {
                        use_tile_menu = 0
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(snd_turn_page,50,false)
                    }
            }
        //Check the sidebar's on-screen buttons
        if use_tile_menu = 0 and use_tile_menu_cool_down = 0
            {
                //Check the hamburger button
                if  device_mouse_x_to_gui(0) &gt;= 315+u_elements and device_mouse_x_to_gui(0) &lt;= 333+u_elements
                and device_mouse_y_to_gui(0) &gt;= 4 and device_mouse_y_to_gui(0) &lt;= 16
                and use_file_menu = 0 and use_tile_menu_cool_down = 0 and u_elements = 0 and user_cursor_mode = 0
                    {
                        use_file_menu = 1
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(319,4,333,19)
                    }
                //Check the debug button
                if  device_mouse_x_to_gui(0) &gt;= 405+u_elements and device_mouse_x_to_gui(0) &lt;= 419+u_elements
                and device_mouse_y_to_gui(0) &gt;= 219 and device_mouse_y_to_gui(0) &lt;= 233
                and use_file_menu = 0 and use_tile_menu_cool_down = 0 and u_elements = 0 and user_cursor_mode = 0
                    {
                        use_debug_hud_mode += 1
                        if use_debug_hud_mode &gt; 1 use_debug_hud_mode = 0;
                        switch(use_debug_hud_mode)
                            {
                                case 0: {scr_set_message("Debug Elements Disabled!"); break;}
                                case 1: {scr_set_message("Debug Elements Enabled!"); break;}
                            }
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(character_parry,50,false)
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(405,219,419,233)
                    }
                //Check the back button
                if  device_mouse_x_to_gui(0) &gt;= 315 and device_mouse_x_to_gui(0) &lt;= 333
                and device_mouse_y_to_gui(0) &gt;= 4   and device_mouse_y_to_gui(0) &lt;= 20
                and use_file_menu != 0 and use_tile_menu_cool_down = 0
                    {
                        if use_file_menu = 1 use_file_menu = 0;
                        if use_file_menu = 2 use_file_menu = 0;
                        if use_file_menu = 3 use_file_menu = 1;
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(319,4,333,19)
                    }
                //Check the scroll buttons (Up)
                if ((device_mouse_x_to_gui(0) &gt;= 353 and device_mouse_x_to_gui(0) &lt;= 386
                and device_mouse_y_to_gui(0) &gt;= 224 and device_mouse_y_to_gui(0) &lt;= 237)
                or (device_mouse_x_to_gui(0) &gt;= 413 and device_mouse_x_to_gui(0) &lt;= 424
                and device_mouse_y_to_gui(0) &gt;= 19  and device_mouse_y_to_gui(0) &lt;= 34))
                and (use_file_menu = 3 and use_tile_menu_cool_down = 0)
                    {
                        use_file_menu = 1
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        if device_mouse_y_to_gui(0) &gt;= 224 and device_mouse_y_to_gui(0) &lt;= 237
                            scr_set_highlighter(353,224,386,237);
                        if device_mouse_y_to_gui(0) &gt;= 19  and device_mouse_y_to_gui(0) &lt;= 34
                            scr_set_highlighter(413,19,424,34);
                    }
                //Check the scroll buttons (Down)
                if ((device_mouse_x_to_gui(0) &gt;= 353 and device_mouse_x_to_gui(0) &lt;= 386
                and device_mouse_y_to_gui(0) &gt;= 224 and device_mouse_y_to_gui(0) &lt;= 237)
                or (device_mouse_x_to_gui(0) &gt;= 418 and device_mouse_x_to_gui(0) &lt;= 424
                and device_mouse_y_to_gui(0) &gt;= 203 and device_mouse_y_to_gui(0) &lt;= 218))
                and (use_file_menu = 1 and use_tile_menu_cool_down = 0)
                    {
                        use_file_menu = 3
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        if device_mouse_y_to_gui(0) &gt;= 224 and device_mouse_y_to_gui(0) &lt;= 237
                            scr_set_highlighter(353,224,386,237);
                        if device_mouse_y_to_gui(0) &gt;= 203 and device_mouse_y_to_gui(0) &lt;= 218
                            scr_set_highlighter(413,203,424,218);
                    }
                //Check the exit button
                if  device_mouse_x_to_gui(0) &gt;= 401+u_elements and device_mouse_x_to_gui(0) &lt;= 421+u_elements
                and device_mouse_y_to_gui(0) &gt;= 4   and device_mouse_y_to_gui(0) &lt;= 18
                and use_file_menu = 0 and use_file_menu = 0
                    {
                        use_tile_menu = 2
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(405,4,419,18)
                    }
                //Check the play test debug buttons
                if user_cursor_mode = 1
                    {
                        //Change controller slot -
                        if  device_mouse_x_to_gui(0) &gt;= 326+u_elements and device_mouse_x_to_gui(0) &lt;= 345+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 160 and device_mouse_y_to_gui(0) &lt;= 178
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                scr_set_controller_slot_f3();
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(326,160,345,178)
                            }
                        //Change controller slot +
                        if  device_mouse_x_to_gui(0) &gt;= 348+u_elements and device_mouse_x_to_gui(0) &lt;= 366+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 160 and device_mouse_y_to_gui(0) &lt;= 178
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                scr_set_controller_slot_f4();
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(348,160,366,178)
                            }
                        //Change controller type
                        if  device_mouse_x_to_gui(0) &gt;= 370+u_elements and device_mouse_x_to_gui(0) &lt;= 388+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 160 and device_mouse_y_to_gui(0) &lt;= 178
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                scr_set_controller_type_f6();
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(370,160,388,178)
                            }
                        //Change window size
                        if  device_mouse_x_to_gui(0) &gt;= 392+u_elements and device_mouse_x_to_gui(0) &lt;= 410+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 160 and device_mouse_y_to_gui(0) &lt;= 178
                        and use_file_menu = 0 and use_tile_menu_cool_down = 0 and u_elements = 0 and user_cursor_mode = 1
                            {
                                scr_set_resize_game_window_f7();
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(392,160,410,178)
                            }
                        //Change vsync
                        if  device_mouse_x_to_gui(0) &gt;= 326+u_elements and device_mouse_x_to_gui(0) &lt;= 345+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 182 and device_mouse_y_to_gui(0) &lt;= 200
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                scr_set_vsync_f8();
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(326,182,345,200)
                            }
                        //Set button overlay
                        if  device_mouse_x_to_gui(0) &gt;= 348+u_elements and device_mouse_x_to_gui(0) &lt;= 366+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 182 and device_mouse_y_to_gui(0) &lt;= 200
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                scr_set_controller_overlay_f9();
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(348,182,366,200)
                            }
                        //Change zoom level
                        if  device_mouse_x_to_gui(0) &gt;= 370+u_elements and device_mouse_x_to_gui(0) &lt;= 388+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 182 and device_mouse_y_to_gui(0) &lt;= 200
                        and use_tile_menu_cool_down = 0 and u_elements = 0 and parent.pause = 0 
                            {
                                use_zoom_position_toggle -= 1
                                scr_clear_zoom_level()
                                if use_zoom_position_toggle &lt; 0 use_zoom_position_toggle = 8;
                                switch(use_zoom_position_toggle)
                                    {
                                        case 0: {use_zoom_position = 8; break;}
                                        case 1: {use_zoom_position = 7; break;}
                                        case 2: {use_zoom_position = 3; break;}
                                        case 3: {use_zoom_position = 2; break;}
                                        case 4: {use_zoom_position = 1; break;}
                                        case 5: {use_zoom_position = 0; break;}
                                        case 6: {use_zoom_position = 4; break;}
                                        case 7: {use_zoom_position = 5; break;}
                                        case 8: {use_zoom_position = 6; break;}
                                    }
                                scr_change_zoom_level()
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(370,182,388,200)
                            }
                        //Mute/unmute music
                        if  device_mouse_x_to_gui(0) &gt;= 392+u_elements and device_mouse_x_to_gui(0) &lt;= 410+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 182 and device_mouse_y_to_gui(0) &lt;= 200
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                scr_set_mute_or_unmute_music_f11();
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(392,182,410,200)
                            }
                        //Change mouse mode
                        if  device_mouse_x_to_gui(0) &gt;= 348+u_elements and device_mouse_x_to_gui(0) &lt;= 366+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 202 and device_mouse_y_to_gui(0) &lt;= 220
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                use_mouse_mode += 1
                                if use_mouse_mode &gt; 1
                                    use_mouse_mode = 0;
                                switch(use_mouse_mode)
                                    {
                                        case 0:
                                            {
                                                parent.joy_mouse_button_switch = 0
                                                parent.joy_mouse_button_timer = 0
                                                parent.joy_mouse_button_flash = 0
                                                parent.joy_mouse_button_alpha = 0
                                                parent.joy_mouse_button_counter = 0
                                                break;
                                            }
                                        case 1:
                                            {
                                                parent.joy_mouse_button_switch = 1
                                                parent.joy_mouse_button_timer = 0
                                                parent.joy_mouse_button_flash = 1
                                                parent.joy_mouse_button_alpha = 1
                                                parent.joy_mouse_button_counter = 0
                                                break;
                                            }
                                    }
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(348,202,366,220)
                            }
                        //Take Screenshot
                        if  device_mouse_x_to_gui(0) &gt;= 370+u_elements and device_mouse_x_to_gui(0) &lt;= 388+u_elements
                        and device_mouse_y_to_gui(0) &gt;= 202 and device_mouse_y_to_gui(0) &lt;= 220
                        and use_tile_menu_cool_down = 0 and u_elements = 0
                            {
                                scr_set_screenshot();
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(370,202,388,220)
                            }
                    }
                //Check the tile button
                if  device_mouse_x_to_gui(0) &gt;= 352+u_elements and device_mouse_x_to_gui(0) &lt;= 385+u_elements
                and device_mouse_y_to_gui(0) &gt;= 16  and device_mouse_y_to_gui(0) &lt;= 49
                and user_cursor_mode = 0 and use_file_menu = 0
                    {
                        use_tile_menu = 1
                        use_tile_menu_cool_down = 8
                        scr_change_page()
                        //Play menu sound
                        audio_play_sound(snd_turn_page,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(352,16,385,49)
                    }
                //Check the layer button
                if  device_mouse_x_to_gui(0) &gt;= 323+u_elements and device_mouse_y_to_gui(0) &gt;= 123+u_elements
                and device_mouse_x_to_gui(0) &lt;= 365 and device_mouse_y_to_gui(0) &lt;= 137
                and user_cursor_mode = 0 and use_file_menu = 0
                    {
                        if user_cursor_display_mode = 0
                            {
                                if use_tile_switching_mode = 1
                                    {
                                        //Increment Current Layer Depth Interation
                                        user_layer_iteration += 1
                                        //Reset Current Layer Depth Iteration If We Are Beyond Its Boundaries
                                        if user_layer_iteration &gt; 15 user_layer_iteration = 0;
                                        if user_layer_iteration &lt; 0  user_layer_iteration = 15;
                                        //Increment Current Layer Depth Based On Iteration Position
                                        switch(user_layer_iteration)
                                            {
                                                case 0:  {user_layer_selected = 0; break;}
                                                case 1:  {user_layer_selected = 1; break;}
                                                case 2:  {user_layer_selected = 100000; user_layer_iteration = 4; break;}
                                                case 3:  {user_layer_selected = 100000; user_layer_iteration = 4; break;}
                                                case 4:  {user_layer_selected = 100000; break;}
                                                case 5:  {user_layer_selected = 4; break;}
                                                case 6:  {user_layer_selected = 5; break;}
                                                case 7:  {user_layer_selected = 6; break;}
                                                case 8:  {user_layer_selected = 7; break;}
                                                case 9:  {user_layer_selected = 8; break;}
                                                case 10: {user_layer_selected = 9; break;}
                                                case 11: {user_layer_selected = -5; break;}
                                                case 12: {user_layer_selected = -4; break;}
                                                case 13: {user_layer_selected = -3; break;}
                                                case 14: {user_layer_selected = -2; break;}
                                                case 15: {user_layer_selected = -1; break;}
                                            }
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(323,123,365,137)
                                    }
                                else
                                    {
                                        audio_play_sound(character_parry,50,false)
                                        //Display Error Message
                                        scr_set_message("Cannot adjust layers while in auto-layer mode!")
                                    }
                            }
                        else
                            {
                                audio_play_sound(character_parry,50,false)
                                //Display Error Message
                                scr_set_message("Cannot adjust layer depth for objects!")
                            }
                    }
                //Check the snap button
                if  device_mouse_x_to_gui(0) &gt;= 384+u_elements and device_mouse_y_to_gui(0) &gt;= 123+u_elements
                and device_mouse_x_to_gui(0) &lt;= 413 and device_mouse_y_to_gui(0) &lt;= 137
                and user_cursor_mode = 0 and use_file_menu = 0
                    {
                        //Increment Current Grid Snap Size
                        user_grid_iteration += 1
                        if user_grid_iteration &gt; 3 user_grid_iteration = 0;
                        if user_grid_iteration &lt; 0 user_grid_iteration = 3;
                        //Increment Current Grid Snap Size Based On Iteration Position
                        switch(user_grid_iteration)
                            {
                                case 0: {user_grid_snap = 1; use_grid_toggle_size = ui_grid_2px; break;}
                                case 1: {user_grid_snap = 2; use_grid_toggle_size = ui_grid_2px; break;}
                                case 2: {user_grid_snap = 4; use_grid_toggle_size = ui_grid_4px; break;}
                                case 3: {user_grid_snap = 8; use_grid_toggle_size = ui_grid_8px; break;}
                            }
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(384,123,413,137)
                    }
                //Check the grid visibility button
                if  (device_mouse_x_to_gui(0) &gt;= 372+u_elements and device_mouse_y_to_gui(0) &gt;= 123
                and  device_mouse_x_to_gui(0) &lt;= 382+u_elements and device_mouse_y_to_gui(0) &lt;= 137)
                and use_file_menu = 0
                    {
                        if use_grid_toggle_iterator = 0
                            {
                                audio_play_sound(character_parry,50,false)
                                scr_set_message("Visual grid enabled")
                                grid_visible = 1
                            }
                        if use_grid_toggle_iterator = 1
                            {
                                audio_play_sound(character_parry,50,false)
                                scr_set_message("Visual grid disabled")
                                grid_visible = 0
                            }
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(372,123,382,137)
                        //Iterate Toggle
                        use_grid_toggle_iterator += 1
                        if use_grid_toggle_iterator &gt; 1 use_grid_toggle_iterator = 0;
                    }
                //Check the new canvas button
                if  device_mouse_x_to_gui(0) &gt;= 319 and device_mouse_y_to_gui(0) &gt;= 55
                and device_mouse_x_to_gui(0) &lt;= 418 and device_mouse_y_to_gui(0) &lt;= 70
                and user_cursor_mode = 0 and use_file_menu = 1
                    {
                        use_tile_menu = 5
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(319,55,418,70)
                        if parent.use_maps_current_map &gt; 0
                            {
                                scr_set_message("Multi-map stage detected!")
                                scr_set_message("Please save your data.")
                            }
                    }
                //Check the file button
                if  device_mouse_x_to_gui(0) &gt;= 319 and device_mouse_y_to_gui(0) &gt;= 71
                and device_mouse_x_to_gui(0) &lt;= 418 and device_mouse_y_to_gui(0) &lt;= 85
                and user_cursor_mode = 0 and use_file_menu = 1
                    {
                        use_tile_menu = 3
                        use_tile_menu_cool_down = 8
                        //Create The Maps Directory If It Doesn't Already Exist
                        nsfs_init()
                        if !directory_exists_ns(program_directory + "Maps") directory_create_ns(program_directory + "Maps");
                        //Clear Map Listings Array So Junk Entries Don't Bleed Into Refreshed Listings
                        use_maps_files = 0
                        use_maps_files[0] = "..."
                        use_maps_files[1] = "..."
                        use_maps_files[2] = "..."
                        use_maps_files[3] = "..."
                        use_maps_files[4] = "..."
                        //Create A List Of Every Map File In The Folder
                        use_maps_file = file_find_first_ns(program_directory + "\Maps\*.map")
                        var use_maps_iterate = 0
                        var use_maps_page_builder = 0
                        use_maps_pages = 0
                        while(use_maps_file != "")
                            {
                                if use_maps_page_builder = 5
                                    {
                                        use_maps_iterate = 0
                                        use_maps_pages += 1
                                        use_maps_page_builder = 0
                                    }
                                use_maps_files[use_maps_pages,use_maps_iterate] = use_maps_file
                                //show_debug_message(string(use_maps_file))
                                use_maps_file = file_find_next_ns()
                                use_maps_iterate += 1
                                use_maps_page_builder += 1
                                //Exit the loop if we can't find another map file, or have built up enough pages
                                if use_maps_file = "" or use_maps_pages &gt;= 40 break;
                            }
                        file_find_close_ns()
                        //Update Currently Listed Maps
                        use_maps_map[0] = use_maps_files[0,0]
                        use_maps_map[1] = use_maps_files[0,1]
                        use_maps_map[2] = use_maps_files[0,2]
                        use_maps_map[3] = use_maps_files[0,3]
                        use_maps_map[4] = use_maps_files[0,4]
                        //Create Blanks At The End Of The Last Page, In Case Not All Entries Of The Page Are Filled
                        use_maps_files[use_maps_pages,use_maps_iterate]   = "..."
                        use_maps_files[use_maps_pages,use_maps_iterate+1] = "..."
                        use_maps_files[use_maps_pages,use_maps_iterate+2] = "..."
                        use_maps_files[use_maps_pages,use_maps_iterate+3] = "..."
                        use_maps_files[use_maps_pages,use_maps_iterate+4] = "..."
                        use_maps_page = 0
                        //Scrollbar Position
                        use_scrollbar_position = 95
                        use_scrollbar_speed = 46/use_maps_pages
                        //Disable Highlighter
                        use_maps_highlight_y = -1
                        //show_debug_message(use_maps_pages)
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(319,71,418,85)
                        if parent.use_maps_current_map &gt; 0
                            {
                                scr_set_message("Multi-map stage detected!")
                                scr_set_message("Please save your data.")
                            }
                    }
                //Check the save button
                if  device_mouse_x_to_gui(0) &gt;= 319 and device_mouse_y_to_gui(0) &gt;= 86
                and device_mouse_x_to_gui(0) &lt;= 418 and device_mouse_y_to_gui(0) &lt;= 101
                and user_cursor_mode = 0 and use_file_menu = 1
                    {
                        if tile_get_count() &gt; user_tile_limit_warning_value
                            {
                                scr_set_message("Tile limit reached!  Remove tiles to optimize.")
                            }
                        else
                            {
                                if use_write_reserve_string_stage_name = ""
                                    {
                                        use_tile_menu = 4
                                        keyboard_string=""
                                        //Create The Maps Directory If It Doesn't Already Exist
                                        if !directory_exists_ns("Maps") directory_create_ns("Maps");
                                    }
                                else
                                    {
                                        //Trigger Write Process If A Stage Name Was Provided
                                        use_tile_menu = 0
                                        use_tile_menu_cool_down = 8
                                        //Trigger Write Process
                                        use_write_delay = 1
                                        parent.use_write_delay = 1
                                        use_keyboard_active = 0
                                        scr_set_message("Saving... please wait!")
                                        use_write_keyboard_string_active_string = -1
                                        //Set A Stage Name, Architect Name, And Description Based On Previously Obtained Information
                                        use_write_keyboard_string_stage_name = use_write_reserve_string_stage_name
                                        use_write_keyboard_string_architect = use_write_reserve_string_architect
                                        use_write_keyboard_string_description = use_write_reserve_string_description
                                    }
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(319,86,418,101)
                            }
                    }

                //Check the save as button
                if  device_mouse_x_to_gui(0) &gt;= 319 and device_mouse_y_to_gui(0) &gt;= 102
                and device_mouse_x_to_gui(0) &lt;= 418 and device_mouse_y_to_gui(0) &lt;= 117
                and user_cursor_mode = 0 and use_file_menu = 1
                    {
                        if parent.use_maps_current_map = 0
                            {
                                if tile_get_count() &gt; user_tile_limit_warning_value
                                    {
                                        scr_set_message("Tile limit reached!  Remove tiles to optimize.")
                                    }
                                else
                                    {
                                        use_tile_menu = 4
                                        keyboard_string=""
                                        //Create The Maps Directory If It Doesn't Already Exist
                                        if !directory_exists_ns("Maps") directory_create_ns("Maps");
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(319,102,418,117)
                                    }
                            }
                        else
                            scr_set_message("Sub-map names cannot be modified.");
                    }
                //Prevent play/edit buttons from conflicting with each other
                var user_play_edit_allow = 0;
                //Check the play button
                if  device_mouse_x_to_gui(0) &gt;= 323+u_elements and device_mouse_y_to_gui(0) &gt;= 142+u_elements
                and device_mouse_x_to_gui(0) &lt;= 365 and device_mouse_y_to_gui(0) &lt;= 156
                and parent.use_editor = 1 and (use_file_menu = 0  or use_file_menu = 2)
                and user_play_edit_allow = 0
                    {
                        parent.use_editor = 0
                        parent.use_menu = 0
                        parent.debug_hud = 0
                        parent.user_cursor_mode = 0
                        user_cursor_mode = 1
                        parent.gravity_ladder = 0
                        user_play_edit_allow = 1
                        parent.tile_surface_asset = 0
                        parent.tile_surface_id[5]=-1
                        parent.stamina = 0
                        parent.hurt[0] = 0
                        parent.hurt[1] = 0
                        parent.hurt[2] = 0
                        parent.hurt[3] = 0
                        parent.hurt_invuln = 39
                        parent.HUD_offset = -56
                        parent.speed_boosted_timer = 0
                        parent.hud_bar_asset = spr_hud_bar
                        parent.hud_bar_asset_alt = spr_hud_bar_alt
                        scr_set_rail_grinding_stop()
                        if !instance_exists(obj_player_spawner)
                            {
                                parent.px = view_xview[view_port]+(view_wview[view_port]/2)
                                parent.py = view_yview[view_port]+(view_hview[view_port]/2)+24
                            }
                        parent.anim_current = parent.anim_standing
                        //Reset Collision Sensors
                        scr_set_reset_collision_sensors();
                        //Set player health to the health petal modifier's parameter
                        parent.petals = use_health_petal_mod
                        //Prevent Milla from gaining more than four health petals
                        if parent.skin = spr_milla and parent.petals &gt; 10 parent.petals = 10;
                        if use_debug_hud_mode = 1
                            {
                                parent.debug_hud_sensors = 1
                                parent.joy_overlay = 1
                            }
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(323,142,365,156)
                    }
                //Check the edit button
                if  device_mouse_x_to_gui(0) &gt;= 323+u_elements and device_mouse_y_to_gui(0) &gt;= 142+u_elements
                and device_mouse_x_to_gui(0) &lt;= 365 and device_mouse_y_to_gui(0) &lt;= 156
                and parent.use_editor = 0
                and (use_file_menu = 0 or use_file_menu = 2)
                and user_play_edit_allow = 0
                    {
                        parent.use_editor = 1
                        parent.use_menu = 0
                        parent.debug_hud = 1
                        parent.user_cursor_mode = 1
                        user_cursor_mode = 0
                        parent.gravity_ladder = 0
                        user_play_edit_allow = 1
                        parent.debug_hud_sensors = 0
                        parent.joy_overlay = 0
                        parent.tile_surface_asset = 0
                        parent.HUD_offset = -56
                        parent.tile_surface_id[5]=-1
                        parent.hurt[0] = 0
                        parent.hurt[1] = 0
                        parent.hurt[2] = 0
                        parent.hurt[3] = 0
                        parent.hurt_invuln = 39
                        parent.stamina = 0
                        parent.shield_active = 0
                        parent.pause=0
                        parent.yy=0
                        parent.spring_timer = 0
                        parent.fling_timer=0
                        parent.fling_hsp=0
                        parent.fling_ver_timer = 0
                        parent.fling_vsp = 0
                        parent.Jpause[0] = 0
                        parent.Jpause[1] = 0
                        parent.user_access_bar_y_target = 274
                        parent.user_access_bar_y_offset = 274
                        parent.invuln_hud_draw = 0
                        parent.invuln_hud_modi = 0
                        parent.invuln_hud_acti = 0
                        parent.invuln_hud_time = 0
                        //Reset Background (If Modified During Testing)
                        if use_background_modified = 1
                            {
                                scr_set_background_silent()
                                use_background_modified = 0
                            }
                        parent.hud_petals = spr_hud_petal
                        if !instance_exists(obj_player_spawner)
                            {
                                parent.px = view_xview[view_port]+(view_wview[view_port]/2)
                                parent.py = view_yview[view_port]+(view_hview[view_port]/2)
                            }
                        //Reset player's speed variables
                        parent.hsp = 0
                        parent.gravity_speed = 0
                        parent.speed_boosted_timer = 0
                        parent.hud_bar_asset = spr_hud_bar
                        parent.hud_bar_asset_alt = spr_hud_bar_alt
                        if instance_exists(obj_waterheight)
                            {
                                if parent.water_height != obj_waterheight.y
                                    {
                                        obj_game_logic.water_height = obj_waterheight.y+64
                                        obj_game_logic.water_line = obj_waterheight.y+64
                                    }
                            }
                        else
                            {
                                obj_game_logic.water_height = 2400
                                obj_game_logic.water_line = 2400
                            }
                        scr_set_rail_grinding_stop()
                        //Reset Collision Sensors
                        scr_set_reset_collision_sensors();
                        //Reset player's characters' variables
                        scr_lilac_variables()
                        scr_carol_variables()
                        scr_milla_variables()
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Disable Carol's Bike Sounds If They Were Still Playing
                        audio_stop_sound(carol_bike_idle)
                        audio_stop_sound(carol_bike_moving)
                        audio_stop_sound(carol_bike_skidding)
                        //Reset mouse mode
                        scr_set_mouse_mode_off(0)
                        //Trigger Highlighter
                        scr_set_highlighter(323,142,365,156)
                        instance_destroy(obj_gem)
                        instance_destroy(obj_petal)
                        if audio_is_playing(ost_boss_battle_theme_synx)
                        or audio_is_playing(ost_mini_boss_theme_dusky)
                            {
                                scr_stop_boss_music();
                                audio_play_sound(backup_index,50,true);
                            }
                        if audio_is_playing(ost_invincibility_theme_bob)
                            {
                                audio_stop_sound(ost_invincibility_theme_bob)
                                scr_adjust_music_extra_life(obj_game_logic.music_volume/100,2750,0)
                            }
                    }
                //Set Spawnable Characters
                if  device_mouse_x_to_gui(0) &gt;= user_editor_hud_offset+77 and device_mouse_y_to_gui(0) &gt;= 24
                and device_mouse_x_to_gui(0) &lt;= user_editor_hud_offset+92 and device_mouse_y_to_gui(0) &lt;= 40
                and use_file_menu = 0 and parent.user_cursor_mode = 1 and use_player_spawner = 1
                    {
                        scr_set_object(parent.skin,"Player Spawner","Simply place this where you would like to spawn when play testing your stage!")
                        instance_destroy(obj_player_spawner,true)
                        scr_set_highlighter(user_editor_hud_offset+77,24,user_editor_hud_offset+92,40)
                        audio_play_sound(pause_select,50,false)
                    }
                //Change Playable Characters
                if  device_mouse_x_to_gui(0) &gt;= 164 and device_mouse_y_to_gui(0) &gt;= 203
                and device_mouse_x_to_gui(0) &lt;= 180 and device_mouse_y_to_gui(0) &lt;= 219
                and use_file_menu = 0 and user_cursor_mode = 1
                    {
                        parent.alt_skin += 1
                        if parent.skin != spr_lilac
                            parent.alt_skin = 0;
                        scr_set_lilac();
                        if parent.alt_skin = 1 parent.lives_spr = 6;
                        if parent.alt_skin &gt; 1 parent.alt_skin = 0;
                        if parent.alt_skin = 0 parent.lives_spr = 0;
                        audio_play_sound(pause_select,50,false)
                    }
                //Change Playable Characters
                if  device_mouse_x_to_gui(0) &gt;= 184 and device_mouse_y_to_gui(0) &gt;= 203
                and device_mouse_x_to_gui(0) &lt;= 199 and device_mouse_y_to_gui(0) &lt;= 219
                and use_file_menu = 0 and user_cursor_mode = 1
                    {
                        parent.alt_skin += 1
                        if parent.skin != spr_carol
                            parent.alt_skin = 0;
                        scr_set_carol();
                        if parent.skin = spr_carol
                            {
                                if parent.alt_skin &gt; 2
                                    parent.alt_skin = 0;
                                if parent.alt_skin = 1
                                    scr_set_carrie();
                                if parent.alt_skin = 2
                                    scr_set_chiasa();
                                if parent.alt_skin = 0
                                    {
                                        scr_set_carol();
                                        Animations_Carol(); scr_set_carol_state_without_bike();
                                    }
                            }
                        else
                            parent.alt_skin = 0;
                        audio_play_sound(pause_select,50,false)
                    }
                //Change Playable Characters
                if  device_mouse_x_to_gui(0) &gt;= 204 and device_mouse_y_to_gui(0) &gt;= 203
                and device_mouse_x_to_gui(0) &lt;= 219 and device_mouse_y_to_gui(0) &lt;= 219
                and use_file_menu = 0 and user_cursor_mode = 1
                    {
                        parent.alt_skin += 1
                        if parent.skin != spr_milla
                            parent.alt_skin = 0;
                        scr_set_milla();
                        if parent.alt_skin &gt; 1
                            parent.alt_skin = 0;
                        audio_play_sound(pause_select,50,false)
                    }
                //Change Playable Characters
                if  device_mouse_x_to_gui(0) &gt;= 224 and device_mouse_y_to_gui(0) &gt;= 203
                and device_mouse_x_to_gui(0) &lt;= 239 and device_mouse_y_to_gui(0) &lt;= 219
                and use_file_menu = 0 and user_cursor_mode = 1
                    {
                        if parent.alt_skin &lt; 2
                            {
                                scr_set_carol();
                                scr_set_carols_bike()
                                parent.alt_skin = 0
                            }
                        if parent.alt_skin = 2
                            {
                                parent.alt_skin = 2;
                                scr_set_chiasa();
                                scr_set_carols_bike();
                                parent.lives_spr = 10
                                parent.my_pal_sprite = spr_chiasa_palette
                                parent.ui_pal_sprite = spr_chiasa_palette
                                parent.snd_player_hurt_0 = snd_carrie_hurt_1    //Hurt Sound 1
                                parent.snd_player_hurt_1 = snd_carrie_hurt_2    //Hurt Sound 2
                                parent.snd_player_death  = snd_carrie_death     //Death Sound
                                parent.push_sound = snd_carrie_attack_leap
                                parent.swimming_frame = parent.anim_carol[parent.anim_swimming,0]
                            }
                        audio_play_sound(pause_select,50,false)
                    }
                //Change Playable Characters
                if  device_mouse_x_to_gui(0) &gt;= 244 and device_mouse_y_to_gui(0) &gt;= 203
                and device_mouse_x_to_gui(0) &lt;= 259 and device_mouse_y_to_gui(0) &lt;= 219
                and use_file_menu = 0 and user_cursor_mode = 1
                    {
                        scr_set_spade()
                        parent.alt_skin = 0
                        audio_play_sound(pause_select,50,false)
                    }
                //Prevent play/edit buttons from conflicting with each other
                //Check the draw button
                if  device_mouse_x_to_gui(0) &gt;= 371+u_elements and device_mouse_y_to_gui(0) &gt;= 142+u_elements
                and device_mouse_x_to_gui(0) &lt;= 413 and device_mouse_y_to_gui(0) &lt;= 156
                and use_file_menu = 0 and use_tile_menu_cool_down = 0 and user_cursor_mode = 0
                    {
                        use_file_menu = 2
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Disable Carol's Bike Sounds If They Were Still Playing
                        audio_stop_sound(carol_bike_idle)
                        audio_stop_sound(carol_bike_moving)
                        audio_stop_sound(carol_bike_skidding)
                        //Trigger Highlighter
                        scr_set_highlighter(371,142,413,156)
                    }
                //Check the draw/exit button
                if  device_mouse_x_to_gui(0) &gt;= 371+u_elements and device_mouse_y_to_gui(0) &gt;= 142+u_elements
                and device_mouse_x_to_gui(0) &lt;= 413 and device_mouse_y_to_gui(0) &lt;= 156 and use_file_menu = 2
                and use_tile_menu_cool_down = 0 and user_cursor_mode = 0
                    {
                        use_file_menu = 0
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Disable Carol's Bike Sounds If They Were Still Playing
                        audio_stop_sound(carol_bike_idle)
                        audio_stop_sound(carol_bike_moving)
                        audio_stop_sound(carol_bike_skidding)
                        //Trigger Highlighter
                        scr_set_highlighter(371,142,413,156)
                    }
                //Check the background button
                if  device_mouse_x_to_gui(0) &gt;= 319 and device_mouse_y_to_gui(0) &gt;= 141
                and device_mouse_x_to_gui(0) &lt;= 418 and device_mouse_y_to_gui(0) &lt;= 166
                and parent.use_editor = 1 and use_file_menu = 1
                    {
                        scr_get_background()
                        use_background += 1
                        if use_background &gt; 18 use_background = 0;

                        scr_set_background();
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(319,141,418,166)
                    }
                //Check the weather button
                if  device_mouse_x_to_gui(0) &gt;= 319 and device_mouse_y_to_gui(0) &gt;= 167
                and device_mouse_x_to_gui(0) &lt;= 418 and device_mouse_y_to_gui(0) &lt;= 191
                and parent.use_editor = 1 and use_file_menu = 1
                    {
                        use_weather_iterations += 1
                        if use_weather_iterations &gt; 3 use_weather_iterations = 0;
                        audio_stop_sound(snd_rain)
                        audio_stop_sound(snd_tempest)
                        switch(use_weather_iterations)
                            {
                                case 0:  {use_weather_conditions = "Clear"; break;}
                                case 1:  {use_weather_conditions = "Rainy"; audio_play_sound(snd_rain,50,true); break;}
                                case 2:  {use_weather_conditions = "Storm"; audio_play_sound(snd_rain,50,true); break;}
                                case 3:  {use_weather_conditions = "Tempest"; audio_play_sound(snd_tempest,50,true); audio_play_sound(snd_rain,50,true); break;}
                                default: {use_weather_conditions = "Clear"; break;}
                            }
                        obj_game_logic.use_weather_conditions = use_weather_iterations;
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(319,167,418,191)
                    }
                //Check the win conditions button
                if  device_mouse_x_to_gui(0) &gt;= 321 and device_mouse_y_to_gui(0) &gt;= 59
                and device_mouse_x_to_gui(0) &lt;= 417 and device_mouse_y_to_gui(0) &lt;= 68
                and parent.use_editor = 1 and use_file_menu = 3
                    {
                        use_win_iterations += 1
                        if use_win_iterations &gt; 2 use_win_iterations = 0;
                        switch(use_win_iterations)
                            {
                                case 0:  {use_win_condition = "Break the Targets"; break;}
                                case 1:  {use_win_condition = "Reach the Target"; break;}
                                case 2:  {use_win_condition = "Defeat the Boss"; break;}
                                default: {use_win_condition = "Break the Targets"; break;}
                            }
                        obj_game_logic.use_win_conditions = use_win_iterations;
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(321,59,417,68)
                    }
                //Check the auto-save button
                if  device_mouse_x_to_gui(0) &gt;= 321 and device_mouse_y_to_gui(0) &gt;= 89
                and device_mouse_x_to_gui(0) &lt;= 417 and device_mouse_y_to_gui(0) &lt;= 98
                and parent.use_editor = 1 and use_file_menu = 3
                    {
                        use_auto_save += 1
                        if use_auto_save &gt; 1 use_auto_save = 0;
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(321,89,417,98)
                    }
                //Check the player spawner button
                if  device_mouse_x_to_gui(0) &gt;= 321 and device_mouse_y_to_gui(0) &gt;= 118
                and device_mouse_x_to_gui(0) &lt;= 417 and device_mouse_y_to_gui(0) &lt;= 130
                and parent.use_editor = 1 and use_file_menu = 3
                    {
                        use_player_spawner += 1
                        if use_player_spawner &gt; 1 use_player_spawner = 0;
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(321,118,417,130)
                    }
                //Check the enemy mode button
                if  device_mouse_x_to_gui(0) &gt;= 319 and device_mouse_y_to_gui(0) &gt;= 192
                and device_mouse_x_to_gui(0) &lt;= 418 and device_mouse_y_to_gui(0) &lt;= 216
                and parent.use_editor = 1 and use_file_menu = 1
                    {
                        use_enemy_mode_iterations += 1
                        if use_enemy_mode_iterations &gt; 2 use_enemy_mode_iterations = 0;
                        switch(use_enemy_mode_iterations)
                            {
                                case 0:  {use_enemy_mode_conditions = "Active Outside View"; break;}
                                case 1:  {use_enemy_mode_conditions = "Always Active"; break;}
                                case 2:  {use_enemy_mode_conditions = "Play Mode Only"; break;}
                            }
                        ini_open_ns("gamedata.dat")
                        ini_write_string("main_settings","enemy_mode",string(use_enemy_mode_iterations))
                        ini_close_ns()
                        scr_set_message("Editor preferences saved!")
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(319,192,418,216)
                    }
                //Check the tile-layer switching button
                if  device_mouse_x_to_gui(0) &gt;= 318+u_elements and device_mouse_x_to_gui(0) &lt;= 332+u_elements
                and device_mouse_y_to_gui(0) &gt;= 219 and device_mouse_y_to_gui(0) &lt;= 233
                and use_tile_switching_mode = 0 and use_tile_menu_cool_down = 0 and user_cursor_mode = 0
                    {
                        //Enable manual tile-layer switching
                        use_tile_switching_mode = 1
                        audio_play_sound(character_parry,50,false)
                        scr_set_message("Manual layer switching enabled!")
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(318,219,332,233)
                    }
                //Check the tile-layer switching button
                if  device_mouse_x_to_gui(0) &gt;= 318+u_elements and device_mouse_x_to_gui(0) &lt;= 332+u_elements
                and device_mouse_y_to_gui(0) &gt;= 219 and device_mouse_y_to_gui(0) &lt;= 233
                and use_tile_switching_mode = 1 and use_tile_menu_cool_down = 0 and user_cursor_mode = 0
                    {
                        //Enable automatic tile-layer switching
                        use_tile_switching_mode = 0
                        audio_play_sound(character_parry,50,false)
                        scr_set_message("Auto layer switching enabled!")
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(318,219,332,233)
                    }
                //Check the health petal modifier buttons
                if  device_mouse_x_to_gui(0) &gt;= 405 and device_mouse_x_to_gui(0) &lt;= 421
                and device_mouse_y_to_gui(0) &gt;= 4 and device_mouse_y_to_gui(0) &lt;= 11
                and parent.use_editor = 1 and use_file_menu = 1
                    {
                        //Check minus button
                        if  device_mouse_x_to_gui(0) &gt;= 405 and device_mouse_x_to_gui(0) &lt;= 412
                            {
                                if use_health_petal_mod &gt; 0 use_health_petal_mod -= 1;
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(405,4,421,11)
                            }
                        //Check positive button
                        if device_mouse_x_to_gui(0) &gt;= 413 and device_mouse_x_to_gui(0) &lt;= 421
                            {
                                if use_health_petal_mod &lt; 14 use_health_petal_mod += 1;
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(413,4,421,11)
                            }
                    }
                //Check the collapsable button
                if  device_mouse_x_to_gui(0) &gt;= 311 and device_mouse_x_to_gui(0) &lt;= 322
                and device_mouse_y_to_gui(0) &gt;= 112 and device_mouse_y_to_gui(0) &lt;= 128
                and user_editor_hud_state = 0 and use_tile_menu_cool_down = 0
                    {
                        user_editor_hud_state = 1
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(311,112,322,128)
                    }
                //Check the collapsable button
                if  device_mouse_x_to_gui(0) &gt;= 411 and device_mouse_x_to_gui(0) &lt;= 422
                and device_mouse_y_to_gui(0) &gt;= 112 and device_mouse_y_to_gui(0) &lt;= 128
                and user_editor_hud_state = 2 and use_tile_menu_cool_down = 0
                    {
                        user_editor_hud_state = 3
                        use_tile_menu_cool_down = 8
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                        //Trigger Highlighter
                        scr_set_highlighter(411,112,422,128)
                    }
                //---------------------------------//
                //---Check painting mode buttons---//
                //---------------------------------//
                if use_file_menu = 2
                    {
                        //Warn the player that the color wheel isn't usable yet
                        if  device_mouse_x_to_gui(0) &gt;= 353+u_elements and device_mouse_y_to_gui(0) &gt;= 17
                        and device_mouse_x_to_gui(0) &lt;= 384+u_elements and device_mouse_y_to_gui(0) &lt;= 48
                            {
                                audio_play_sound(character_parry,50,false)
                                scr_set_message("Color wheel not available yet!")
                                //Trigger Highlighter
                                scr_set_highlighter(353,17,384,48)
                            }

                        //Warn the player that layers aren't usable yet
                        if  device_mouse_x_to_gui(0) &gt;= 323+u_elements and device_mouse_y_to_gui(0) &gt;= 123
                        and device_mouse_x_to_gui(0) &lt;= 364+u_elements and device_mouse_y_to_gui(0) &lt;= 136
                            {
                                audio_play_sound(character_parry,50,false)
                                scr_set_message("Layer controls not available yet!")
                                //Trigger Highlighter
                                scr_set_highlighter(323,123,364,136)
                            }

                        //-------------------------//
                        //---Click Drawing Tools---//
                        //-------------------------//

                        //Click/invoke painting pen
                        if  device_mouse_x_to_gui(0) &gt;= 323+u_elements and device_mouse_y_to_gui(0) &gt;= 62
                        and device_mouse_x_to_gui(0) &lt;= 335+u_elements and device_mouse_y_to_gui(0) &lt;= 75
                            {
                                user_pen_mode = spr_drawing_cursor
                                user_pen_size = 1
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(323,62,335,75)
                            }
                        //Click/invoke eraser
                        if  device_mouse_x_to_gui(0) &gt;= 323+u_elements and device_mouse_y_to_gui(0) &gt;= 77
                        and device_mouse_x_to_gui(0) &lt;= 335+u_elements and device_mouse_y_to_gui(0) &lt;= 90
                            {
                                user_pen_mode = spr_erasing_cursor
                                user_pen_size = -1
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(323,77,335,90)
                            }
                        //Click/invoke pixel grid
                        if  device_mouse_x_to_gui(0) &gt;= 399+u_elements and device_mouse_y_to_gui(0) &gt;= 62
                        and device_mouse_x_to_gui(0) &lt;= 408+u_elements and device_mouse_y_to_gui(0) &lt;= 75
                        and user_tool_grid = 0 and use_tile_menu_cool_down = 0
                            {
                                user_tool_grid = 1
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(399,62,408,75)
                            }
                        //Click/invoke pixel grid
                        if  device_mouse_x_to_gui(0) &gt;= 399+u_elements and device_mouse_y_to_gui(0) &gt;= 62
                        and device_mouse_x_to_gui(0) &lt;= 408+u_elements and device_mouse_y_to_gui(0) &lt;= 75
                        and user_tool_grid = 1 and use_tile_menu_cool_down = 0
                            {
                                user_tool_grid = 0
                                use_tile_menu_cool_down = 8
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(399,62,408,75)
                            }

                        //------------------------//
                        //---Click Tool Options---//
                        //------------------------//

                        //Click/invoke line tool
                        if  device_mouse_x_to_gui(0) &gt;= 339+u_elements and device_mouse_y_to_gui(0) &gt;= 62
                        and device_mouse_x_to_gui(0) &lt;= 348+u_elements and device_mouse_y_to_gui(0) &lt;= 75
                            {
                                user_pen_mode = spr_line_tool
                                user_pen_size = 1
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(339,62,348,75)
                            }
                        //Click/invoke rectangle tool
                        if  device_mouse_x_to_gui(0) &gt;= 354+u_elements and device_mouse_y_to_gui(0) &gt;= 62
                        and device_mouse_x_to_gui(0) &lt;= 363+u_elements and device_mouse_y_to_gui(0) &lt;= 75
                            {
                                user_pen_mode = spr_rectangle_tool
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(354,62,363,75)
                            }
                        //Click/invoke circle tool
                        if  device_mouse_x_to_gui(0) &gt;= 369+u_elements and device_mouse_y_to_gui(0) &gt;= 62
                        and device_mouse_x_to_gui(0) &lt;= 378+u_elements and device_mouse_y_to_gui(0) &lt;= 75
                            {
                                user_pen_mode = spr_circle_tool
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(369,62,378,75)
                            }

                        //Click/invoke eraser brush size 1x
                        if  device_mouse_x_to_gui(0) &gt;= 339+u_elements and device_mouse_y_to_gui(0) &gt;= 77
                        and device_mouse_x_to_gui(0) &lt;= 348+u_elements and device_mouse_y_to_gui(0) &lt;= 90
                            {
                                user_pen_mode = spr_erasing_cursor
                                user_pen_size = -1
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(339,77,348,90)
                            }
                        //Click/invoke eraser brush size 2x
                        if  device_mouse_x_to_gui(0) &gt;= 354+u_elements and device_mouse_y_to_gui(0) &gt;= 77
                        and device_mouse_x_to_gui(0) &lt;= 363+u_elements and device_mouse_y_to_gui(0) &lt;= 90
                            {
                                user_pen_mode = spr_erasing_cursor
                                user_pen_size = -2
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(354,77,363,90)
                            }
                        //Click/invoke eraser brush size 3x
                        if  device_mouse_x_to_gui(0) &gt;= 369+u_elements and device_mouse_y_to_gui(0) &gt;= 77
                        and device_mouse_x_to_gui(0) &lt;= 378+u_elements and device_mouse_y_to_gui(0) &lt;= 90
                            {
                                user_pen_mode = spr_erasing_cursor
                                user_pen_size = -3
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(369,77,378,90)
                            }

                        //-------------------------//
                        //---Click Color Options---//
                        //-------------------------//

                        //Row 1
                        if device_mouse_y_to_gui(0) &gt;= 92 and device_mouse_y_to_gui(0) &lt;= 98
                            {
                                //Click color (black)
                                if  device_mouse_x_to_gui(0) &gt;= 338+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 343+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_black
                                        user_line_tool_color = c_black
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(338,92,343,98)
                                    }
                                //Click color (light gray)
                                if  device_mouse_x_to_gui(0) &gt;= 346+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 352+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_light_gray
                                        user_line_tool_color = make_colour_rgb(192,196,200)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(346,92,352,98)
                                    }
                                //Click color (red)
                                if  device_mouse_x_to_gui(0) &gt;= 354+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 360+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_red
                                        user_line_tool_color = make_colour_rgb(252,0,0)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(354,92,360,98)
                                    }
                                //Click color (yellow)
                                if  device_mouse_x_to_gui(0) &gt;= 362+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 368+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_yellow
                                        user_line_tool_color = make_colour_rgb(252,252,0)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(362,92,368,98)
                                    }
                                //Click color (green)
                                if  device_mouse_x_to_gui(0) &gt;= 370+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 376+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_green
                                        user_line_tool_color = make_colour_rgb(0,252,0)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(370,92,376,98)
                                    }
                                //Click color (cyan)
                                if  device_mouse_x_to_gui(0) &gt;= 378+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 384+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_cyan
                                        user_line_tool_color = make_colour_rgb(0,252,252)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(378,92,384,98)
                                    }
                                //Click color (blue)
                                if  device_mouse_x_to_gui(0) &gt;= 386+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 392+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_blue
                                        user_line_tool_color = make_colour_rgb(0,0,252)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(386,92,392,98)
                                    }
                                //Click color (pink)
                                if  device_mouse_x_to_gui(0) &gt;= 394+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 400+u_elements 
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_pink
                                        user_line_tool_color = make_colour_rgb(252,0,252)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(394,92,400,98)
                                    }
                            }
                        //Row 2
                        if device_mouse_y_to_gui(0) &gt;= 100 and device_mouse_y_to_gui(0) &lt;= 106
                            {
                                //Click color (white)
                                if  device_mouse_x_to_gui(0) &gt;= 342+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 348+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_white
                                        user_line_tool_color = make_colour_rgb(252,252,252)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(342,100,348,106)
                                    }
                                //Click color (dark gray)
                                if  device_mouse_x_to_gui(0) &gt;= 350+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 356+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_dark_gray
                                        user_line_tool_color = make_colour_rgb(132,136,140)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(350,100,356,106)
                                    }
                                //Click color (burgundy)
                                if  device_mouse_x_to_gui(0) &gt;= 358+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 364+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_burgundy
                                        user_line_tool_color = make_colour_rgb(168,0,84)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(358,100,364,106)
                                    }
                                //Click color (dark yellow)
                                if  device_mouse_x_to_gui(0) &gt;= 366+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 372+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_dark_yellow
                                        user_line_tool_color = make_colour_rgb(168,168,84)                                        
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(366,100,372,106)
                                    }
                                //Click color (dark green)
                                if  device_mouse_x_to_gui(0) &gt;= 374+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 380+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_dark_green
                                        user_line_tool_color = make_colour_rgb(0,168,84)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(374,100,380,106)
                                    }
                                //Click color (dark cyan)
                                if  device_mouse_x_to_gui(0) &gt;= 382+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 388+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_dark_cyan
                                        user_line_tool_color = make_colour_rgb(84,168,168)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(382,100,388,106)
                                    }
                                //Click color (dark blue)
                                if  device_mouse_x_to_gui(0) &gt;= 390+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 396+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_dark_blue
                                        user_line_tool_color = make_colour_rgb(84,84,168)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(390,100,396,106)
                                    }
                                //Click color (purple)
                                if  device_mouse_x_to_gui(0) &gt;= 398+u_elements
                                and device_mouse_x_to_gui(0) &lt;= 404+u_elements
                                    {
                                        if user_pen_mode = spr_erasing_cursor user_pen_mode = spr_drawing_cursor;
                                        user_pen_color = mu_paint_purple
                                        user_line_tool_color = make_colour_rgb(168,84,168)
                                        //Play menu sound
                                        audio_play_sound(pause_select,50,false)
                                        //Trigger Highlighter
                                        scr_set_highlighter(398,100,404,106)
                                    }
                            }
                    }
            }
    }

//Shift Editor HUD towards the right
if user_editor_hud_state = 1
    {
        user_editor_hud_offset += 5
        u_elements += 5
        if user_editor_hud_offset &gt; 414
            {
                user_editor_hud_offset = 414
                u_elements = 100
                user_editor_hud_state = 2
            }
    }

if user_editor_hud_state = 3
    {
        user_editor_hud_offset -= 5
        u_elements -=5
        if user_editor_hud_offset &lt; 314
            {
                user_editor_hud_offset = 314
                u_elements = 0
                user_editor_hud_state = 0
            }
    }

//Set scroll wheel lock
var scroll_wheel_lock = 0;

if device_mouse_x_to_gui(0) &gt;= 315
    {
        if use_tile_menu = 0 and use_file_menu = 3
        and mouse_wheel_up()
            {
                use_file_menu = 1
                scroll_wheel_lock = 1;
                audio_play_sound(pause_select,50,false)
                //Trigger Highlighter
                scr_set_highlighter(419,35,424,174)
            }
        if use_tile_menu = 0 and use_file_menu = 1
        and mouse_wheel_down()
            {
                use_file_menu = 3
                scroll_wheel_lock = 1;
                audio_play_sound(pause_select,50,false)
                //Trigger Highlighter
                scr_set_highlighter(419,63,424,202)
            }
    }

//Zoom If We Are Using The Mousewheel Outside Of The Tile Menu
if use_tile_menu = 0 and parent.pause = 0
    {
        //Zoom In
        if mouse_wheel_up() and scroll_wheel_lock = 0
            {
                use_zoom_scale_iteration -= 1;
                if use_zoom_scale_iteration &lt; 0
                    use_zoom_scale_iteration = 0;

                switch(use_zoom_scale_iteration)
                    {
                        case 0: {use_zoom_position = 8; break;}
                        case 1: {use_zoom_position = 7; break;}
                        case 2: {use_zoom_position = 3; break;}
                        case 3: {use_zoom_position = 2; break;}
                        case 4: {use_zoom_position = 1; break;}
                        case 5: {use_zoom_position = 0; break;}
                        case 6: {use_zoom_position = 4; break;}
                        case 7: {use_zoom_position = 5; break;}
                        case 8: {use_zoom_position = 6; break;}
                    }
                scr_clear_zoom_level()
                scr_change_zoom_level()
                use_dispaly_key_prompt = 1
                use_tile_properties_enable = 0
                use_zoom_counter = 0.3
            }
        //Zoom Out
        if mouse_wheel_down() and scroll_wheel_lock = 0
            {
                use_zoom_scale_iteration += 1;
                if use_zoom_scale_iteration &gt; 8
                    use_zoom_scale_iteration = 8;

                switch(use_zoom_scale_iteration)
                    {
                        case 0: {use_zoom_position = 8; break;}
                        case 1: {use_zoom_position = 7; break;}
                        case 2: {use_zoom_position = 3; break;}
                        case 3: {use_zoom_position = 2; break;}
                        case 4: {use_zoom_position = 1; break;}
                        case 5: {use_zoom_position = 0; break;}
                        case 6: {use_zoom_position = 4; break;}
                        case 7: {use_zoom_position = 5; break;}
                        case 8: {use_zoom_position = 6; break;}
                    }
                scr_clear_zoom_level()
                scr_change_zoom_level()
                use_dispaly_key_prompt = 1
                use_zoom_counter = 0.3
            }
        //Zoom Toggle
        if use_snap_down = 1
            {
                use_zoom_position_toggle -= 1
                scr_clear_zoom_level()
                if use_zoom_position_toggle &lt; 0 use_zoom_position_toggle = 8;
                switch(use_zoom_position_toggle)
                    {
                        case 0: {use_zoom_position = 8; break;}
                        case 1: {use_zoom_position = 7; break;}
                        case 2: {use_zoom_position = 3; break;}
                        case 3: {use_zoom_position = 2; break;}
                        case 4: {use_zoom_position = 1; break;}
                        case 5: {use_zoom_position = 0; break;}
                        case 6: {use_zoom_position = 4; break;}
                        case 7: {use_zoom_position = 5; break;}
                        case 8: {use_zoom_position = 6; break;}
                    }
                scr_change_zoom_level()
                //Play menu sound
                audio_play_sound(pause_select,50,false)
            }
        //Exit Toggle
        if use_pause = 1 and user_cursor_mode = 0 and use_tile_menu_cool_down = 0
            {
                use_tile_menu = 2
                use_tile_menu_cool_down = 8
                //Play menu sound
                audio_play_sound(pause_select,50,false)
            }
        //Movement Mode Toggle
        if use_mode = 1 and user_cursor_mode = 0
            {
                use_move_mode += 1
                audio_play_sound(character_parry,50,false)
                scr_set_message("Grid movement enabled!")
                //Play menu sound
                audio_play_sound(pause_select,50,false)
            }
        //Disable Grid Movement
        if use_move_mode &gt; 1
            {
                use_move_mode = 0
                audio_play_sound(character_parry,50,false)
                scr_set_message("Grid movement disabled!")
                //Play menu sound
                audio_play_sound(pause_select,50,false)
            }

        //Do not perform alternate actions while painting mode is active
        if use_file_menu != 2
            {
                //Do not perform alternate actions while the health petal modifier is active
                if use_tile_properties_cursor_boundary_disable = 0 and user_cursor_mode = 0
                    {
                        //If we are currently not using the tile menu, are not currently hovering over the sidebar, and aren't in play mode, place a tile
                        if ((mouse_check_button(joy_mouse_button_left) or use_put_here &gt; 0) and use_tile_menu_cool_down = 0 and use_confirm = 0)
                            {
                                var o1 = tile_layer_find(user_layer_selected,use_cursor_x,use_cursor_y); //Top-Left
                                var o2 = tile_layer_find(user_layer_selected,use_cursor_x+background_get_width(user_tile_selected),use_cursor_y); //Top-Right
                                var o3 = tile_layer_find(user_layer_selected,use_cursor_x,use_cursor_y+background_get_height(user_tile_selected)); //Bottom-Left
                                var o4 = tile_layer_find(user_layer_selected,use_cursor_x+background_get_width(user_tile_selected),use_cursor_y+background_get_height(user_tile_selected)); //Bottom-Right
                                
                                //Place a tile
                                if user_cursor_display_mode = 0 and use_tile_menu = 0 and user_place_mode = 0 and (user_place_allow = 0)
                                and user_cursor_mode = 0 and use_tile_properties_cursor_boundary_disable = 0
                                and !tile_exists(o1) and !tile_exists(o2) and !tile_exists(o3) and !tile_exists(o4)
                                and array_length_1d(tile_get_ids()) &lt;= user_tile_limit_warning_value
                                and not (user_layer_selected = surface_slopes or user_layer_selected = surface_modifiers
                                or user_layer_selected = surface_enemy_flags or user_layer_selected = surface_flags)
                                and user_move_layer_ID = -1
                                    {
                                        //Sentinel check on layer value for current tile; check to see if the tile shouldn't be
                                        //placed on a specific layer
                                        scr_set_layer_surface();
                                        //Place a tile
                                        var added_tile = -1;
                                        added_tile = tile_add(user_tile_selected,0,0,background_get_width(user_tile_selected),background_get_height(user_tile_selected),user_grid_snap_x+user_grid_offset_x,user_grid_snap_y+user_grid_offset_y,user_layer_selected);
                                        use_tile_menu_cool_down = 8
                                        //Play Sound Effect
                                        audio_play_sound(snd_hammer,50,false)
                                        //Play Particle Effect
                                        use_confirm = 1
                                        //Trigger tile dragging
                                        use_corner_box = 5
                                        use_corner_box_id = added_tile;
                                        use_corner_box_bottom_left_x = tile_get_x(added_tile)
                                        use_corner_box_bottom_left_y = tile_get_y(added_tile)+tile_get_height(added_tile)
                                        use_corner_box_top_right_x = user_grid_snap_x
                                        use_corner_box_top_right_y = user_grid_snap_y
                                    }
                                if (tile_get_count() &gt; user_tile_limit_warning_value and !audio_is_playing(character_parry))
                                    scr_set_message("Tile limit reached!  Remove tiles to optimize.");
                            }
        
                        //Delete Tiles Underneath The Cursor
                        if ((mouse_check_button(joy_mouse_button_right) or use_delete &gt; 0)
                        and use_tile_menu_cool_down = 0 and side_bar_allow = 0 and use_confirm = 0
                        and use_delete_selection_box_timer &lt; 8)
                            {
                                //Scan for tiles to delete
                                var tile_scanner = tile_layer_find(user_layer_selected,use_cursor_x,use_cursor_y)
        
                                //Collect ID of the tile
                                if tile_exists(tile_scanner)
                                    {
                                        //Collect background ID of the tile
                                        var tile_scanner_ID = tile_get_background(tile_scanner);
        
                                        //Check for exceptional tiles the editor should be ignoring (Such as object-specific flag tiles)
                                        var tile_scanner_IDs_exceptional_tiles = scr_check_layer_surface(tile_scanner_ID)

                                        //If the exceptional tile scan returned positive, delete any tiles found underneath the player's cursor
                                        if tile_scanner_IDs_exceptional_tiles = 1
                                            {
                                                tile_delete(tile_scanner)
                                                scr_clear_zoom_level()
                                            }
                                    }
        
                                //Check the cursor's positions for objects to delete
                                var instance_delete = instance_position(use_cursor_x,use_cursor_y,obj_delete_parent);
        
                                //Scan for objects to delete
                                if (use_tile_switching_mode = 0 and instance_exists(instance_delete))
                                or (use_tile_switching_mode = 1 and instance_exists(instance_delete) and user_layer_selected = -100000)
                                    {
                                        instance_destroy(instance_delete,true)
                                        user_place_allow = 0
                                    }
        
                                //Display error message if objects were underneath the cursor while in automatic layer switching mode
                                if (use_tile_switching_mode = 1 and user_cursor_display_mode = 0 and instance_exists(instance_delete))
                                    {
                                        if mouse_check_button_pressed(joy_mouse_button_right)
                                        or use_delete = 1
                                            {
                                                audio_play_sound(character_parry,50,false)
                                                //Display Error Message
                                                scr_set_message("Cannot delete objects while holding a tile!")
                                            }
                                    }
                            }
        
                        //Copy The Tile Underneath The Cursor
                        if (mouse_check_button_pressed(mb_middle) and (device_mouse_x_to_gui(0) &lt; user_editor_hud_offset))
                        or (use_copy = 1 and (device_mouse_x_to_gui(0) &lt; user_editor_hud_offset))
                            {
                                //Scan for tiles to copy
                                var tile_scanner = tile_layer_find(user_layer_selected,use_cursor_x,use_cursor_y)
        
                                //Collect ID of the tile
                                if tile_exists(tile_scanner)
                                    {
                                        //Collect background ID of the tile
                                        var tile_scanner_ID = tile_get_background(tile_scanner);
        
                                        //Check for exceptional tiles the editor should be ignoring (Such as object-specific flag tiles)
                                        var tile_scanner_IDs_exceptional_tiles = scr_check_layer_surface(tile_scanner_ID)
        
                                        //If the exceptional tile scan returned positive, copy any tiles found underneath the player's cursor
                                        if tile_scanner_IDs_exceptional_tiles = 1
                                            {
                                                user_cursor_display_mode = 0
                                                user_tile_selected = tile_get_background(tile_scanner)
                                                scr_clear_zoom_level()
                                                var user_tile_get_asset_name = background_get_name(user_tile_selected);
                                                //Swap to temple tile set before checking a tile's X/Y offsets
                                                if string_char_at(user_tile_get_asset_name,0) = "m"
                                                and use_tileset_preview_set_increment != 0
                                                    {
                                                        scr_set_temple_definition_table();
                                                        use_tileset_preview_set = ui_tileset_temple
                                                        use_tileset_preview_set_increment = 0
                                                        scr_change_page()
                                                    }
                                                //Swap to city tile set before checking a tile's X/Y offsets
                                                if string_char_at(user_tile_get_asset_name,0) = "w"
                                                and use_tileset_preview_set_increment != 1
                                                    {
                                                        scr_set_city_definition_table();
                                                        use_tileset_preview_set = ui_tileset_city
                                                        use_tileset_preview_set_increment = 1
                                                        scr_change_page()
                                                    }
                                                //Swap to mountain tile set before checking a tile's X/Y offsets
                                                if string_pos("mnt",user_tile_get_asset_name) != 0
                                                and use_tileset_preview_set_increment != 3
                                                    {
                                                        scr_set_mountain_definition_table();
                                                        use_tileset_preview_set = ui_tileset_ravine
                                                        use_tileset_preview_set_increment = 3
                                                        scr_change_page()
                                                    }
                                                //Swap to lagoon tile set before checking a tile's X/Y offsets
                                                if string_char_at(user_tile_get_asset_name,0) = "l"
                                                and use_tileset_preview_set_increment != 4
                                                    {
                                                        scr_set_lagoon_definition_table();
                                                        use_tileset_preview_set = ui_tileset_lagoon
                                                        use_tileset_preview_set_increment = 4
                                                        scr_change_page()
                                                    }
                                                //Swap to mountain tile set before checking a tile's X/Y offsets
                                                if string_pos("rg",user_tile_get_asset_name) != 0
                                                and use_tileset_preview_set_increment != 5
                                                    {
                                                        scr_set_platforms_definition_table();
                                                        use_tileset_preview_set = ui_tileset_platform
                                                        use_tileset_preview_set_increment = 5
                                                        scr_change_page()
                                                    }
                                                scr_change_aspect_ratio_preview(tile_scanner_ID)
                                                scr_get_tile_offsets()
                                            }
                                    }
        
                                //Scan for objects to copy
                                var instance_duplicate = instance_position(use_cursor_x,use_cursor_y,obj_delete_parent);
        
                                if (use_tile_switching_mode = 0 and instance_exists(instance_duplicate))
                                or (use_tile_switching_mode = 1 and instance_exists(instance_duplicate) and user_layer_selected = -100000)
                                    {
                                        user_cursor_display_mode = 1
                                        user_tile_selected = instance_duplicate.sprite_index
                                        if user_tile_selected = spr_test_target user_tile_selected = spr_target;
                                        if (user_tile_selected = spr_invincibility_flower_modifier) user_tile_selected = spr_gem_flower_modifier;
                                        if (user_tile_selected = spr_shark_torpedo_death) user_tile_selected = spr_shark_torpedo_unloaded;
                                        if (user_tile_selected = spr_axle_turret) user_tile_selected = spr_axle_turret_thumbnail;
                                        if (user_tile_selected = spr_cube_alt) user_tile_selected = spr_cube_mega_item;
                                        if (user_tile_selected = spr_switch_water_2x) user_tile_selected = spr_switch_water;
                                        if (user_tile_selected = spr_switch_water_3x) user_tile_selected = spr_switch_water;
                                        //Copy Milla's spawn icon instead of her current sprite/icon
                                        //Copy an NPC's object data into our NPC clipboard
                                        if variable_instance_exists(instance_duplicate,"npc_direction")
                                            {
                                                npc_clipboard_dialog_string_p1 = instance_duplicate.npc_dialog_string_p1
                                                npc_clipboard_dialog_string_p2 = instance_duplicate.npc_dialog_string_p2
                                                npc_clipboard_dialog_emotion_p1 = instance_duplicate.npc_dialog_emotion_p1
                                                npc_clipboard_dialog_emotion_p2 = instance_duplicate.npc_dialog_emotion_p2
                                                npc_clipboard_dialog_direction = instance_duplicate.npc_direction
                                                scr_set_message("NPC copied! Clipboard updated!")
                                                npc_clipboard_dialog_active = 1
                                            }
                                        if instance_duplicate.object_index = obj_shop_milla
                                            user_tile_selected = spr_potion_shop_spawn_point;
                                        
                                        //Don't let the player get access to the 2D logic controller
                                        if (user_tile_selected = spr_loop_tile_logic) user_tile_selected = spr_loop_logic;
                                    }
                                if (use_tile_switching_mode = 1 and user_cursor_display_mode = 0 and instance_duplicate != noone)
                                    {
                                        audio_play_sound(character_parry,50,false)
                                        scr_set_message("Cannot copy objects while holding a tile!");
                                    }
                            }

                        //Scan For Tiles That The Player Can Move
                        var o = tile_layer_find(user_layer_selected,use_cursor_x,use_cursor_y);

                        //Scan for objects to move
                        var instance_move = instance_position(use_cursor_x,use_cursor_y,obj_delete_parent);

                        if use_tile_switching_mode = 0
                            {
                                //Change Placement Mode If There Is A Tile Underneath The Cursor
                                if (tile_exists(o) or instance_exists(instance_move)) user_place_mode = 1;
                
                                if (!instance_exists(instance_move) and !tile_exists(o)) or (user_cursor_mode = 1)
                                    user_place_mode = 0;
                            }
        
                        //Force Placement Mode To Ignore Objects While In Manual Placement Mode
                        if use_tile_switching_mode = 1
                            {
                                if user_cursor_display_mode = 0 and tile_exists(o) user_place_mode = 1;
                                if user_cursor_display_mode = 1 and instance_exists(instance_move) user_place_mode = 2;
                                if !instance_exists(instance_move) and !tile_exists(o) user_place_mode = 0;
                            }

                        //Move The Tile If The Player Has Clicked On It In "Move" Mode
                        if (mouse_check_button_pressed(joy_mouse_button_left) or use_put_here = 1)
                        and use_tile_menu_cool_down = 0 and use_delete = 0 and side_bar_allow = 0
                        and ((tile_exists(o) and !instance_exists(instance_move)) or (use_tile_switching_mode = 1 and user_place_mode = 1 and tile_exists(o)))
                            {
                                //Collect background ID of the tile
                                var tile_scanner_ID = tile_get_background(o);

                                //Check for exceptional tiles the editor should be ignoring (Such as object-specific flag tiles)
                                var tile_scanner_IDs_exceptional_tiles = scr_check_layer_surface(tile_scanner_ID)

                                //Create exceptions for specific slope tiles
                                var tile_scanner_IDs_exceptional_slope_tiles = 0;
                                var tile_scanner_result = scr_set_check_exceptional_slope_tiles(tile_scanner_ID);
                                if tile_scanner_result = 1
                                    {
                                        tile_scanner_IDs_exceptional_tiles = 1
                                        tile_scanner_IDs_exceptional_slope_tiles = 1
                                    }

                                //Check for if we've clicked inside the corners of the tile or not
                                var tile_scanner_IDs_corners = 0;

                                //Override tile detection if it is a tile that shouldn't be tiled
                                if not (user_layer_selected = surface_slopes or user_layer_selected = surface_modifiers
                                or user_layer_selected = surface_enemy_flags or user_layer_selected = surface_flags)
                                or tile_scanner_IDs_exceptional_slope_tiles = 1
                                    {
                                        //Top-right corner
                                        if  use_cursor_x &gt;= tile_get_x(o)+tile_get_width(o)-12
                                        and use_cursor_y &lt;= tile_get_y(o)+12
                                            {
                                                use_corner_box = 1;
                                                use_corner_box_id = o;
                                                use_corner_box_bottom_left_x = tile_get_x(o)
                                                use_corner_box_bottom_left_y = tile_get_y(o)+tile_get_height(o)
                                                use_corner_box_top_right_x = user_grid_snap_x
                                                use_corner_box_top_right_y = user_grid_snap_y
                                                tile_scanner_IDs_corners = 1
                                            }
                                        //Bottom-right corner
                                        if  use_cursor_x &gt;= tile_get_x(o)+tile_get_width(o)-12
                                        and use_cursor_y &gt;= tile_get_y(o)+tile_get_height(o)-12
                                            {
                                                use_corner_box = 2;
                                                use_corner_box_id = o;
                                                use_corner_box_bottom_left_x = tile_get_x(o)
                                                use_corner_box_bottom_left_y = tile_get_y(o)
                                                use_corner_box_top_right_x = user_grid_snap_x
                                                use_corner_box_top_right_y = user_grid_snap_y
                                                tile_scanner_IDs_corners = 1
                                            }
                                        //Bottom-left corner
                                        if  use_cursor_x &lt;= tile_get_x(o)+12
                                        and use_cursor_y &gt;= tile_get_y(o)+tile_get_height(o)-12
                                            {
                                                use_corner_box = 3;
                                                use_corner_box_id = o;
                                                use_corner_box_bottom_left_x = tile_get_x(o)+tile_get_width(o)
                                                use_corner_box_bottom_left_y = tile_get_y(o)
                                                use_corner_box_top_right_x = user_grid_snap_x
                                                use_corner_box_top_right_y = user_grid_snap_y
                                                tile_scanner_IDs_corners = 1
                                            }
                                        //Top-left corner
                                        if  use_cursor_x &lt;= tile_get_x(o)+12
                                        and use_cursor_y &lt;= tile_get_y(o)+12
                                            {
                                                use_corner_box = 4;
                                                use_corner_box_id = o;
                                                use_corner_box_bottom_left_x = tile_get_x(o)+tile_get_width(o)
                                                use_corner_box_bottom_left_y = tile_get_y(o)+tile_get_height(o)
                                                use_corner_box_top_right_x = user_grid_snap_x
                                                use_corner_box_top_right_y = user_grid_snap_y
                                                tile_scanner_IDs_corners = 1
                                            }
                                    }
        
                                //If the exceptional tile scan returned positive, move any tiles found underneath the player's cursor
                                if tile_scanner_IDs_exceptional_tiles = 1 and tile_scanner_IDs_corners = 0
                                    {
                                        //user_tile_selected = tile_get_background(o)
                                        user_move_tile_ID = tile_get_background(o)
                                        tile_delete(o)
                                        user_place_mode = 0
                                        use_tile_menu_cool_down = 8
                                        user_cursor_display_mode = 0
                                        user_move_layer_ID = user_layer_selected
                                        scr_set_move_refresh_offsets();
                                        scr_clear_zoom_level();
                                    }
                            }
                        //Move The Object If The Player Has Clicked On It In "Move" Mode
                        if (mouse_check_button_pressed(joy_mouse_button_left) or use_put_here = 1) and use_tile_menu_cool_down = 0
                        and ((use_tile_switching_mode = 0 and user_place_mode = 1)
                        or (use_tile_switching_mode = 1 and user_place_mode = 2 and use_item_check_verified = 0)
                        or (use_tile_switching_mode = 1 and user_place_mode != 2 and user_layer_selected = -100000))
                        and use_delete = 0 and instance_exists(instance_move) and (side_bar_allow = 0)
                            {
                                var yes = 0;
                                //Give enemies/items "mods", if we are holding a mod
                                switch(user_tile_selected)
                                    {
                                        case spr_target:  {yes = 1; break;}
                                        case spr_keycard: {yes = 1; break;}
                                        case spr_mod_chip_alt_weapon:   {yes = 1; break;}
                                        case spr_mod_chip_speed:        {yes = 1; break;}
                                        case spr_mod_chip_health:       {yes = 1; break;}
                                        case spr_mod_chip_extra_large:  {yes = 1; break;}
                                        case spr_mod_chip_bomb:         {yes = 1; break;}
                                        case spr_mod_chip_spring:       {yes = 1; break;}
                                        case spr_mod_chip_detonate:     {yes = 1; break;}
                                    }
                                if yes = 1
                                    {
                                        if instance_move.give_item = 1 and instance_move.item = 0
                                            {
                                                instance_move.item = user_tile_selected;
                                                audio_play_sound(snd_switch,50,false);
                                                use_confirm = 1;
                                                if user_tile_selected = spr_mod_chip_health
                                                    {
                                                        var calculate_hearts_max = instance_move.heartmax*2;
                                                        var calculate_hearts = instance_move.hp_mod/2;
                                                        instance_move.heartmax = calculate_hearts_max
                                                        instance_move.heart = calculate_hearts_max
                                                        instance_move.hp_mod = calculate_hearts
                                                    }
                                            }
                                    }
                                //If enemies/items do not want "mods", move them instead
                                if instance_move.give_item = 0
                                    {
                                        user_tile_selected = instance_move.sprite_index
                                        if (user_tile_selected = spr_test_target) user_tile_selected = spr_target;
                                        if (user_tile_selected = spr_invincibility_flower_modifier) user_tile_selected = spr_gem_flower_modifier;
                                        if (user_tile_selected = spr_shark_torpedo_death) user_tile_selected = spr_shark_torpedo_unloaded;
                                        if (user_tile_selected = spr_axle_turret) user_tile_selected = spr_axle_turret_thumbnail;
                                        if (user_tile_selected = spr_cube_alt) user_tile_selected = spr_cube_mega_item;
                                        if (user_tile_selected = spr_switch_water_2x) user_tile_selected = spr_switch_water;
                                        if (user_tile_selected = spr_switch_water_3x) user_tile_selected = spr_switch_water;
                                        //Copy Milla's spawn icon instead of her current sprite/icon
                                        if instance_move.object_index = obj_shop_milla
                                            user_tile_selected = spr_potion_shop_spawn_point;
                                        //Don't let the player get access to the 2D logic controller
                                        if (user_tile_selected = spr_loop_tile_logic) user_tile_selected = spr_loop_logic;
                                        //Set Grid Offsets For Certain Enemies
                                        if user_tile_selected = spr_fire_spitter {use_item_offset_y = -8; user_grid_offset_y = -8;}
                                        user_place_mode = 0
                                        use_tile_menu_cool_down = 8
                                        user_cursor_display_mode = 1
                                        instance_destroy(instance_move,true)
                                    }
                            }
                        //Display error message if objects were underneath the cursor while holding a tile
                        if  (mouse_check_button_pressed(joy_mouse_button_left) or use_put_here = 1)
                        and (use_tile_switching_mode = 1 and user_cursor_display_mode = 0 and instance_move != noone)
                        and (side_bar_allow = 0)
                            {
                                audio_play_sound(character_parry,50,false)
                                scr_set_message("Cannot move objects while holding a tile!");
                            }
                    }
            }
    }

if side_bar_allow = 1 and use_tile_menu_cool_down = 0 and use_file_menu = 0
    {
        if use_tile_menu = 0
            {
                //Check the sidebar's on-screen buttons
                if (mouse_check_button_pressed(joy_mouse_button_right) or use_delete = 1)
                    {
                        //Check the layer button
                        if  (device_mouse_x_to_gui(0) &gt;= 323 and device_mouse_y_to_gui(0) &gt;= 123
                        and  device_mouse_x_to_gui(0) &lt;= 365 and device_mouse_y_to_gui(0) &lt;= 137)
                            {
                                if user_cursor_display_mode = 0
                                    {
                                        if use_tile_switching_mode = 1
                                            {
                                                //Increment Current Layer Depth Interation
                                                user_layer_iteration -= 1
                                                //Reset Current Layer Depth Iteration If We Are Beyond Its Boundaries
                                                if user_layer_iteration &gt; 15 user_layer_iteration = 0;
                                                if user_layer_iteration &lt; 0  user_layer_iteration = 15;
                                                //Increment Current Layer Depth Based On Iteration Position
                                                switch(user_layer_iteration)
                                                    {
                                                        case 0:  {user_layer_selected = 0; break;}
                                                        case 1:  {user_layer_selected = 1; break;}
                                                        case 2:  {user_layer_selected = 1; break;}
                                                        case 3:  {user_layer_selected = 1; user_layer_iteration = 1; break;}
                                                        case 4:  {user_layer_selected = 100000; break;}
                                                        case 5:  {user_layer_selected = 4; break;}
                                                        case 6:  {user_layer_selected = 5; break;}
                                                        case 7:  {user_layer_selected = 6; break;}
                                                        case 8:  {user_layer_selected = 7; break;}
                                                        case 9:  {user_layer_selected = 8; break;}
                                                        case 10: {user_layer_selected = 9; break;}
                                                        case 11: {user_layer_selected = -5; break;}
                                                        case 12: {user_layer_selected = -4; break;}
                                                        case 13: {user_layer_selected = -3; break;}
                                                        case 14: {user_layer_selected = -2; break;}
                                                        case 15: {user_layer_selected = -1; break;}
                                                    }
                                                //Play menu sound
                                                audio_play_sound(pause_select,50,false)
                                                //Trigger Highlighter
                                                scr_set_highlighter(323,123,365,137)
                                            }
                                        else
                                            {
                                                audio_play_sound(character_parry,50,false)
                                                //Display Error Message
                                                scr_set_message("Cannot adjust layers while in auto-layer mode!")
                                            }
                                    }
                                else
                                    {
                                        audio_play_sound(character_parry,50,false)
                                        //Display Error Message
                                        scr_set_message("Cannot adjust layer depth for objects!")
                                    }
                            }
                        //Check the snap button
                        if  (device_mouse_x_to_gui(0) &gt;= 371 and device_mouse_y_to_gui(0) &gt;= 123
                        and  device_mouse_x_to_gui(0) &lt;= 413 and device_mouse_y_to_gui(0) &lt;= 137)
                            {
                                //Increment Current Grid Snap Size
                                user_grid_iteration -= 1
                                if user_grid_iteration &gt; 3 user_grid_iteration = 0;
                                if user_grid_iteration &lt; 0 user_grid_iteration = 3;
                                //Increment Current Grid Snap Size Based On Iteration Position
                                switch(user_grid_iteration)
                                    {
                                        case 0: {user_grid_snap = 1; use_grid_toggle_size = ui_grid_2px; break;}
                                        case 1: {user_grid_snap = 2; use_grid_toggle_size = ui_grid_2px; break;}
                                        case 2: {user_grid_snap = 4; use_grid_toggle_size = ui_grid_4px; break;}
                                        case 3: {user_grid_snap = 8; use_grid_toggle_size = ui_grid_8px; break;}
                                    }
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(371,123,413,137)
                            }
                    }
                
                //Check the sidebar's on-screen buttons
                if (mouse_check_button_pressed(mb_middle) or use_copy = 1)
                    {
                        //Check the snap button
                        if  (device_mouse_x_to_gui(0) &gt;= 371 and device_mouse_y_to_gui(0) &gt;= 123
                        and  device_mouse_x_to_gui(0) &lt;= 413 and device_mouse_y_to_gui(0) &lt;= 137)
                            {
                                if use_grid_toggle_iterator = 0
                                    {
                                        audio_play_sound(character_parry,50,false)
                                        scr_set_message("Visual grid enabled")
                                        grid_visible = 1
                                    }
                                if use_grid_toggle_iterator = 1
                                    {
                                        audio_play_sound(character_parry,50,false)
                                        scr_set_message("Visual grid disabled")
                                        grid_visible = 0
                                    }
                                //Play menu sound
                                audio_play_sound(pause_select,50,false)
                                //Trigger Highlighter
                                scr_set_highlighter(371,123,413,137)
                                //Iterate Toggle
                                use_grid_toggle_iterator += 1
                                if use_grid_toggle_iterator &gt; 1 use_grid_toggle_iterator = 0;
                            }
                    }
            }
        
        if (mouse_check_button_pressed(joy_mouse_button_left) or use_put_here = 1)
            {
                //Check Stamp Selector Buttons
                if (use_tile_menu &lt;= 1) and use_stamp_state = 0
                    {
                        var stamp_sound_confirm = 0;
                        //Check Page Buttons
                        if device_mouse_y_to_gui(0) &gt;= 159 and device_mouse_y_to_gui(0) &lt;= 170
                            {
                                if device_mouse_x_to_gui(0) &gt;= 325 and device_mouse_x_to_gui(0) &lt;= 340
                                    {
                                        use_stamp_page -= 1
                                        if use_stamp_page &lt; 0
                                            use_stamp_page = 2;
                                        scr_set_highlighter(325,159,340,170);
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 393 and device_mouse_x_to_gui(0) &lt;= 408
                                    {
                                        use_stamp_page += 1
                                        if use_stamp_page &gt; 2
                                            use_stamp_page = 0;
                                        scr_set_highlighter(393,159,408,170);
                                        stamp_sound_confirm = 1;
                                    }
                                if stamp_sound_confirm = 1
                                    {
                                        switch(use_stamp_page)
                                            {
                                                case 0: {scr_set_stamps_set_0(); break;}
                                                case 1: {scr_set_stamps_set_1(); break;}
                                                case 2: {scr_set_stamps_set_2(); break;}
                                            }
                                    }
                            }
                        //Check Row 1
                        if device_mouse_y_to_gui(0) &gt;= 171 and device_mouse_y_to_gui(0) &lt;= 186
                            {
                                if device_mouse_x_to_gui(0) &gt;= 325 and device_mouse_x_to_gui(0) &lt;= 340
                                    {
                                        scr_set_object(use_stamp_list[0],"","")
                                        scr_set_highlighter(325,171,340,186);
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 342 and device_mouse_x_to_gui(0) &lt;= 357
                                    {
                                        scr_set_object(use_stamp_list[1],"","")
                                        scr_set_highlighter(342,171,357,186)
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 359 and device_mouse_x_to_gui(0) &lt;= 374
                                    {
                                        scr_set_object(use_stamp_list[2],"","")
                                        scr_set_highlighter(359,171,374,186);
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 376 and device_mouse_x_to_gui(0) &lt;= 391
                                    {
                                        scr_set_object(use_stamp_list[3],"","")
                                        scr_set_highlighter(376,171,391,186);
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 393 and device_mouse_x_to_gui(0) &lt;= 408
                                    {
                                        scr_set_object(use_stamp_list[4],"","")
                                        scr_set_highlighter(393,171,408,186);
                                        stamp_sound_confirm = 1;
                                    }
                            }
                        //Check Row 2
                        if device_mouse_y_to_gui(0) &gt;= 188 and device_mouse_y_to_gui(0) &lt;= 203
                            {
                                if device_mouse_x_to_gui(0) &gt;= 325 and device_mouse_x_to_gui(0) &lt;= 340
                                    {
                                        scr_set_object(use_stamp_list[5],"","")
                                        scr_set_highlighter(325,188,340,203)
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 342 and device_mouse_x_to_gui(0) &lt;= 357
                                    {
                                        scr_set_object(use_stamp_list[6],"","")
                                        scr_set_highlighter(342,188,357,203)
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 359 and device_mouse_x_to_gui(0) &lt;= 374
                                    {
                                        scr_set_object(use_stamp_list[7],"","")
                                        scr_set_highlighter(359,188,374,203)
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 376 and device_mouse_x_to_gui(0) &lt;= 391
                                    {
                                        scr_set_object(use_stamp_list[8],"","")
                                        scr_set_highlighter(376,188,391,203)
                                        stamp_sound_confirm = 1;
                                    }
                                if device_mouse_x_to_gui(0) &gt;= 393 and device_mouse_x_to_gui(0) &lt;= 408
                                    {
                                        scr_set_object(use_stamp_list[9],"","")
                                        scr_set_highlighter(393,188,408,203)
                                        stamp_sound_confirm = 1;
                                    }
                            }
                        if stamp_sound_confirm = 1
                            audio_play_sound(pause_select,50,false);
                    }
            }
    }

//Close The Tile Menu With The Controller Or A Keyboard Hotkey
if use_new_tile = 1 and use_tile_menu_cool_down = 0 and use_tile_menu &gt; 0 and use_file_menu = 0
    {
        use_tile_menu = 0
        use_tile_menu_cool_down = 8
        //Play menu sound
        audio_play_sound(snd_turn_page,50,false)
    }

//Open The Tile Menu With The Controller Or A Keyboard Hotkey
if use_new_tile = 1 and use_tile_menu_cool_down = 0 and use_tile_menu = 0 and use_file_menu = 0
    {
        use_tile_menu = 1
        use_tile_menu_cool_down = 8
        //Play menu sound
        audio_play_sound(snd_turn_page,50,false)
    }

//Check the layer button
if ((use_layer_up = 1 and use_layer_down = 0) or (use_layer_down = 1 and use_layer_up = 0))
    {
        if user_cursor_display_mode = 0
            {
                if use_tile_switching_mode = 1
                    {
                        //Increment Current Layer Depth Interation
                        if use_layer_up = 1 user_layer_iteration += 1;
                        if use_layer_down = 1 user_layer_iteration -= 1;
                        //Reset Current Layer Depth Iteration If We Are Beyond Its Boundaries
                        if user_layer_iteration &gt; 15 user_layer_iteration = 0;
                        if user_layer_iteration &lt; 0  user_layer_iteration = 15;
                        //Increment Current Layer Depth Based On Iteration Position
                        switch(user_layer_iteration)
                            {
                                case 0:  {user_layer_selected = 0; break;}
                                case 1:  {user_layer_selected = 1; break;}
                                case 2:
                                    {
                                        if use_layer_down = 1
                                            {
                                                user_layer_selected = 1; user_layer_iteration = 1;
                                            }
                                        if use_layer_up = 1
                                            {
                                                user_layer_selected = 100000; user_layer_iteration = 4; 
                                            }
                                        break;
                                    }
                                case 3: 
                                    {
                                        if use_layer_down = 1
                                            {
                                                user_layer_selected = 1; user_layer_iteration = 1;
                                            }
                                        if use_layer_up = 1
                                            {
                                                user_layer_selected = 100000; user_layer_iteration = 4; 
                                            }
                                        break;
                                    }
                                case 4:  {user_layer_selected = 100000; break;}
                                case 5:  {user_layer_selected = 4; break;}
                                case 6:  {user_layer_selected = 5; break;}
                                case 7:  {user_layer_selected = 6; break;}
                                case 8:  {user_layer_selected = 7; break;}
                                case 9:  {user_layer_selected = 8; break;}
                                case 10: {user_layer_selected = 9; break;}
                                case 11: {user_layer_selected = -5; break;}
                                case 12: {user_layer_selected = -4; break;}
                                case 13: {user_layer_selected = -3; break;}
                                case 14: {user_layer_selected = -2; break;}
                                case 15: {user_layer_selected = -1; break;}
                            }
                        //Play menu sound
                        audio_play_sound(pause_select,50,false)
                    }
                else
                    {
                        //Display Error Message
                        scr_set_message("Cannot adjust layers while in auto-layer mode!")
                    }
            }
        else
            {
                //Display Error Message
                scr_set_message("Cannot adjust layer depth for objects!")
            }
    }

//Check the snap button
if use_snap_up = 1
    {
        //Increment Current Grid Snap Size
        if use_snap_up = 1 user_grid_iteration += 1;
        if use_snap_down = 1 user_grid_iteration -= 1;
        if user_grid_iteration &gt; 3 user_grid_iteration = 0;
        if user_grid_iteration &lt; 0 user_grid_iteration = 3;
        //Increment Current Grid Snap Size Based On Iteration Position
        switch(user_grid_iteration)
            {
                case 0: {user_grid_snap = 1; break;}
                case 1: {user_grid_snap = 2; break;}
                case 2: {user_grid_snap = 4; break;}
                case 3: {user_grid_snap = 8; break;}
            }
        //Play menu sound
        audio_play_sound(pause_select,50,false)
    }

if user_cursor_mode = 0 and use_tile_menu = 0
    {
        //Prevent The Camera From Scrolling When The Cursor Is Over The Quit Button
        if not (device_mouse_x_to_gui(0) &gt; 318 and device_mouse_x_to_gui(0) &lt; 416
        and     device_mouse_y_to_gui(0) &gt; 4   and device_mouse_y_to_gui(0) &lt; 232)
            {
                if use_cursor_mode = 0
                    {
                        //Modify Camera's Position Based On Cursor's Current Position
                        if device_mouse_x_to_gui(0) &gt; 416 view_xview[view_port] += floor(use_zoom_scroll_speed); //Pan Right
                        if device_mouse_x_to_gui(0) &lt; 16  view_xview[view_port] -= floor(use_zoom_scroll_speed); //Pan Left
                        if device_mouse_y_to_gui(0) &gt; 224 view_yview[view_port] += floor(use_zoom_scroll_speed); //Pan Down
                        if device_mouse_y_to_gui(0) &lt; 16  view_yview[view_port] -= floor(use_zoom_scroll_speed); //Pan Up
        
                        //Do Not Allow The Cursor's X Position Beyond The Boundaries Of The Camera
                        if use_cursor_x &lt; view_xview[view_port] use_cursor_x = view_xview[view_port];
                        if use_cursor_x &gt; view_xview[view_port]+use_zoom_boundary_x-use_zoom_scroll_edge_lock use_cursor_x = view_xview[view_port]+use_zoom_boundary_x-use_zoom_scroll_edge_lock;
                        //Do Not Allow The Cursor's Y Position Beyond The Boundaries Of The Camera
                        if use_cursor_y &lt; view_yview[view_port] use_cursor_y = view_yview[view_port];
                        if use_cursor_y &gt; view_yview[view_port]+use_zoom_boundary_y-use_zoom_scroll_edge_lock use_cursor_y = view_yview[view_port]+use_zoom_boundary_y-use_zoom_scroll_edge_lock;
                    }
                else
                    {
                        //Modify Camera's Position Based On Cursor's Current Position
                        if use_cursor_x &gt; view_xview[view_port]+use_zoom_boundary_x-use_zoom_scroll_border {view_xview[view_port] += floor(use_zoom_scroll_speed); use_cursor_x += floor(use_zoom_scroll_speed);}           //Pan Right
                        if use_cursor_x &lt; view_xview[view_port]+use_zoom_scroll_border                               {view_xview[view_port] -= floor(use_zoom_scroll_speed); use_cursor_x -= floor(use_zoom_scroll_speed);} //Pan Left
                        if use_cursor_y &gt; view_yview[view_port]+use_zoom_boundary_y-use_zoom_scroll_border {view_yview[view_port] += floor(use_zoom_scroll_speed); use_cursor_y += floor(use_zoom_scroll_speed);}           //Pan Down
                        if use_cursor_y &lt; view_yview[view_port]+use_zoom_scroll_border                               {view_yview[view_port] -= floor(use_zoom_scroll_speed); use_cursor_y -= floor(use_zoom_scroll_speed);} //Pan Up

                        //Do Not Allow The Cursor's X Position Beyond The Boundaries Of The Camera
                        if use_cursor_x &lt; view_xview[view_port] use_cursor_x = view_xview[view_port];
                        if use_cursor_x &gt; view_xview[view_port]+use_zoom_boundary_x-use_zoom_scroll_edge_lock use_cursor_x = view_xview[view_port]+use_zoom_boundary_x-use_zoom_scroll_edge_lock;
                        //Do Not Allow The Cursor's Y Position Beyond The Boundaries Of The Camera
                        if use_cursor_y &lt; view_yview[view_port] use_cursor_y = view_yview[view_port];
                        if use_cursor_y &gt; view_yview[view_port]+use_zoom_boundary_y-use_zoom_scroll_edge_lock use_cursor_y = view_yview[view_port]+use_zoom_boundary_y-use_zoom_scroll_edge_lock;
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Hold Events 

//--------------------------------------Mouse Hold Events--------------------------------------//

//Check for events that demand mouse/key/button hold inputs
if (mouse_check_button(joy_mouse_button_left) or use_put_here &gt; 0) and use_delete = 0
    {

        //Create exceptions for specific slope tiles
        var tile_scanner_IDs_exceptional_slope_tiles = 0;
        if tile_exists(use_corner_box_id)
            {
                var tile_scanner_bg_ID = tile_get_background(use_corner_box_id);
                var tile_scanner_result = scr_set_check_exceptional_slope_tiles(tile_scanner_bg_ID);
                if tile_scanner_result = 1
                    {
                        tile_scanner_IDs_exceptional_slope_tiles = 1
                    }
            }
        if ((user_layer_selected = surface_slopes and tile_scanner_IDs_exceptional_slope_tiles = 0)
        or user_layer_selected = surface_enemy_flags or user_layer_selected = surface_flags)
            use_corner_box = 0;
        //Repeat tile based on defined mouse boundary box
        if use_corner_box &gt; 0
            {
                use_corner_box_top_right_x = user_grid_snap_x
                use_corner_box_top_right_y = user_grid_snap_y
                use_tile_menu_cool_down = 16

                //Invoke dragging of tiles earlier if inputs are held
                if use_corner_box &gt;= 5 use_corner_box += 1;
                if use_corner_box = 13 use_corner_box = 1;

                //Calculate if we should change our tile repeating orientation
                //Top-right
                if  use_corner_box_top_right_x &gt; use_corner_box_bottom_left_x
                and use_corner_box_top_right_y &lt; use_corner_box_bottom_left_y
                    {
                        use_corner_box = 1;
                        use_corner_box_bottom_left_x = tile_get_x(use_corner_box_id)
                        use_corner_box_bottom_left_y = tile_get_y(use_corner_box_id)+tile_get_height(use_corner_box_id)
                        use_corner_box_top_right_x = user_grid_snap_x
                        use_corner_box_top_right_y = user_grid_snap_y
                    }
                //Bottom-right
                if  use_corner_box_top_right_x &gt; use_corner_box_bottom_left_x
                and use_corner_box_top_right_y &gt; use_corner_box_bottom_left_y
                    {
                        use_corner_box = 2;
                        use_corner_box_bottom_left_x = tile_get_x(use_corner_box_id)
                        use_corner_box_bottom_left_y = tile_get_y(use_corner_box_id)
                        use_corner_box_top_right_x = user_grid_snap_x
                        use_corner_box_top_right_y = user_grid_snap_y
                    }
                //Bottom-left
                if  use_corner_box_top_right_x &lt; use_corner_box_bottom_left_x
                and use_corner_box_top_right_y &gt; use_corner_box_bottom_left_y
                    {
                        use_corner_box = 3;
                        use_corner_box_bottom_left_x = tile_get_x(use_corner_box_id)+tile_get_width(use_corner_box_id)
                        use_corner_box_bottom_left_y = tile_get_y(use_corner_box_id)
                        use_corner_box_top_right_x = user_grid_snap_x
                        use_corner_box_top_right_y = user_grid_snap_y
                    }
                //Top-left
                if  use_corner_box_top_right_x &lt; use_corner_box_bottom_left_x
                and use_corner_box_top_right_y &lt; use_corner_box_bottom_left_y
                    {
                        use_corner_box = 4;
                        use_corner_box_bottom_left_x = tile_get_x(use_corner_box_id)+tile_get_width(use_corner_box_id)
                        use_corner_box_bottom_left_y = tile_get_y(use_corner_box_id)+tile_get_height(use_corner_box_id)
                        use_corner_box_top_right_x = user_grid_snap_x
                        use_corner_box_top_right_y = user_grid_snap_y
                    }
            }

        //Drawing Tools
        if use_file_menu = 2 and device_mouse_x_to_gui(0) &lt; 314+u_elements
            {
                if user_pen_mode = spr_drawing_cursor
                    {
                        //If the pen size is at defaults, (1px) then simply place a tile
                        if mouse_check_button_pressed(joy_mouse_button_left) or use_put_here = 1
                            {
                                mouse_previous_x = use_cursor_x;
                                mouse_previous_y = use_cursor_y;
                            }

                        scr_draw_scootles(mouse_previous_x,mouse_previous_y,use_cursor_x,use_cursor_y,0)

                        mouse_previous_x = use_cursor_x;
                        mouse_previous_y = use_cursor_y;
                    }
                if user_pen_mode = spr_erasing_cursor
                    {
                        if mouse_check_button_pressed(joy_mouse_button_left) or use_put_here = 1
                            {
                                mouse_previous_x = use_cursor_x;
                                mouse_previous_y = use_cursor_y;
                            }

                        scr_draw_scootles(mouse_previous_x,mouse_previous_y,use_cursor_x,use_cursor_y,user_pen_size)

                        mouse_previous_x = use_cursor_x;
                        mouse_previous_y = use_cursor_y;
                    }
                if user_pen_mode = spr_line_tool
                or user_pen_mode = spr_rectangle_tool
                or user_pen_mode = spr_circle_tool
                    {
                        user_line_tool_active += 1
                        if user_line_tool_active = 1
                            {
                                user_line_tool_x1 = use_cursor_x
                                user_line_tool_y1 = use_cursor_y
                            }
                    }
            }

        //Moving Platform Placer
        if use_fof = 1
            {
                if user_tile_selected = spr_platform_modifier_horizontal
                or user_tile_selected = spr_platform_water_horizontal
                    {
                        user_draw_path_x_1 = use_cursor_x
                        user_draw_path_y_1 = user_draw_path_origin_y
        
                        user_draw_path_x_2 = user_draw_path_origin_x
                        user_draw_path_y_2 = user_draw_path_origin_y
                    }
                if user_tile_selected = spr_platform_modifier_vertical
                or user_tile_selected = spr_platform_water_vertical
                    {
                        user_draw_path_x_1 = user_draw_path_origin_x
                        user_draw_path_y_1 = use_cursor_y
        
                        user_draw_path_x_2 = user_draw_path_origin_x
                        user_draw_path_y_2 = user_draw_path_origin_y
                    }
            }
    }

//Disable mouse/key/button hold events, when inputs are no longer provided
if mouse_check_button_released(joy_mouse_button_left) or (gamepad_button_check_released(parent.joy_modern_id,parent.joy_put_here))
or (keyboard_check_released(key_put_here))
    {
        if use_corner_box &gt;= 5 use_corner_box = 0;
        if use_corner_box &gt; 0 and use_corner_box &lt; 5
            {
                var use_corner_counter_x = 0;
                var use_corner_counter_y = 0;
                use_corner_width  = abs(use_corner_box_bottom_left_x - use_corner_box_top_right_x)
                use_corner_height = abs(use_corner_box_bottom_left_y - use_corner_box_top_right_y)
                use_tile_width  = tile_get_width(use_corner_box_id);
                use_tile_height = tile_get_height(use_corner_box_id);

                //How many tiles can we create?
                use_corner_width_result  = floor(use_corner_width / use_tile_width);
                use_corner_height_result = floor(use_corner_height / use_tile_height);

                //Top-right corner
                if use_corner_box = 1
                    {
                        while(use_corner_counter_y &lt; use_corner_height_result)
                            {
                                if array_length_1d(tile_get_ids()) &gt; user_tile_limit_warning_value break;
                                tile_add(tile_get_background(use_corner_box_id),0,0,tile_get_width(use_corner_box_id),
                                tile_get_height(use_corner_box_id),
                                use_corner_box_bottom_left_x+(use_tile_width*use_corner_counter_x),
                                use_corner_box_bottom_left_y-tile_get_height(use_corner_box_id)-(use_tile_height*use_corner_counter_y),
                                tile_get_depth(use_corner_box_id))
                                use_corner_counter_x += 1;
                                if (use_corner_counter_x &gt; use_corner_width_result)
                                    {
                                        use_corner_counter_x = 0;
                                        use_corner_counter_y += 1;
                                    }
                            }
                    }
                //Bottom-right corner
                if use_corner_box = 2
                    {
                        while(use_corner_counter_y &lt; use_corner_height_result)
                            {
                                if array_length_1d(tile_get_ids()) &gt; user_tile_limit_warning_value break;
                                tile_add(tile_get_background(use_corner_box_id),0,0,tile_get_width(use_corner_box_id),
                                tile_get_height(use_corner_box_id),
                                use_corner_box_bottom_left_x+(use_tile_width*use_corner_counter_x),
                                use_corner_box_bottom_left_y+(use_tile_height*use_corner_counter_y),
                                tile_get_depth(use_corner_box_id))
                                use_corner_counter_x += 1;
                                if (use_corner_counter_x &gt; use_corner_width_result)
                                    {
                                        use_corner_counter_x = 0;
                                        use_corner_counter_y += 1;
                                    }
                            }
                    }
                //Bottom-left corner
                if use_corner_box = 3
                    {
                        while(use_corner_counter_y &lt; use_corner_height_result)
                            {
                                if array_length_1d(tile_get_ids()) &gt; user_tile_limit_warning_value break;
                                tile_add(tile_get_background(use_corner_box_id),0,0,tile_get_width(use_corner_box_id),
                                tile_get_height(use_corner_box_id),
                                use_corner_box_bottom_left_x-tile_get_width(use_corner_box_id)-(use_tile_width*use_corner_counter_x),
                                use_corner_box_bottom_left_y+(use_tile_height*use_corner_counter_y),
                                tile_get_depth(use_corner_box_id))
                                use_corner_counter_x += 1;
                                if (use_corner_counter_x &gt; use_corner_width_result)
                                    {
                                        use_corner_counter_x = 0;
                                        use_corner_counter_y += 1;
                                    }
                            }
                    }
                //Top-left corner
                if use_corner_box = 4
                    {
                        while(use_corner_counter_y &lt; use_corner_height_result)
                            {
                                if array_length_1d(tile_get_ids()) &gt; user_tile_limit_warning_value break;
                                tile_add(tile_get_background(use_corner_box_id),0,0,tile_get_width(use_corner_box_id),
                                tile_get_height(use_corner_box_id),
                                use_corner_box_bottom_left_x-tile_get_width(use_corner_box_id)-(use_tile_width*use_corner_counter_x),
                                use_corner_box_bottom_left_y-tile_get_height(use_corner_box_id)-(use_tile_height*use_corner_counter_y),
                                tile_get_depth(use_corner_box_id))
                                use_corner_counter_x += 1;
                                if (use_corner_counter_x &gt; use_corner_width_result)
                                    {
                                        use_corner_counter_x = 0;
                                        use_corner_counter_y += 1;
                                    }
                            }
                    }
                if array_length_1d(tile_get_ids()) &gt; user_tile_limit_warning_value
                    scr_set_message("Tile limit reached!  Remove tiles to optimize.");
                else
                    audio_play_sound(snd_switch,50,false);
                //Disable defined boundary box
                use_corner_box = 0
            }

        //Drawing Tools
        if user_line_tool_active &gt;= 1
            {
                if user_pen_mode = spr_line_tool
                    scr_draw_scootles(user_line_tool_x1,user_line_tool_y1,use_cursor_x,use_cursor_y,0);

                var pen_distance = point_distance(user_line_tool_x1,user_line_tool_y1,use_cursor_x,use_cursor_y);
                if user_pen_mode = spr_circle_tool and pen_distance &lt; 64
                    {
                        //Set Rotation Axis
                        var pen_angle = 0;
                        var pen_x = user_line_tool_x1 + lengthdir_x(pen_distance,pen_angle);
                        var pen_y = user_line_tool_y1 + lengthdir_y(pen_distance,pen_angle);
                        while(pen_angle &lt;= 360)
                            {
                                pen_angle += 1
                                pen_x = user_line_tool_x1 + lengthdir_x(pen_distance,pen_angle)
                                pen_y = user_line_tool_y1 + lengthdir_y(pen_distance,pen_angle)
                                //var pen_tile_id = tile_layer_find(surface_paint,pen_x,pen_y);
                                //if pen_tile_id != -1 tile_delete(pen_tile_id);
                                if array_length_1d(tile_get_ids()) &gt; user_tile_limit_warning_value break;
                                tile_add(user_pen_color,0,0,1,1,pen_x,pen_y,surface_paint);
                            }
                        if array_length_1d(tile_get_ids()) &gt;= user_tile_limit_warning_value scr_set_message("Tile limit reached!  Remove tiles to optimize.");
                    }
                if user_pen_mode = spr_rectangle_tool and pen_distance &lt; 64
                    {
                        var pen_x = user_line_tool_x1;
                        var pen_y = user_line_tool_y1;
                        var pen_direction = 0;
                        var pen_compass = 0;
                        var pen_x_1 = user_line_tool_x1;
                        var pen_y_1 = user_line_tool_y1;
                        var pen_x_2 = use_cursor_x;
                        var pen_y_2 = use_cursor_y;
                        //Determine direction of drawing
                        if use_cursor_x &lt; user_line_tool_x1
                            {
                                pen_x = use_cursor_x;
                                pen_x_1 = use_cursor_x;
                                pen_x_2 = user_line_tool_x1;
                            }
                        if use_cursor_y &lt; user_line_tool_y1
                            {
                                pen_y = use_cursor_y;
                                pen_y_1 = use_cursor_y;
                                pen_y_2 = user_line_tool_y1;
                            }
                        while(pen_x)
                            {
                                if array_length_1d(tile_get_ids()) &gt; user_tile_limit_warning_value break;
                                tile_add(user_pen_color,0,0,1,1,pen_x,pen_y,surface_paint);
                                switch(pen_direction)
                                    {
                                        case 0: {pen_x += 1; break;}
                                        case 1: {pen_y += 1; break;}
                                        case 2: {pen_x -= 1; break;}
                                        case 3: {pen_y -= 1; break;}
                                    }
                                if pen_x &gt;= pen_x_2 and pen_direction = 0 pen_direction = 1;
                                if pen_y &gt;= pen_y_2 and pen_direction = 1 pen_direction = 2;
                                if pen_x &lt;= pen_x_1 and pen_direction = 2 pen_direction = 3;
                                if pen_y &lt;= pen_y_1 and pen_direction = 3 break;
                            }
                        if array_length_1d(tile_get_ids()) &gt;= user_tile_limit_warning_value scr_set_message("Tile limit reached!  Remove tiles to optimize.");
                    }
                user_line_tool_active = 0
            }

        //Moving Platform Placer
        if use_fof = 1
            {
                if user_tile_selected = spr_platform_modifier_horizontal
                    {
                        var temp_diff = abs(abs(user_draw_path_x_1)-abs(user_draw_path_x_2));
                        if temp_diff &gt; 48
                            {
                                if user_draw_path_x_1 &lt; user_draw_path_x_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1-32,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-32,user_draw_path_y_1-16,surface_flags)
        
                                        tile_add(mu_fof_11,0,0,background_get_width(mu_fof_3),background_get_height(mu_fof_3),
                                        user_draw_path_x_1+(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,
                                        user_draw_path_y_1-20,surface_slopes)
                                        instance_create(user_draw_path_x_1+(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,user_draw_path_y_1-16,obj_platform_hor)
                                        audio_play_sound(snd_switch,50,false)
                                    }
                                if user_draw_path_x_1 &gt; user_draw_path_x_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1+32,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-32,user_draw_path_y_1-16,surface_flags)
            
                                        tile_add(mu_fof_11,0,0,background_get_width(mu_fof_3),background_get_height(mu_fof_3),
                                        user_draw_path_x_1-(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,
                                        user_draw_path_y_1-20,surface_slopes)
                                        instance_create(user_draw_path_x_1-(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,user_draw_path_y_1-16,obj_platform_hor)
                                        audio_play_sound(snd_switch,50,false)
                                    }
                            }
                        else
                            scr_set_message("Defined path must be greater than 48 pixels");
                    }
                if user_tile_selected = spr_platform_modifier_vertical
                    {
                        var temp_diff = abs(abs(user_draw_path_y_1)-abs(user_draw_path_y_2));
                        if temp_diff &gt; 48
                            {
                                if user_draw_path_y_1 &lt; user_draw_path_y_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1-16,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-16,user_draw_path_y_2-16,surface_flags)
        
                                        tile_add(mu_fof_11,0,0,background_get_width(mu_fof_3),background_get_height(mu_fof_3),
                                        user_draw_path_x_1-24,
                                        user_draw_path_y_1+(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-20,surface_slopes)
                                        instance_create(user_draw_path_x_1-16,user_draw_path_y_1+(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-16,obj_platform_ver)
                                        audio_play_sound(snd_switch,50,false)
                                    }
                                if user_draw_path_y_1 &gt; user_draw_path_y_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1-16,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-16,user_draw_path_y_2-16,surface_flags)
        
                                        tile_add(mu_fof_11,0,0,background_get_width(mu_fof_3),background_get_height(mu_fof_3),
                                        user_draw_path_x_1-24,
                                        user_draw_path_y_1-(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-20,surface_slopes)
                                        instance_create(user_draw_path_x_1-16,user_draw_path_y_1-(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-16,obj_platform_ver)
                                        audio_play_sound(snd_switch,50,false)
                                    }
                            }
                        else
                            scr_set_message("Defined path must be greater than 48 pixels");
                    }
                if user_tile_selected = spr_platform_water_horizontal
                    {
                        var temp_diff = abs(abs(user_draw_path_x_1)-abs(user_draw_path_x_2));
                        if temp_diff &gt; 48
                            {
                                if user_draw_path_x_1 &lt; user_draw_path_x_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1-32,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-32,user_draw_path_y_1-16,surface_flags)
        
                                        var water_cube_instance_id = instance_create(user_draw_path_x_1+(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,user_draw_path_y_1-20,obj_water_cube);
                                        var water_cube_platform_id = instance_create(user_draw_path_x_1+(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,user_draw_path_y_1-16,obj_water_platform_hor);
                                        water_cube_platform_id.instance_ID = water_cube_instance_id;
                                        audio_play_sound(snd_switch,50,false)
                                    }
                                if user_draw_path_x_1 &gt; user_draw_path_x_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1+32,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-32,user_draw_path_y_1-16,surface_flags)
            
                                        var water_cube_instance_id = instance_create(user_draw_path_x_1-(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,user_draw_path_y_1-20,obj_water_cube);
                                        var water_cube_platform_id = instance_create(user_draw_path_x_1-(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-24,user_draw_path_y_1-16,obj_water_platform_hor);
                                        water_cube_platform_id.instance_ID = water_cube_instance_id;
                                        audio_play_sound(snd_switch,50,false)
                                    }
                            }
                        else
                            scr_set_message("Defined path must be greater than 48 pixels");
                    }
                if user_tile_selected = spr_platform_water_vertical
                    {
                        var temp_diff = abs(abs(user_draw_path_y_1)-abs(user_draw_path_y_2));
                        if temp_diff &gt; 48
                            {
                                if user_draw_path_y_1 &lt; user_draw_path_y_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1-16,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-16,user_draw_path_y_2-16,surface_flags)
        
                                        instance_create(user_draw_path_x_1-24,user_draw_path_y_1+(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-20,obj_water_cube)
                                        instance_create(user_draw_path_x_1-16,user_draw_path_y_1+(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-16,obj_water_platform_ver)
                                        audio_play_sound(snd_switch,50,false)
                                    }
                                if user_draw_path_y_1 &gt; user_draw_path_y_2
                                    {
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_1-16,user_draw_path_y_1-16,surface_flags)
                                        tile_add(tile_reverse_course_32,0,0,background_get_width(tile_reverse_course_32),background_get_height(tile_reverse_course_32),user_draw_path_x_2-16,user_draw_path_y_2-16,surface_flags)
        
                                        instance_create(user_draw_path_x_1-24,user_draw_path_y_1-(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-20,obj_water_cube)
                                        instance_create(user_draw_path_x_1-16,user_draw_path_y_1-(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-16,obj_water_platform_ver)
                                        audio_play_sound(snd_switch,50,false)
                                    }
                            }
                        else
                            scr_set_message("Defined path must be greater than 48 pixels");
                    }
                use_fof = 0
            }
        if background_exists(user_move_tile_ID)
                {
                    scr_set_move_refresh_offsets();
                    tile_add(user_move_tile_ID,0,0,background_get_width(user_move_tile_ID),background_get_height(user_move_tile_ID),
                    user_grid_snap_x+user_move_offset_x,user_grid_snap_y+user_move_offset_y,user_move_layer_ID)
                    //Place 2D tile logic controller, if it has double-sided collisions
                    var yes = 0;
                    yes = scr_set_check_slope_tiles(user_tile_selected);
                    if yes = 1 instance_create(user_grid_snap_x,user_grid_snap_y,obj_2D_tile_logic);
                    user_move_tile_ID = -1
                    audio_play_sound(snd_switch,50,false)
                }
    }

//Clear held tile's ID after letting go of the mouse button
if mouse_check_button_released(joy_mouse_button_left) or (gamepad_button_check_released(parent.joy_modern_id,parent.joy_put_here))
or (keyboard_check_released(key_put_here))
    user_move_tile_ID = -1;

//--------------------------------------Mouse Hold Right--------------------------------------//

//Click-Drag delete tiles by holding right mouse button
if mouse_check_button(joy_mouse_button_right) or (gamepad_button_check(parent.joy_modern_id,parent.joy_delete))
or (keyboard_check(key_delete))
    {
        use_delete_selection_box_timer += 1
        if use_tile_menu_cool_down = 0 and use_file_menu = 0 and use_tile_menu = 0
        and use_delete_selection_box_timer &gt;= 7 and parent.user_cursor_mode = 1 and user_place_allow = 0
            {
                if use_delete_selection_box_timer = 8 and device_mouse_x_to_gui(0) &lt; user_editor_hud_offset-6
                    {
                        use_delete_selection_box_x_0 = user_grid_snap_x
                        use_delete_selection_box_y_0 = user_grid_snap_y
                        use_delete_selection_box_active = 1
                    }
                use_delete_selection_box_x_1 = user_grid_snap_x
                use_delete_selection_box_y_1 = user_grid_snap_y
                //Set some boundaries on how far out selections can go
                if use_delete_selection_box_x_1 &gt; use_delete_selection_box_x_0+512
                    use_delete_selection_box_x_1 = use_delete_selection_box_x_0+512;

                if use_delete_selection_box_y_1 &gt; use_delete_selection_box_y_0+512
                    use_delete_selection_box_y_1 = use_delete_selection_box_y_0+512;

                if use_delete_selection_box_x_1 &lt; use_delete_selection_box_x_0-512
                    use_delete_selection_box_x_1 = use_delete_selection_box_x_0-512;

                if use_delete_selection_box_y_1 &lt; use_delete_selection_box_y_0-512
                    use_delete_selection_box_y_1 = use_delete_selection_box_y_0-512;
            }
        if use_file_menu = 2
            use_delete_selection_box_active = 0;
    }
//Perform Deletion Function
if mouse_check_button_released(joy_mouse_button_right) or (gamepad_button_check_released(parent.joy_modern_id,parent.joy_delete))
or (keyboard_check_released(key_delete))
    {
        use_delete_selection_box_timer = 0
        if use_delete_selection_box_active = 1 and parent.user_cursor_mode = 1
            {
                //Initialize Variables
                var tile_scanner_x = use_delete_selection_box_x_0;
                var tile_scanner_y = use_delete_selection_box_y_0;
                var tile_scanner_start_x = use_delete_selection_box_x_0;
                var tile_scanner_count_x = 0;
                var tile_scanner_count_y = 0;
                //Get the difference in pixels between each point, *no matter which direction the mouse was dragged*
                var tile_scanner_width  = abs(abs(use_delete_selection_box_x_0)-abs(use_delete_selection_box_x_1))
                var tile_scanner_height = abs(abs(use_delete_selection_box_y_0)-abs(use_delete_selection_box_y_1))
                //Change starting point if the mouse was dragged in the opposite direction
                if use_delete_selection_box_x_1 &lt; use_delete_selection_box_x_0
                    {
                        tile_scanner_x = use_delete_selection_box_x_1;
                        tile_scanner_start_x = use_delete_selection_box_x_1;
                    }
                if use_delete_selection_box_y_1 &lt; use_delete_selection_box_y_0
                    {
                        tile_scanner_y = use_delete_selection_box_y_1;
                    }
                //Delete on all layers
                if use_tile_switching_mode = 0
                    {
                        while(tile_scanner_count_y &lt; tile_scanner_height)
                            {
                                var instance_delete = collision_point(tile_scanner_x,tile_scanner_y,obj_delete_parent,false,true);

                                if instance_exists(instance_delete)
                                    instance_destroy(instance_delete,true);

                                //Layer 0
                                var tile_scanner = tile_layer_find(0,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner)
                                    {
                                        //Collect background ID of the tile
                                        var tile_scanner_ID = tile_get_background(tile_scanner);
        
                                        //Check for exceptional tiles the editor should be ignoring (Such as object-specific flag tiles)
                                        var tile_scanner_IDs_exceptional_tiles = scr_check_layer_surface(tile_scanner_ID)

                                        //If the exceptional tile scan returned positive, delete any tiles found underneath the player's cursor
                                        if tile_scanner_IDs_exceptional_tiles = 1
                                            {
                                                tile_delete(tile_scanner)
                                            }
                                    }
                                //Layer 1
                                var tile_scanner = tile_layer_find(1,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner)
                                    {
                                        //Collect background ID of the tile
                                        var tile_scanner_ID = tile_get_background(tile_scanner);
        
                                        //Check for exceptional tiles the editor should be ignoring (Such as object-specific flag tiles)
                                        var tile_scanner_IDs_exceptional_tiles = scr_check_layer_surface(tile_scanner_ID)

                                        //If the exceptional tile scan returned positive, delete any tiles found underneath the player's cursor
                                        if tile_scanner_IDs_exceptional_tiles = 1
                                            {
                                                tile_delete(tile_scanner)
                                            }
                                    }
                                //Layer 4
                                var tile_scanner = tile_layer_find(4,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer 5
                                var tile_scanner = tile_layer_find(5,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer 6
                                var tile_scanner = tile_layer_find(6,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer 7
                                var tile_scanner = tile_layer_find(7,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer 8
                                var tile_scanner = tile_layer_find(8,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer 9
                                var tile_scanner = tile_layer_find(9,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer -1
                                var tile_scanner = tile_layer_find(-1,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer -2
                                var tile_scanner = tile_layer_find(-2,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer -3
                                var tile_scanner = tile_layer_find(-3,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer -4
                                var tile_scanner = tile_layer_find(-4,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);
                                //Layer -5
                                var tile_scanner = tile_layer_find(-5,tile_scanner_x,tile_scanner_y);
                                if tile_exists(tile_scanner) tile_delete(tile_scanner);

                                tile_scanner_x += 8
                                tile_scanner_count_x += 8
                                if tile_scanner_count_x &gt; tile_scanner_width
                                    {
                                        tile_scanner_x = tile_scanner_start_x
                                        tile_scanner_y += 8
                                        tile_scanner_count_x = 0
                                        tile_scanner_count_y += 8
                                    }
                            }
                    }
                //Delete on Specific Layers Only
                if use_tile_switching_mode = 1
                    {
                        //Delete Tiles
                        if user_cursor_display_mode = 0
                            {
                                while(tile_scanner_count_y &lt; tile_scanner_height)
                                    {
                                        var tile_scanner = tile_layer_find(user_layer_selected,tile_scanner_x,tile_scanner_y);

                                        if tile_exists(tile_scanner)
                                            {
                                                //Collect background ID of the tile
                                                var tile_scanner_ID = tile_get_background(tile_scanner);
                
                                                //Check for exceptional tiles the editor should be ignoring (Such as object-specific flag tiles)
                                                var tile_scanner_IDs_exceptional_tiles = scr_check_layer_surface(tile_scanner_ID)
        
                                                //If the exceptional tile scan returned positive, delete any tiles found underneath the player's cursor
                                                if tile_scanner_IDs_exceptional_tiles = 1
                                                    {
                                                        tile_delete(tile_scanner)
                                                    }
                                            }
                                        tile_scanner_x += 4
                                        tile_scanner_count_x += 4
                                        if tile_scanner_count_x &gt; tile_scanner_width
                                            {
                                                tile_scanner_x = tile_scanner_start_x
                                                tile_scanner_y += 4
                                                tile_scanner_count_x = 0
                                                tile_scanner_count_y += 4
                                            }
                                    }
                            }
                        //Delete Objects
                        if user_cursor_display_mode = 1
                            {
                                while(tile_scanner_count_y &lt; tile_scanner_height)
                                    {
                                        var instance_delete = collision_point(tile_scanner_x,tile_scanner_y,obj_delete_parent,false,true);
        
                                        if instance_exists(instance_delete)
                                            instance_destroy(instance_delete,true);
        
                                        tile_scanner_x += 4
                                        tile_scanner_count_x += 4
                                        if tile_scanner_count_x &gt; tile_scanner_width
                                            {
                                                tile_scanner_x = tile_scanner_start_x
                                                tile_scanner_y += 2
                                                tile_scanner_count_x = 0
                                                tile_scanner_count_y += 2
                                            }
                                    }
                            }
                    }
                use_delete_selection_box_active = 0
            }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tile Depth Override System

//     Tile Depth Override Systems     //
//-------------------------------------//

if use_tile_switching_mode = 0 and use_tile_properties_enable = 0 and user_cursor_display_mode = 0 and use_tile_menu = 0 and device_mouse_x_to_gui(0) &lt; user_editor_hud_offset-6
    {
        //Tile Layer 0 (Flats)
        var use_tile_scanner_0 = tile_layer_find(0,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_0) {user_layer_iteration = 0; user_layer_selected = 0;}
        //Tile Layer 1 (Slopes)
        var use_tile_scanner_1 = tile_layer_find(1,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_1) {user_layer_iteration = 1; user_layer_selected = 1;}
        //Tile Layer 2 (FOFs)
        //var use_tile_scanner_2 = tile_layer_find(2,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_2) {user_layer_iteration = 2; user_layer_selected = 2;}
        //Tile Layer 3 (Items)
        //var use_tile_scanner_3 = tile_layer_find(3,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_3) {user_layer_iteration = 3; user_layer_selected = 3;}
        //Tile Layer 100000 (Flags)
        var use_tile_scanner_4 = tile_layer_find(100000,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_4) {user_layer_iteration = 4; user_layer_selected = 100000;}
        //Tile Layer 4 (Scenery)
        var use_tile_scanner_5 = tile_layer_find(4,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_5) {user_layer_iteration = 5; user_layer_selected = 4;}
        //Tile Layer 5 (Scenery)
        var use_tile_scanner_6 = tile_layer_find(5,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_6) {user_layer_iteration = 6; user_layer_selected = 5;}
        //Tile Layer 6 (Scenery)
        var use_tile_scanner_7 = tile_layer_find(6,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_7) {user_layer_iteration = 7; user_layer_selected = 6;}
        //Tile Layer 7 (Scenery)
        var use_tile_scanner_8 = tile_layer_find(7,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_8) {user_layer_iteration = 8; user_layer_selected = 7;}
        //Tile Layer 8 (Scenery)
        var use_tile_scanner_9 = tile_layer_find(8,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_9) {user_layer_iteration = 9; user_layer_selected = 8;}
        //Tile Layer 9 (Scenery)
        var use_tile_scanner_10 = tile_layer_find(9,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_10) {user_layer_iteration = 10; user_layer_selected = 9;}
        //Tile Layer -1 (Scenery)
        var use_tile_scanner_15 = tile_layer_find(-1,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_15) {user_layer_iteration = 15; user_layer_selected = -1;}
        //Tile Layer -2 (Scenery)
        var use_tile_scanner_14 = tile_layer_find(-2,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_14) {user_layer_iteration = 14; user_layer_selected = -2;}
        //Tile Layer -3 (Scenery)
        var use_tile_scanner_13 = tile_layer_find(-3,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_13) {user_layer_iteration = 13; user_layer_selected = -3;}
        //Tile Layer -4 (Scenery)
        var use_tile_scanner_12 = tile_layer_find(-4,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_12) {user_layer_iteration = 12; user_layer_selected = -4;}
        //Tile Layer -5 (Scenery)
        var use_tile_scanner_11 = tile_layer_find(-5,use_cursor_x,use_cursor_y); if tile_exists(use_tile_scanner_11) {user_layer_iteration = 11; user_layer_selected = -5;}
    }

//While in object layer mode, disable all tile interactions
if user_cursor_display_mode = 1 user_layer_selected = -100000;

//Return to the default tile layer mode, after selecting a tile from the tile menu
if user_cursor_display_mode = 0 and user_layer_selected = -100000
    {
        user_layer_iteration = 0
        user_layer_selected = 0
    }

//Play Particle Effect
if use_confirm &gt; 0
    {
        if use_confirm = 1
            {
                use_particle_frame = 0
                use_particle_x = use_cursor_x
                use_particle_y = use_cursor_y
                use_confirm = 2
            }
        if use_confirm = 2
            {
                use_particle_frame += 1.25
                if use_particle_frame &gt; 13.8
                    {
                        use_particle_frame = 0
                        use_particle_x = 0
                        use_particle_y = 0
                        use_confirm = 0
                    }
            }
    }

//     Camera Snapping Systems     //
//---------------------------------//

//Override any previous decisions made by the camera, if the camera is touching the borders of the room

//Prevent camera from panning beyond the beginning of the room
if view_xview[view_port] &lt; 0 view_xview[view_port] = 0;
//As well as the end of the room
if view_xview[view_port] &gt; room_width-parent.internal_resolution[0] view_xview[view_port] = room_width-parent.internal_resolution[0];
//Prevent camera from panning above the room
if view_yview[view_port] &lt;= 0 view_yview[view_port] = 0; 
//As well as below the room
if view_yview[view_port] &gt;= room_height-parent.internal_resolution[1] view_yview[view_port] = room_height-parent.internal_resolution[1];

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Delete Editor Font From Memory
font_delete(editor_font)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shang Mu Architect Menu And Notifications

//Draw Shang Mu Architect Menu
switch(use_tile_menu)
    {
        //Draw the Editor HUD
        case 0:
            {
                //Editor HUD
                if use_file_menu = 0 
                    {
                        draw_background_ext(ui_hud,user_editor_hud_offset,0,1,1,0,c_white,use_tile_menu_alpha)
                        if user_cursor_mode = 0 or user_cursor_mode = -1
                            draw_background_ext(ui_hud_captions,user_editor_hud_offset,0,1,1,0,c_white,use_tile_menu_alpha);
                        if user_cursor_mode &gt; 0 draw_background_ext(ui_function_keys,user_editor_hud_offset+12,160,1,1,0,c_white,1);
                        draw_background_ext(ui_collapse_editor_HUD,user_editor_hud_offset-2,113,1,1,0,c_white,use_tile_menu_alpha)
                        if (use_stamp_state = 0 and parent.user_cursor_mode = 1)
                            {
                                draw_background_ext(ui_stamp_selector,user_editor_hud_offset+9,158,1,1,0,c_white,use_tile_menu_alpha);
                                //Draw Background Thumbnails
                                var background_thumbnail_count = 0;
                                var background_thumbnail_x = user_editor_hud_offset+12;
                                var background_thumbnail_y = 172;
                                while(background_thumbnail_count &lt; 10)
                                    {
                                        draw_sprite_stretched(use_stamp_list[background_thumbnail_count],0,background_thumbnail_x,background_thumbnail_y,14,14)
                                        background_thumbnail_x += 17
                                        if background_thumbnail_x &gt; user_editor_hud_offset+94
                                            {
                                                background_thumbnail_x = user_editor_hud_offset+12
                                                background_thumbnail_y += 17
                                            }
                                        background_thumbnail_count += 1
                                    }
                            }
                        if use_player_spawner = 1
                            {
                                draw_background_ext(ui_hud_spawner,user_editor_hud_offset,0,1,1,0,c_white,use_tile_menu_alpha)
                                var frame_max = 11;
                                switch(parent.skin)
                                    {
                                        case spr_lilac: {frame_max = 11; break;}
                                        case spr_carol: {frame_max = 11; break;}
                                        case spr_milla: {frame_max = 7;  break;}
                                        case spr_spade: {frame_max = 10; break;}
                                    }
                                
                                user_player_spawner_frame += 0.125
                                
                                if user_player_spawner_frame &gt; frame_max + 0.8
                                    user_player_spawner_frame = 0;
                                draw_sprite_ext(parent.skin,user_player_spawner_frame,user_editor_hud_offset+85,40,0.25,0.25,0,c_white,use_tile_menu_alpha)
                            }
                    }
                //File Dialogue Menu (Page 1)
                if use_file_menu = 1
                    {
                        draw_background_ext(ui_file_menu,314,0,1,1,0,c_white,use_tile_menu_alpha);
                        draw_set_font(parent.text_font_academy)
                        draw_set_halign(fa_center)
                        scr_set_background_string();
                        draw_text_ext_transformed(367,156,use_bg_name_string,21,200,0.75,0.75,0);
                        //Draw Weather String
                        draw_text_ext_transformed(367,181,use_weather_conditions,21,200,0.75,0.75,0);
                        draw_text_ext_transformed(367,207,use_enemy_mode_conditions,21,146,0.75,0.75,0);
                        draw_set_halign(fa_left)
                        //Draw Health Petals
                        draw_sprite(spr_start_hp_bar,use_health_petal_mod,337,12);
                    }
                //Drawing Mode HUD
                if use_file_menu = 2
                    {
                        draw_background_ext(ui_hud_drawing_mode,user_editor_hud_offset,0,1,1,0,c_white,use_tile_menu_alpha)
                        draw_background_ext(user_pen_color,324+u_elements,93,10,10,0,c_white,use_tile_menu_alpha)
                        draw_background_ext(ui_collapse_editor_HUD,user_editor_hud_offset-2,113,1,1,0,c_white,use_tile_menu_alpha)
                        //Draw Cursor's X/Y Positions
                        draw_set_font(editor_font)
                        draw_set_color(c_white)
                        draw_text_transformed(340+u_elements,160,string(use_cursor_x),1,1,0)
                        draw_text_transformed(340+u_elements,175,string(use_cursor_y),1,1,0)
                    }
                //File Dialogue Menu (Page 2)
                if use_file_menu = 3
                    {
                        draw_background_ext(ui_file_menu_pg_1,314,0,1,1,0,c_white,use_tile_menu_alpha);
                        draw_set_font(parent.text_font_academy)
                        draw_set_halign(fa_center)
                        draw_text_ext_transformed(367,72,use_win_condition,21,200,0.75,0.75,0);
                        if use_auto_save = 0
                            draw_text_ext_transformed(367,101,"Off",21,200,0.75,0.75,0);
                        if use_auto_save = 1
                            draw_text_ext_transformed(367,101,"On",21,200,0.75,0.75,0);
                        if use_player_spawner = 0
                            draw_text_ext_transformed(367,132,"Spawn On-Screen",21,200,0.75,0.75,0);
                        if use_player_spawner = 1
                            draw_text_ext_transformed(367,132,"Spawn At Point",21,200,0.75,0.75,0);
                        draw_set_halign(fa_left)
                        //Draw Health Petals
                        draw_sprite(spr_start_hp_bar,use_health_petal_mod,337,12);
                    }

                use_tile_menu_alpha = 1
                //Modify Alpha Transparency When Player Mode Is Active
                if user_cursor_mode = 1
                    {
                        use_tile_menu_alpha = 0.5
                        //Draw Edit Menu Item
                        draw_background_ext(ui_edit,323+u_elements,142,1,1,0,c_white,1)
                    }
                if (user_cursor_mode = 0 or user_cursor_mode = -1) and (use_file_menu = 0 or use_file_menu = 2)
                    {
                        //Draw Play Menu Item
                        draw_background_ext(ui_play,323+u_elements,142,1,1,0,c_white,use_tile_menu_alpha)
                    }
                if  user_cursor_mode = 0 and use_file_menu = 0 and user_editor_hud_state = 0 and use_player_spawner = 0
                and device_mouse_x_to_gui(0) &gt;= 323 and device_mouse_y_to_gui(0) &gt;= 142
                and device_mouse_x_to_gui(0) &lt;= 365 and device_mouse_y_to_gui(0) &lt;= 156
                    {
                        //Fade Effect For The Player's Sprite
                        if use_player_animation_direction = 1 use_player_animation_frame += 0.01;
                        if use_player_animation_direction = 0 use_player_animation_frame -= 0.01;
                        if use_player_animation_frame &gt; 0.75 use_player_animation_direction = 0;
                        if use_player_animation_frame &lt; 0.25 use_player_animation_direction = 1;
                        if use_background != 0 draw_set_blend_mode(bm_add);
                        var use_draw_skin = parent.skin;
                        if (parent.alt_skin = 1 and parent.skin = spr_carol)
                            use_draw_skin = spr_carol_old;
                        if (parent.alt_skin = 2 and parent.skin = spr_carol)
                            use_draw_skin = spr_carol_new;
                        draw_sprite_ext(use_draw_skin,0,213,120+24,use_zoom_additive_player_scaling,use_zoom_additive_player_scaling,0,c_white,use_player_animation_frame)
                        draw_set_blend_mode(bm_normal)
                    }
                //Draw Warning Meter
                if (use_file_menu != 1 and use_file_menu != 3)
                    {
                        draw_background_ext(ui_tile_limit_meter,user_editor_hud_offset+21,5,1,1,0,c_white,use_tile_menu_alpha)
                        if tile_get_count() &gt; user_tile_limit_warning_value
                            {
                                user_tile_limit_warning_frame += 0.15
                                if user_tile_limit_warning_frame &gt; 1.8 user_tile_limit_warning_frame = 0;
                                draw_sprite_stretched_ext(spr_tile_limit_meter,user_tile_limit_warning_frame,user_editor_hud_offset+22,5,66,5,c_white,use_tile_menu_alpha)
                                if !audio_is_playing(character_parry)
                                    {
                                        audio_play_sound(character_parry,50,false)
                                        scr_set_message("Tile limit reached!  Remove tiles to optimize.")
                                    }
                            }
                        else
                            draw_sprite_stretched_ext(spr_tile_limit_meter,0,user_editor_hud_offset+22,5,array_length_1d(tile_get_ids())*0.004125,5,c_white,use_tile_menu_alpha);
                        draw_background_ext(ui_tile_limit_meter_frame,user_editor_hud_offset+21,5,1,1,0,c_white,use_tile_menu_alpha)
                    }

                //Align Drawn Zoom Scaling Factor Notifications To The Right
                if  parent.debug_hud = 1
                and use_move_notification_enabled = 0
                and use_move_notification_disabled = 0
                and use_current_song_notification_timer = 0
                and use_tile_switching_mode_notification = 0
                and use_tile_switching_mode_notification_disabled = 0
                and parent.general_notifications[2] = 0
                and parent.general_notifications[1] = 0
                and parent.general_notifications[0] = 0
                    {
                        var use_scale_string = "";
                        switch(use_zoom_position)
                            {
                                //Draw Zoom Scaling Factor At 0.5x Scales
                                case 0: {use_scale_string = "50%" break;}
                                //Ignore Drawing Notification At 1x Scales
                                case 1: {use_scale_string = "" break;}
                                //Draw Zoom Scaling Factor At 1.5x Scales
                                case 2: {use_scale_string = "150%" break;}
                                //Draw Zoom Scaling Factor At 2x Scales
                                case 3: {use_scale_string = "200%" break;}
                                //Draw Zoom Scaling Factor At 0.25x Scales
                                case 4: {use_scale_string = "25%" break;}
                                //Draw Zoom Scaling Factor At 0.0x Scales
                                case 5: {use_scale_string = "10%" break;}
                                //Draw Zoom Scaling Factor At -0.25x Scales
                                case 6: {use_scale_string = "0%" break;}
                                //Draw Zoom Scaling Factor At 4x Scales
                                case 7: {use_scale_string = "400%" break;}
                                //Draw Zoom Scaling Factor At 4x Scales
                                case 8: {use_scale_string = "800%" break;}
                            }
                        draw_set_font(parent.menu_font)
                        draw_text(2,222,use_scale_string)
                    }
                
                if  parent.general_notifications[2] = 0
                and parent.general_notifications[1] = 0
                and parent.general_notifications[0] = 0
                    {        
                        //Music Notifications
                        if use_current_song_notification_timer &gt; 0
                            {
                                use_current_song_notification_timer-=1
                                draw_set_halign(fa_left)
                                draw_set_font(parent.text_font_academy)
                                draw_background(ui_sound_volume,2,parent.internal_resolution[1]-19)
                                draw_text(21,parent.internal_resolution[1]-18,use_current_song_notification)
                                draw_background(ui_bg_notification,2,parent.internal_resolution[1]-39)
                                draw_text(21,parent.internal_resolution[1]-38,use_current_background_notification)
                                
                            }
                    }
                break;
            }
        //Draw the Editor HUD and Tile Menu
        case 1:
            {
                if instance_exists(obj_bg_logic_alt) draw_background(ui_tile_menu_shadow,0,0);
                //Draw Tile Menu
                draw_background(ui_tile_menu_advanced,0,0)
                if use_tile_menu_subpage = 0
                    {
                        draw_background(ui_tile_set_menu,2,154);
                        switch(use_tileset_preview_set_increment)
                            {
                                case 0: {draw_background(ui_tileset_temple,15,209); draw_background(ui_tileset_preview_temple,18,167); break;}
                                case 1: {draw_background(ui_tileset_city,20,209); draw_background(ui_tileset_preview_city,18,167); break;}
                                case 2: {draw_background(ui_tileset_city_2,20,209); draw_background(ui_tileset_preview_city_extended,18,167); break;}
                                case 3: {draw_background(ui_tileset_ravine,11,209); draw_background(ui_tileset_preview_mountain,18,167); break;}
                                case 4: {draw_background(ui_tileset_lagoon,15,209); draw_background(ui_tileset_preview_lagoon,18,167);break;}
                                case 5: {draw_background(ui_tileset_platform,15,209); draw_background(ui_tileset_preview_platforms,18,167);break;}
                            }
                    }
                if use_tile_menu_subpage = 2
                    {
                        draw_background(ui_modules_menu,2,154);
                        draw_background_stretched(ui_hud_quick_tools,2,154,54,67);
                    }
                if use_tile_menu_subpage != 0 and use_tile_menu_subpage != 2
                    {
                        draw_background(ui_pickups_menu,2,154);
                        draw_background_stretched(ui_hud_pickups,2,154,54,67);
                    }
                //Draw Editor HUD At Half Alpha Transparency
                draw_background_ext(ui_hud,user_editor_hud_offset,0,1,1,0,c_white,0.45)
                if user_cursor_mode = 0 draw_background_ext(ui_hud_captions,user_editor_hud_offset,0,1,1,0,c_white,0.45);
                if user_cursor_mode &gt; 0 draw_background_ext(ui_function_keys,user_editor_hud_offset+12,160,1,1,0,c_white,1);
                draw_background_ext(ui_collapse_editor_HUD,user_editor_hud_offset-2,113,1,1,0,c_white,0.45)
                //Draw Play Menu Item
                draw_background_ext(ui_play,323+u_elements,142,1,1,0,c_white,0.45)
                if use_player_spawner = 1
                    {
                        draw_background_ext(ui_hud_spawner,user_editor_hud_offset,0,1,1,0,c_white,use_tile_menu_alpha)
                        user_player_spawner_frame = 0
                        draw_sprite_ext(parent.skin,user_player_spawner_frame,user_editor_hud_offset+85,40,0.25,0.25,0,c_white,use_tile_menu_alpha)
                    }
                //Draw Tile Limit Warning Meter
                draw_background_ext(ui_tile_limit_meter,user_editor_hud_offset+21,5,1,1,0,c_white,0.45)
                if tile_get_count() &gt; user_tile_limit_warning_value
                    {
                        user_tile_limit_warning_frame += 0.15
                        if user_tile_limit_warning_frame &gt; 1.8 user_tile_limit_warning_frame = 0;
                        draw_sprite_stretched_ext(spr_tile_limit_meter,user_tile_limit_warning_frame,user_editor_hud_offset+22,5,66,5,c_white,0.45)
                        //Warn the player that they can't place more tiles
                        if !audio_is_playing(character_parry)
                            {
                                audio_play_sound(character_parry,50,false)
                                scr_set_message("Tile limit reached!  Remove tiles to optimize.")
                            }
                    }
                else
                    draw_sprite_stretched_ext(spr_tile_limit_meter,0,user_editor_hud_offset+22,5,array_length_1d(tile_get_ids())*0.004125,5,c_white,use_tile_menu_alpha);
                draw_background_ext(ui_tile_limit_meter_frame,user_editor_hud_offset+21,5,1,1,0,c_white,use_tile_menu_alpha)
                use_tile_menu_alpha = 0.5
                //Display Button Prompt
                if use_dispaly_key_prompt = 0 draw_background(use_display_new_tile,2,221);
                if use_dispaly_key_prompt = 1 draw_sprite(spr_keyboard_font,key_new_tile,2,222)
                //Draw Tile Menu Items
                if use_tile_menu_subpage = 0
                    {
                        //Draw Tile Menu Items (Row 1)
                        draw_background_ext(use_tile_menu_item[0],32+offset_tile_menu_icons_x[0],24+offset_tile_menu_icons_y[0],display_tile_menu_ratio[0],display_tile_menu_ratio[0],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[1],68+offset_tile_menu_icons_x[1],24+offset_tile_menu_icons_y[1],display_tile_menu_ratio[1],display_tile_menu_ratio[1],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[2],104+offset_tile_menu_icons_x[2],24+offset_tile_menu_icons_y[2],display_tile_menu_ratio[2],display_tile_menu_ratio[2],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[3],140+offset_tile_menu_icons_x[3],24+offset_tile_menu_icons_y[3],display_tile_menu_ratio[3],display_tile_menu_ratio[3],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[4],176+offset_tile_menu_icons_x[4],24+offset_tile_menu_icons_y[4],display_tile_menu_ratio[4],display_tile_menu_ratio[4],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[5],212+offset_tile_menu_icons_x[5],24+offset_tile_menu_icons_y[5],display_tile_menu_ratio[5],display_tile_menu_ratio[5],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[6],248+offset_tile_menu_icons_x[6],24+offset_tile_menu_icons_y[6],display_tile_menu_ratio[6],display_tile_menu_ratio[6],0,c_white,1)
                        //Draw Tile Menu Items (Row 2)
                        draw_background_ext(use_tile_menu_item[7],50+offset_tile_menu_icons_x[7],60+offset_tile_menu_icons_y[7],display_tile_menu_ratio[7],display_tile_menu_ratio[7],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[8],86+offset_tile_menu_icons_x[8],60+offset_tile_menu_icons_y[8],display_tile_menu_ratio[8],display_tile_menu_ratio[8],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[9],122+offset_tile_menu_icons_x[9],60+offset_tile_menu_icons_y[9],display_tile_menu_ratio[9],display_tile_menu_ratio[9],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[10],158+offset_tile_menu_icons_x[10],60+offset_tile_menu_icons_y[10],display_tile_menu_ratio[10],display_tile_menu_ratio[10],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[11],194+offset_tile_menu_icons_x[11],60+offset_tile_menu_icons_y[11],display_tile_menu_ratio[11],display_tile_menu_ratio[11],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[12],230+offset_tile_menu_icons_x[12],60+offset_tile_menu_icons_y[12],display_tile_menu_ratio[12],display_tile_menu_ratio[12],0,c_white,1)
                        //Draw Tile Menu Items (Row 3)
                        draw_background_ext(use_tile_menu_item[13],32+offset_tile_menu_icons_x[13],96+offset_tile_menu_icons_y[13],display_tile_menu_ratio[13],display_tile_menu_ratio[13],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[14],68+offset_tile_menu_icons_x[14],96+offset_tile_menu_icons_y[14],display_tile_menu_ratio[14],display_tile_menu_ratio[14],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[15],104+offset_tile_menu_icons_x[15],96+offset_tile_menu_icons_y[15],display_tile_menu_ratio[15],display_tile_menu_ratio[15],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[16],140+offset_tile_menu_icons_x[16],96+offset_tile_menu_icons_y[16],display_tile_menu_ratio[16],display_tile_menu_ratio[16],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[17],176+offset_tile_menu_icons_x[17],96+offset_tile_menu_icons_y[17],display_tile_menu_ratio[17],display_tile_menu_ratio[17],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[18],212+offset_tile_menu_icons_x[18],96+offset_tile_menu_icons_y[18],display_tile_menu_ratio[18],display_tile_menu_ratio[18],0,c_white,1)
                        draw_background_ext(use_tile_menu_item[19],248+offset_tile_menu_icons_x[19],96+offset_tile_menu_icons_y[19],display_tile_menu_ratio[19],display_tile_menu_ratio[19],0,c_white,1)
                        //Draw Shading Tiles Icons
                        if use_tile_menu_page = 5 and (use_tileset_preview_set_increment = 0 or use_tileset_preview_set_increment = 2) draw_background(ui_shading_tiles,31,23)
                        //Draw Page Number
                        draw_set_halign(fa_middle)
                        draw_set_font(parent.text_font_academy)
                        draw_text(156,130,"Page "+string(use_tile_menu_page+1)+" of 6")
                        draw_set_halign(fa_left)
                        //Set Alpha Transparency Of Other Editor HUD Elements To Half Alpha Transparency
                        use_tile_menu_alpha = 0.5; 
                    }
                //Draw Item Menu Items
                if use_tile_menu_subpage = 1
                    {
                        switch(use_item_menu_page)
                            {
                                //Page 1
                                case 0:
                                    {
                                        //Draw Item Menu Items (Row 1)
                                        draw_sprite(spr_gem,0,47,50)
                                        draw_sprite(spr_petal_flower,0,84,50)
                                        draw_background_stretched(spr_flower_0,104,24,32,32)
                                        draw_background_stretched(spr_flower_1,140,24,32,32)
                                        draw_background_stretched(spr_flower_2,176,24,32,32)
                                        draw_background_stretched(spr_flower_3,212,24,32,32)
                                        draw_background_stretched(spr_flower_4,248,24,32,32)
                                        //Draw Item Menu Items (Row 2)
                                        draw_background_stretched(spr_flower_5,50,60,32,32)
                                        draw_background_stretched(spr_flower_6,86,60,32,32)
                                        draw_sprite_ext(spr_flower_10_copy,0,138,92,1,0.9,0,c_white,1)
                                        draw_background_stretched(spr_flower_7,158,60,32,32)
                                        draw_background_stretched(spr_flower_8,194,60,32,32)
                                        draw_sprite_stretched(spr_speed_booster,0,230,60,32,32)
                                        //Draw Item Menu Items (Row 3)
                                        draw_sprite(spr_chibililac_cage,0,48,127)
                                        draw_sprite(spr_target,0,84,112)
                                        draw_sprite(spr_checkpoint,0,120,112)
                                        draw_background_stretched(spr_crate_0,140,96,32,32) 
                                        draw_sprite_stretched(spr_mega_crate,0,176,96,32,32)
                                        draw_sprite_stretched(spr_mega_bomb,0,212,96,32,32)
                                        draw_sprite_stretched(spr_mega_block,0,248,96,32,32)
                                        break;
                                    }
                                //Page 2
                                case 1:
                                    {
                                        draw_sprite_stretched(spr_cube_mega_item,0,32,24,32,32)
                                        draw_sprite_stretched(spr_mega_melon,0,68,24,32,32)
                                        draw_sprite_stretched(spr_mega_dumpster,0,104,24,32,32)
                                        draw_sprite_stretched(spr_mega_car,0,140,24,32,32)
                                        draw_sprite_stretched(spr_mega_milk,0,176,24,32,32)
                                        draw_sprite(spr_gold_gem,0,227,50)
                                        draw_sprite_stretched(spr_green_pot_destructible,0,248,24,32,32)
                                        //Row 2
                                        draw_sprite_stretched(spr_yellow_pot_destructible,0,50,60,32,32)
                                        draw_sprite_stretched(spr_mega_green_pot,0,86,60,32,32)
                                        draw_sprite_stretched(spr_mega_yellow_pot,0,124,60,32,32)
                                        draw_sprite_stretched(spr_rock_destructible,0,158,60,32,32)
                                        draw_sprite_stretched(spr_crystal_gold_flower,0,194,60,32,32)
                                        draw_sprite_stretched(spr_crystal_green_flower,0,230,60,32,32)
                                        //Row 3
                                        draw_sprite_part(spr_potion_chest,0,11,12,32,32,32,96)
                                        draw_sprite_stretched(spr_treasure_chest,0,68,96,32,32)
                                        draw_sprite_part(spr_petal_shard,0,0,0,32,32,104,96)
                                        break;
                                    }
                            }
                        //Draw Page Number
                        draw_set_halign(fa_middle)
                        draw_set_font(parent.text_font_academy)
                        draw_text(156,130,"Page "+string(use_item_menu_page+1)+" of 2")
                        draw_set_halign(fa_left)
                    }
                //Draw Springs Menu Items
                if use_tile_menu_subpage = 3
                    {
                        switch(use_springs_menu_page)
                            {
                                //Page 1
                                case 0:
                                    {
                                        //Draw Item Menu Items (Row 1)
                                        draw_background(spr_spring_0_0,32,32)
                                        draw_background(spr_spring_1_0,68,24)
                                        draw_background(spr_spring_2_0,104,24)
                                        draw_background(spr_spring_3_0,140,24)
                                        draw_background(spr_spring_4_0,176,24)
                                        draw_background(spr_spring_5_0,212,32)
                                        draw_background(spr_spring_6_0,248,24)
                                        //Draw Item Menu Items (Row 2)
                                        draw_background(spr_spring_7_0,50,60)
                                        draw_background(spr_spring_8_0,86,60)
                                        draw_background(spr_spring_9_0,122,60)
                                        draw_background(spr_spring_10_0,166,60)
                                        draw_background(spr_spring_11_0,202,60)
                                        draw_background(spr_spring_12_0,230,68)
                                        //Draw Item Menu Items (Row 3)
                                        draw_background(spr_spring_13_0,32,104)
                                        draw_background(spr_spring_14_0,76,96)
                                        draw_background(spr_spring_15_0,112,96)
                                        draw_sprite(spr_spring_16,0,140,104)
                                        draw_sprite(spr_spring_17,0,176,96)
                                        draw_sprite(spr_spring_18,0,216,96)
                                        draw_sprite(spr_spring_19,0,248,96)
                                        break;
                                    }
                                case 1:
                                    {
                                        //Draw Item Menu Items (Row 1)
                                        draw_sprite_part(spr_spring_20,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_spring_21,0,0,0,32,32,68,24)
                                        draw_sprite_part(spr_spring_22,0,0,0,32,32,104,24)
                                        draw_sprite_part(spr_spring_23,0,0,0,32,32,140,24)
                                        draw_sprite_part(spr_spring_24,0,0,14,32,32,176,24)
                                        draw_sprite_part(spr_spring_25,0,0,0,32,32,212,24)
                                        draw_sprite_part(spr_spring_26,0,10,0,32,32,248,24)
                                        //Draw Item Menu Items (Row 2)
                                        draw_sprite_part(spr_spring_27,0,0,0,32,32,50,60)
                                        draw_sprite_part(spr_spring_28,0,0,15,32,32,86,60)
                                        draw_sprite_part(spr_spring_29,0,0,0,32,32,122,60)
                                        draw_sprite_part(spr_spring_30,0,15,0,32,32,158,60)
                                        draw_sprite_part(spr_spring_31,0,0,0,32,32,194,60)
                                        draw_sprite_part(spr_spring_32,0,0,0,32,32,230,60)
                                        //Draw Item Menu Items (Row 3)
                                        draw_sprite_part(spr_spring_33,0,0,0,32,32,32,96)
                                        break;
                                    }
                            }
                        //Draw Page Number
                        draw_set_halign(fa_middle)
                        draw_set_font(parent.text_font_academy)
                        draw_text(156,130,"Page "+string(use_springs_menu_page+1)+" of 2")
                        draw_set_halign(fa_left)
                    }
                //Draw Gimmicks Menu Items
                if use_tile_menu_subpage = 4
                    {
                        switch(use_gimmicks_menu_page)
                            {
                                //Page 1
                                case 0:
                                    {
                                        //Draw Item Menu Items (Row 1) 
                                        draw_sprite_part(spr_player_spawnpoint_generic,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_player_spawnpoint,0,0,0,16,16,68,24)
                                        draw_sprite_part(spr_player_spawnpoint_carol,0,0,0,16,16,84,24)
                                        draw_sprite_part(spr_player_spawnpoint_milla,0,0,0,16,16,68,40)
                                        draw_sprite_part(spr_player_spawnpoint_spade,0,0,0,16,16,84,40)
                                        draw_sprite_part(spr_player_spawnpoint_carols_bike,0,0,0,16,16,119,24)
                                        draw_background_ext(spr_gascan_0,105,24,0.5,0.5,0,c_white,1)
                                        draw_sprite_part(spr_player_spawnpoint_carrie,0,0,0,16,16,104,40)
                                        draw_sprite_part(spr_player_spawnpoint_chiasa,0,0,0,16,16,119,40)
                                        draw_background(ui_key_keycardterminal,140,24)
                                        draw_sprite(spr_switch_door_GUI,0,176,24)
                                        draw_sprite_ext(spr_switch_bomb_and_water,0,212,24,0.5,0.5,0,c_white,1)
                                        draw_sprite_ext(spr_crosswalk_signal,0,256,24,0.5,0.5,0,c_white,1)
                                        //Draw Item Menu Items (Row 2)
                                        draw_sprite_part(spr_boost_pad,0,0,0,32,32,50,60)
                                        draw_sprite_part(spr_bubbles_air,0,21,22,32,32,87,66)
                                        draw_sprite(spr_platform_modifier_horizontal,0,122,60)
                                        draw_sprite(spr_platform_modifier_vertical,0,158,60)
                                        draw_sprite(spr_platform_modifier_circular,0,194,60)
                                        draw_sprite(spr_platform_modifier_halfcircle,0,230,60)
                                        //Draw Item Menu Items (Row 3)
                                        draw_sprite_part(spr_shield_earth,0,11,12,32,32,32,96)
                                        draw_sprite_part(spr_shield_fire_front,0,11,12,32,32,68,96)
                                        draw_sprite_part(spr_shield_metal,0,11,12,32,32,104,96)
                                        draw_sprite_part(spr_shield_water,0,11,12,32,32,140,96)
                                        draw_sprite_part(spr_shield_wood,0,11,12,32,32,176,96)
                                        draw_sprite_part(spr_shield_rock,0,0,0,32,32,212,96)
                                        draw_sprite_stretched(spr_disc_ball,0,248,96,32,32)
                                        break;
                                    }
                                //Page 2
                                case 1:
                                    {
                                        //Row 1
                                        draw_sprite_part(spr_smart_pool,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_waterfall_node,0,0,0,32,32,68,24)
                                        draw_sprite_part(spr_skyscraper_day_0,0,0,0,32,32,104,24)
                                        draw_sprite_part(spr_skyscraper_day_2,0,0,0,32,32,140,24)
                                        draw_sprite_part(spr_skyscraper_day_4,0,0,0,32,32,176,24)
                                        draw_sprite(spr_bird,0,230,52)
                                        draw_sprite_part(spr_smart_petal_pool,0,0,0,32,32,248,24)
                                        //Row 2
                                        draw_sprite_stretched(spr_bench_0,0,50,60,32,32)
                                        draw_sprite_stretched(spr_bench_1,0,86,60,32,32)
                                        draw_sprite_stretched(spr_bench_2,0,122,60,32,32)
                                        draw_sprite_stretched(spr_bench_3,0,158,60,32,32)
                                        draw_sprite_stretched(spr_bench_4,0,194,60,32,32)
                                        draw_sprite_stretched(spr_petalfall_node,0,230,60,32,32)
                                        //Row 3
                                        draw_sprite_part(spr_cube_mega_bouncy,0,0,0,32,32,32,96)
                                        draw_sprite_part(spr_bridge_post,0,0,0,16,32,68,96)
                                        draw_sprite_part(spr_rock_floor_distructible,0,0,20,32,32,104,96)
                                        draw_sprite_part(spr_water_cube,0,0,0,32,32,140,96)
                                        draw_sprite_part(spr_wind_turbine,0,0,0,32,32,176,96)
                                        draw_sprite_part(spr_soda_can,0,0,0,32,32,212,96)
                                        draw_sprite_part(spr_basket_ball,0,0,0,32,32,248,96)
                                        break;
                                    }
                                //Page 3
                                case 2:
                                    {
                                        //Row 1
                                        draw_sprite_part(spr_smart_pool_water,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_waterfall_small,0,0,0,32,32,68,24)
                                        draw_sprite_part(spr_platform_midboss_gate,0,0,0,32,32,104,24)
                                        draw_sprite_part(spr_platform_water_horizontal,0,0,0,32,32,140,24)
                                        draw_sprite_part(spr_platform_water_vertical,0,0,0,32,32,176,24)
                                        draw_sprite_part(spr_potion_shop_spawn_point,0,0,0,32,32,212,24)
                                        draw_sprite_part(spr_mud_cube,0,0,0,32,32,248,24)
                                        //Row 2
                                        draw_sprite_part(spr_mud_block,0,0,0,32,32,50,60)
                                        draw_sprite_part(spr_smart_pool_mud,0,21,22,32,32,87,60)
                                        draw_sprite_stretched(spr_train_station_spawner,0,122,60,32,32)
                                        draw_sprite_stretched(spr_rogue_cube_3x,0,158,60,32,32)
                                        break;
                                    }
                            }
                        //Draw Page Number
                        draw_set_halign(fa_middle)
                        draw_set_font(parent.text_font_academy)
                        draw_text(156,130,"Page "+string(use_gimmicks_menu_page+1)+" of 3")
                        draw_set_halign(fa_left)
                    }
                //Draw Advanced Menu Items
                if use_tile_menu_subpage = 5
                    {
                        switch(use_advanced_menu_page)
                            {
                                //Page 1
                                case 0:
                                    {
                                        //Draw Item Menu Items (Row 1)
                                        draw_sprite_part(spr_camera_zoom_reset,0,0,55,32,32,32,24)
                                        draw_sprite_part(spr_camera_zoom_out_2x,0,0,55,32,32,68,24)
                                        draw_sprite_part(spr_camera_zoom_out_4x,0,0,55,32,32,104,24)
                                        draw_sprite(spr_camera_boundary_top,0,140,24)
                                        draw_sprite(spr_camera_boundary_bottom,0,176,24)
                                        draw_sprite(spr_camera_boundary_left,0,212,24)
                                        draw_sprite(spr_camera_boundary_right,0,248,24)
                                        //Draw Item Menu Items (Row 2)
                                        draw_sprite(spr_water_height,0,50,60)
                                        draw_sprite(spr_loop_exit_road,0,86,60)
                                        draw_sprite_part(spr_loop_layer_changer,0,0,16,32,32,122,60)
                                        draw_sprite_part(spr_loop_layer_changer_l,0,0,16,32,32,158,60)
                                        draw_sprite_part(spr_loop_changer_l,0,0,0,32,32,194,60)
                                        draw_sprite_part(spr_loop_changer_r,0,0,0,32,32,230,60)
                                        //Draw Item Menu Items (Row 3)
                                        draw_sprite_part(spr_weather_clear,0,0,20,32,32,32,96)
                                        draw_sprite_part(spr_weather_rain,0,0,20,32,32,68,96)
                                        draw_sprite_part(spr_weather_storm,0,0,20,32,32,104,96)
                                        draw_sprite_part(spr_weather_tempest,0,0,20,32,32,140,96)
                                        draw_sprite(spr_loop_logic,0,176,96)
                                        draw_sprite(spr_brick_loop,0,212,96)
                                        draw_sprite(spr_road_loop,0,248,96)
                                        break;
                                    }
                                //Page 2
                                case 1:
                                    {
                                        //Row 1
                                        draw_sprite(spr_loop_exit,0,32,24)
                                        draw_sprite_part(spr_music_on,0,0,50,32,32,68,24)
                                        draw_sprite_part(spr_music_off,0,0,50,32,32,104,24)
                                        draw_sprite_part(spr_birds_ambiance,0,0,50,32,32,140,24)
                                        draw_sprite_part(spr_boss_music,0,0,50,32,32,176,24)
                                        draw_sprite_part(spr_mini_boss_music,0,0,50,32,32,212,24)
                                        draw_sprite_part(spr_mega_boss_music,0,0,50,32,32,248,24)
                                        //Row 2
                                        draw_sprite(spr_boss_boundary_top,0,50,60)
                                        draw_sprite(spr_boss_boundary_bottom,0,86,60)
                                        draw_sprite(spr_boss_boundary_left,0,122,60)
                                        draw_sprite(spr_boss_boundary_right,0,158,60)
                                        draw_sprite_part(spr_wind_turbine_stopper,0,50,0,32,32,194,60)
                                        draw_sprite_part(spr_bg_change_0,0,0,0,32,32,230,60)
                                        //Row 3
                                        draw_sprite_part(spr_portal_1A,0,0,20,32,32,32,96)
                                        draw_sprite_part(spr_portal_1B,0,0,20,32,32,68,96)
                                        draw_sprite_part(spr_portal_2A,0,0,20,32,32,104,96)
                                        draw_sprite_part(spr_portal_2B,0,0,20,32,32,140,96)
                                        draw_sprite_part(spr_instant_water,0,0,0,32,32,176,96)
                                        draw_sprite_part(spr_city_ambiance,0,0,20,32,32,212,96)
                                        draw_sprite_part(spr_checkpoint_marker,0,0,50,32,32,248,96)
                                        break;
                                    }
                                //Page 3
                                case 2:
                                    {
                                        //Row 1
                                        draw_sprite_part(spr_angle_gear,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_angle_gear_90,0,0,0,32,32,68,24)
                                        draw_sprite_part(spr_angle_gear_180,0,0,0,32,32,104,24)
                                        draw_sprite_part(spr_angle_gear_270,0,0,0,32,32,140,24)
                                        draw_sprite_part(spr_stop_music,0,0,80,32,32,176,24)
                                        draw_sprite_part(spr_start_music,0,0,80,32,32,212,24)
                                        draw_sprite_part(spr_creepy_ambiance,0,0,0,32,32,248,24)
                                        //Row 2
                                        draw_sprite_part(spr_creepy_caves,0,0,0,32,32,50,60)
                                        break;
                                    }
                            }
                        //Draw Page Number
                        draw_set_halign(fa_middle)
                        draw_set_font(parent.text_font_academy)
                        draw_text(156,130,"Page "+string(use_advanced_menu_page+1)+" of 3")
                        draw_set_halign(fa_left)
                    }
                //Draw Enemy Menu Items
                if use_tile_menu_subpage = 2
                    {
                        //Draw Page Number
                        draw_set_halign(fa_middle)
                        draw_set_font(parent.text_font_academy)
                        switch(use_enemy_menu_page)
                            {
                                //Page 1
                                case 0:
                                    {
                                        //Row 1
                                        draw_sprite(spr_mu_ball_spike,0,48,40)
                                        draw_sprite_part(spr_mu_rotating_spikes,0,6,0,32,32,68,32)
                                        draw_sprite_stretched(spr_metal_pup_thumbnail,0,104,24,32,32)
                                        draw_sprite_stretched(spr_blade_orbiter_thumbnail,0,140,24,32,32)
                                        draw_sprite_stretched(spr_shock_puppet_thumbnail,0,176,24,32,32)
                                        draw_sprite_stretched(spr_turretus_thumbnail,0,212,24,32,32)
                                        draw_sprite_stretched(star_flounder,0,248,24,32,32)
                                        //Row 2
                                        draw_sprite_stretched(spr_shark_torpedo_thumbnail,0,50,60,32,32)
                                        draw_sprite_stretched(spr_dna_cannon_thumbnail,0,86,60,32,32)
                                        draw_sprite_stretched(spr_fire_spitter_thumbnail,0,122,60,32,32)
                                        draw_sprite_stretched(spr_buoybuoy_thumbnail,0,158,60,32,32)
                                        draw_sprite_stretched(spr_ghetto_blaster_thumbnail,0,194,60,32,32)
                                        draw_sprite_stretched(spr_bullfrag,0,230,60,32,32)
                                        //Row 3
                                        draw_sprite_stretched(spr_rna_cannon,0,32,96,32,32)
                                        draw_sprite_stretched(spr_axle_turret_thumbnail,0,68,96,32,32)
                                        draw_sprite_stretched(spr_rocket_launcher_thumbnail,0,104,96,32,32)
                                        draw_text(156,130,"Page "+string(use_enemy_menu_page+1)+" of 2")
                                        break;
                                    }
                                //Page 2
                                case 1:
                                    {
                                        //Row 1
                                        draw_sprite_stretched(spr_fireworks_tank_thumbnail,0,32,24,32,32)
                                        draw_sprite_stretched(spr_blade_subordinate,0,68,24,32,32)
                                        draw_sprite_stretched(spr_star_marine_thumbnail,0,104,24,32,32)
                                        draw_sprite_stretched(spr_bouncer_thumbnail,0,140,24,32,32)
                                        draw_text(156,130,"Page "+string(use_enemy_menu_page+1)+" of 2")
                                        break;
                                    }
                            }
                    }
                //Draw Actors Menu Items
                if use_tile_menu_subpage = 6
                    {
                        //Draw Page Number
                        draw_set_halign(fa_middle)
                        draw_set_font(parent.text_font_academy)
                        switch(use_actors_menu_page)
                            {
                                //Page 1
                                case 0:
                                    {
                                        //Row 1
                                        draw_sprite_part(spr_lilac_cs_talking_neutral,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_carol_cs_talking_neutral,0,0,0,32,32,68,24)
                                        draw_sprite_part(spr_milla_cs_talking_neutral,0,0,0,32,32,104,24)
                                        draw_sprite_part(spr_npc_stella_idle,0,0,0,32,32,140,24)
                                        draw_sprite_part(spr_npc_shy_idle,0,0,0,32,32,176,24)
                                        draw_sprite_part(spr_npc_tiwi_idle,0,0,0,32,32,212,24)
                                        draw_sprite_part(spr_npc_sign_idle,0,0,0,32,32,248,24)
                                        //Row 2
                                        draw_sprite_part(spr_npc_stumpy_idle,0,0,0,32,32,50,60)
                                        draw_sprite_part(spr_npc_cook_idle,0,0,0,32,32,86,60)
                                        draw_sprite_part(spr_npc_wacky_idle,0,0,0,32,32,122,60)
                                        draw_sprite_part(spr_npc_harige_idle,0,0,0,32,32,158,60)
                                        draw_sprite_part(spr_npc_bird_guard_idle,0,0,0,32,32,194,60)
                                        draw_sprite_part(spr_npc_jamie_idle,0,0,0,32,32,230,60)
                                        //Row 3
                                        draw_sprite_part(spr_npc_cassandre_idle,0,0,0,32,32,32,96)
                                        draw_sprite_part(spr_spade_cs_talking_neutral,0,0,0,32,32,68,96)
                                        draw_sprite_part(spr_npc_azuli_idle,0,0,0,32,32,104,96)
                                        draw_sprite_part(spr_npc_astum_idle,0,0,0,32,32,140,96)
                                        draw_sprite_part(spr_npc_beibo_idle,0,0,0,32,32,176,96)
                                        draw_sprite_part(spr_npc_trip_idle,0,0,0,32,32,212,96)
                                        draw_sprite_part(spr_npc_axl_idle,0,0,0,32,32,248,96)
                                        break;
                                    }
                                //Page 2
                                case 1:
                                    {
                                        //Row 1
                                        draw_sprite_part(spr_npc_candy_idle,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_npc_umi_idle,0,0,0,32,32,68,24)
                                        draw_sprite_part(spr_npc_allister_idle,0,0,0,32,32,104,24)
                                        draw_sprite_part(spr_npc_abby_idle,0,0,0,32,32,140,24)
                                        draw_sprite_part(spr_npc_alexis_idle,0,0,0,32,32,176,24)
                                        draw_sprite_part(spr_npc_kyomi_idle,0,0,0,32,32,212,24)
                                        draw_sprite_part(spr_npc_xavier_idle,0,0,0,32,32,248,24)
                                        //Row 2
                                        draw_sprite_part(spr_npc_carrie_idle,0,0,0,32,32,50,60)
                                        draw_sprite_part(spr_npc_ryusei_idle,0,0,0,32,32,86,60)
                                        draw_sprite_part(spr_npc_savvy_idle,0,0,0,32,32,122,60)
                                        draw_sprite_part(spr_npc_rhyme_idle,0,0,0,32,32,158,60)
                                        draw_sprite_part(spr_npc_clyde_idle,0,0,0,32,32,194,60)
                                        draw_sprite_part(spr_npc_bucky_idle,0,0,0,32,32,230,60)
                                        //Row 3
                                        draw_sprite_part(spr_npc_ness_idle,0,0,0,32,32,32,96)
                                        draw_sprite_part(spr_npc_hyper_idle,0,0,0,32,32,68,96)
                                        draw_sprite_part(spr_npc_iris_idle,0,0,0,32,32,104,96)
                                        draw_sprite_part(spr_npc_maika_idle,0,0,0,32,32,140,96)
                                        draw_sprite_part(spr_npc_leela_idle,0,0,0,32,32,176,96)
                                        draw_sprite_part(spr_npc_tsuki_idle,0,0,0,32,32,212,96)
                                        draw_sprite_part(spr_npc_libbie_dark_idle,0,0,0,32,32,248,96)
                                        break;
                                    }
                                //Page 3
                                case 2:
                                    {
                                        //Row 1
                                        draw_sprite_part(spr_npc_pumppy_idle,0,0,0,32,32,32,24)
                                        draw_sprite_part(spr_npc_libbie_idle,0,0,0,32,32,68,24)
                                        draw_sprite_part(spr_npc_serena_idle,0,0,0,32,32,104,24)
                                        draw_sprite_part(spr_npc_chiasa_idle,0,0,0,32,32,140,24)
                                        draw_sprite_part(spr_npc_dean_idle,0,0,0,32,32,176,24)
                                        draw_sprite_part(spr_npc_shan_idle,0,0,0,32,32,212,24)
                                        draw_sprite_part(spr_npc_mei_idle,0,0,0,32,32,248,24)
                                        //Row 2
                                        draw_sprite_part(spr_npc_vivid_idle,0,0,0,32,32,50,60)
                                        draw_sprite_part(spr_npc_garrett_idle,0,0,0,32,32,86,60)
                                        draw_sprite_part(spr_npc_maria_idle,0,0,0,32,32,122,60)
                                        draw_sprite_part(spr_npc_elric_idle,0,0,0,32,32,158,60)
                                        draw_sprite_part(spr_npc_beldr_idle,0,0,0,32,32,194,60)
                                        draw_sprite_part(spr_npc_leo_idle,0,0,0,32,32,230,60)
                                        //Row 3
                                        draw_sprite_part(spr_npc_jett_idle,0,0,0,32,32,32,96)
                                        draw_sprite_part(spr_npc_marshmallow_idle,0,0,0,32,32,68,96)
                                        draw_sprite_part(spr_npc_vela_idle,0,0,0,32,32,104,96)
                                        draw_sprite_part(spr_npc_leone_idle,0,0,0,32,32,140,96)
                                        draw_sprite_part(spr_npc_pat_idle,0,0,0,32,32,176,96)
                                        draw_sprite_part(spr_npc_uny_idle,0,0,0,32,32,212,96)
                                        break;
                                    }
                            }
                        draw_text(156,130,"Page "+string(use_actors_menu_page+1)+" of 3")
                    }
                draw_set_halign(fa_middle)
                draw_set_font(parent.text_font_academy)
                draw_text(156,6,use_item_description)
                draw_set_halign(fa_left)
                draw_text(20,224,"EXIT")
                break;
            }
        //Draw the Quit Menu
        case 2:
            {
                //Draw Editor HUD At Half Alpha Transparency
                if use_file_menu = 0 
                    {
                        draw_background_ext(ui_hud,user_editor_hud_offset,0,1,1,0,c_white,0.45)
                        draw_background_ext(ui_collapse_editor_HUD,user_editor_hud_offset-2,113,1,1,0,c_white,0.45)
                        draw_background_ext(ui_hud_captions,user_editor_hud_offset,0,1,1,0,c_white,0.45);
                        //Draw Play Menu Item
                        draw_background_ext(ui_play,323+u_elements,142,1,1,0,c_white,0.45)
                    }
                if use_file_menu = 1
                    {
                        draw_background_ext(ui_file_menu,314,0,1,1,0,c_white,0.45);
                        draw_set_alpha(0.45)
                        draw_set_font(parent.text_font_academy)
                        draw_set_halign(fa_center)
                        scr_set_background_string();
                        draw_text_ext_transformed(367,156,use_bg_name_string,21,200,0.75,0.75,0);
                        //Draw Weather String
                        draw_text_ext_transformed(367,181,use_weather_conditions,21,200,0.75,0.75,0);
                        draw_text_ext_transformed(367,207,use_enemy_mode_conditions,21,146,0.75,0.75,0);
                        //Draw Health Petals
                        draw_sprite(spr_start_hp_bar,use_health_petal_mod,337,12);
                        draw_set_halign(fa_left)
                        draw_set_alpha(1)
                    }
                //File Dialogue Menu (Page 2)
                scr_draw_file_menu_p2()

                //Draw Quit Menu
                draw_background(ui_hud_quit,2,60)
                //Set Alpha Transparency Of Other Editor HUD Elements To Half Alpha Transparency
                use_tile_menu_alpha = 0.5;
                break;
            }
        //Draw the Open Menu
        case 3:
            {
                //Draw Editor HUD At Half Alpha Transparency
                if use_file_menu = 0
                    {
                        draw_background_ext(ui_hud,user_editor_hud_offset,0,1,1,0,c_white,0.45)
                        draw_background_ext(ui_collapse_editor_HUD,user_editor_hud_offset-2,113,1,1,0,c_white,0.45)
                        draw_background_ext(ui_hud_captions,user_editor_hud_offset,0,1,1,0,c_white,0.45);
                        //Draw Play Menu Item
                        draw_background_ext(ui_play,323+u_elements,142,1,1,0,c_white,0.45)
                    }
                if use_file_menu = 1
                    {
                        draw_background_ext(ui_file_menu,314,0,1,1,0,c_white,0.45);
                        draw_set_alpha(0.45)
                        draw_set_font(parent.text_font_academy)
                        draw_set_halign(fa_center)
                        scr_set_background_string();
                        draw_text_ext_transformed(367,156,use_bg_name_string,21,200,0.75,0.75,0);
                        //Draw Weather String
                        draw_text_ext_transformed(367,181,use_weather_conditions,21,200,0.75,0.75,0);
                        draw_text_ext_transformed(367,207,use_enemy_mode_conditions,21,146,0.75,0.75,0);
                        //Draw Health Petals
                        draw_sprite(spr_start_hp_bar,use_health_petal_mod,337,12);
                        draw_set_halign(fa_left)
                        draw_set_alpha(1)
                    }
                //File Dialogue Menu (Page 2)
                scr_draw_file_menu_p2()

                //Draw Open Menu
                draw_background(ui_hud_open,2,47)
                //Define Font
                draw_set_font(parent.text_font_academy)
                //Draw Item Listings
                draw_text(28,82,use_maps_map[0])
                draw_text(28,97,use_maps_map[1])
                draw_text(28,112,use_maps_map[2])
                draw_text(28,127,use_maps_map[3])
                draw_text(28,142,use_maps_map[4])
                draw_set_alpha(user_tile_boundary_alpha)
                draw_set_color(c_white)
                draw_line(28,floor(use_maps_highlight_y),272,floor(use_maps_highlight_y))
                draw_set_alpha(1)
                //Draw Scrollbar
                draw_background(ui_hud_open_scrollbar,283,floor(use_scrollbar_position))
                //Set Alpha Transparency Of Other Editor HUD Elements To Half Alpha Transparency
                use_tile_menu_alpha = 0.5
                break;
            }
        //Draw the Save Menu
        case 4:
            {
                //Draw Editor HUD At Half Alpha Transparency
                if use_file_menu = 0
                    {
                        draw_background_ext(ui_hud,user_editor_hud_offset,0,1,1,0,c_white,0.45)
                        draw_background_ext(ui_collapse_editor_HUD,user_editor_hud_offset-2,113,1,1,0,c_white,0.45)
                        draw_background_ext(ui_hud_captions,user_editor_hud_offset,0,1,1,0,c_white,0.45);
                        //Draw Play Menu Item
                        draw_background_ext(ui_play,323+u_elements,142,1,1,0,c_white,0.45)
                    }
                if use_file_menu = 1
                    {
                        draw_background_ext(ui_file_menu,314,0,1,1,0,c_white,0.45);
                        draw_set_alpha(0.45)
                        draw_set_font(parent.text_font_academy)
                        draw_set_halign(fa_center)
                        scr_set_background_string();
                        draw_text_ext_transformed(367,156,use_bg_name_string,21,200,0.75,0.75,0);
                        //Draw Weather String
                        draw_text_ext_transformed(367,181,use_weather_conditions,21,200,0.75,0.75,0);
                        draw_text_ext_transformed(367,207,use_enemy_mode_conditions,21,146,0.75,0.75,0);
                        //Draw Health Petals
                        draw_sprite(spr_start_hp_bar,use_health_petal_mod,337,12);
                        draw_set_halign(fa_left)
                        draw_set_alpha(1)
                    }
                //File Dialogue Menu (Page 2)
                scr_draw_file_menu_p2()
                //Draw Save Menu
                draw_background(ui_hud_save,2,60)
                //Define Font
                draw_set_font(parent.text_font_academy)
                //Draw Save Data
                draw_text(59,93,use_write_keyboard_string_stage_name+use_keyboard_active_indicator)
                draw_text_ext(16,137,use_write_keyboard_string_description+use_keyboard_active_indicator_description,17,130)
                draw_text(188,138,use_write_keyboard_string_architect+use_keyboard_active_indicator_architect)
                //Set Alpha Transparency Of Other Editor HUD Elements To Half Alpha Transparency
                use_tile_menu_alpha = 0.5;
                break;
            }
        //Draw the New Canvas Menu
        case 5:
            {
                //Draw Editor HUD At Half Alpha Transparency
                if use_file_menu = 0
                    {
                        draw_background_ext(ui_hud,user_editor_hud_offset,0,1,1,0,c_white,0.45)
                        draw_background_ext(ui_collapse_editor_HUD,user_editor_hud_offset-2,113,1,1,0,c_white,0.45)
                        draw_background_ext(ui_hud_captions,user_editor_hud_offset,0,1,1,0,c_white,0.45);
                        //Draw Play Menu Item
                        draw_background_ext(ui_play,323+u_elements,142,1,1,0,c_white,0.45)
                    }
                if use_file_menu = 1
                    {
                        draw_background_ext(ui_file_menu,314,0,1,1,0,c_white,0.45);
                        draw_set_alpha(0.45)
                        draw_set_font(parent.text_font_academy)
                        draw_set_halign(fa_center)
                        scr_set_background_string();
                        draw_text_ext_transformed(367,156,use_bg_name_string,21,200,0.75,0.75,0);
                        //Draw Weather String
                        draw_text_ext_transformed(367,181,use_weather_conditions,21,200,0.75,0.75,0);
                        draw_text_ext_transformed(367,207,use_enemy_mode_conditions,21,146,0.75,0.75,0);
                        //Draw Health Petals
                        draw_sprite(spr_start_hp_bar,use_health_petal_mod,337,12);
                        draw_set_halign(fa_left)
                        draw_set_alpha(1)
                    }
                //File Dialogue Menu (Page 2)
                scr_draw_file_menu_p2()

                //Draw Quit Menu
                draw_background(ui_hud_new_canvas,2,45)
                //Set Alpha Transparency Of Other Editor HUD Elements To Half Alpha Transparency
                use_tile_menu_alpha = 0.5
                break;
            }
    }

if use_file_menu = 0
    {
        var object_limit_warning_index = 0;
        var object_limit_sprite_index = 0;
        var object_limit_max = 0;
        //Draw Currently Selected Tile
        switch(user_cursor_display_mode)
            {
                case 0:
                    {
                        if background_exists(user_tile_selected)
                            draw_background_ext(user_tile_selected,353+u_elements+use_item_offset_x,17+use_item_offset_y,use_item_aspect_ratio,use_item_aspect_ratio,0,c_white,1);
                        else
                            draw_background_stretched(ui_unknown_tile,353+u_elements,17,32,32);
                        break;
                    }
                case 1:
                    {
                        if sprite_exists(user_tile_selected)
                            {
                                switch(user_tile_selected)
                                    {
                                        default: {draw_sprite_part_ext(user_tile_selected,0,0,0,32,32,353+u_elements,17,1,1,c_white,1); break;}
                                        case spr_metal_pup:         {draw_sprite_stretched(spr_metal_pup_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_blade_orbiter:     {draw_sprite_stretched(spr_blade_orbiter_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_rocket_puncher:    {draw_sprite_stretched(spr_rocket_launcher_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_shock_puppet:      {draw_sprite_stretched(spr_shock_puppet_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_turretus:          {draw_sprite_stretched(spr_turretus_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case star_flounder:         {draw_sprite_stretched(star_flounder,0,353+u_elements,17,32,32); break;}
                                        case spr_bullfrag:          {draw_sprite_stretched(spr_bullfrag,0,353+u_elements,17,32,32); break;}
                                        case spr_shark_torpedo_unloaded: {draw_sprite_stretched(spr_shark_torpedo_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_fire_spitter:      {draw_sprite_stretched(spr_fire_spitter_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_buoybuoy:          {draw_sprite_stretched(spr_buoybuoy_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_ghetto_blaster:    {draw_sprite_stretched(spr_ghetto_blaster_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_dna_cannon:        {draw_sprite_stretched(spr_dna_cannon_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_disc_ball:         {draw_sprite_stretched(spr_disc_ball,0,353+u_elements,17,32,32); break;}
                                        case spr_switch_water:      {draw_sprite_stretched(spr_switch_water_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_switch_door:       {draw_sprite_stretched(spr_switch_door_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_switch_bomb:       {draw_sprite_stretched(spr_switch_bomb_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_fireworks_tank_thumbnail: {draw_sprite_stretched(spr_fireworks_tank_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_star_marine_base_1:       {draw_sprite_stretched(spr_star_marine_thumbnail,0,353+u_elements,17,32,32); break;}
                                        case spr_rogue_cube:        {draw_sprite_stretched(spr_rogue_cube_3x,0,353+u_elements,17,32,32); break;}
                                        case spr_gem:
                                            {
                                                object_limit_warning_index = obj_gem_float
                                                object_limit_sprite_index = spr_gem
                                                object_limit_max = 2
                                                break;
                                            }
                                        case spr_petal_flower:
                                            {
                                                object_limit_warning_index = obj_petal_float
                                                object_limit_sprite_index = spr_petal_flower
                                                object_limit_max = 2
                                                break;
                                            }
                                        case spr_shield_earth:
                                            {
                                                object_limit_warning_index = obj_shield_earth
                                                object_limit_sprite_index = spr_shield_earth
                                                object_limit_max = 16
                                                break;
                                            }
                                        case spr_shield_fire_front:
                                            {
                                                object_limit_warning_index = obj_shield_fire
                                                object_limit_sprite_index = spr_shield_fire_front
                                                object_limit_max = 16
                                                break;
                                            }
                                        case spr_shield_water:
                                            {
                                                object_limit_warning_index = obj_shield_water
                                                object_limit_sprite_index = spr_shield_water
                                                object_limit_max = 16
                                                break;
                                            }
                                        case spr_shield_metal:
                                            {
                                                object_limit_warning_index = obj_shield_metal
                                                object_limit_sprite_index = spr_shield_metal
                                                object_limit_max = 16
                                                break;
                                            }
                                        case spr_shield_wood:
                                            {
                                                object_limit_warning_index = obj_shield_wood
                                                object_limit_sprite_index = spr_shield_wood
                                                object_limit_max = 16
                                                break;
                                            }
                                        case spr_platform_modifier_horizontal:
                                            {
                                                object_limit_warning_index = obj_platform_hor
                                                object_limit_sprite_index = spr_platform_modifier_horizontal
                                                object_limit_max = 2
                                                break;
                                            }
                                        case spr_platform_modifier_vertical:
                                            {
                                                object_limit_warning_index = obj_platform_ver
                                                object_limit_sprite_index = spr_platform_modifier_vertical
                                                object_limit_max = 2
                                                break;
                                            }
                                        case spr_gem_flower_modifier:
                                            {
                                                object_limit_warning_index = obj_gem_flower_modifier
                                                object_limit_sprite_index = spr_gem_flower_modifier
                                                object_limit_max = 2
                                                break;
                                            }
                                        case spr_gascan_modifier:
                                            {
                                                object_limit_warning_index = obj_gascan_modifier
                                                object_limit_sprite_index = spr_gascan_modifier
                                                object_limit_max = 2
                                                break;
                                            }
                                        case spr_chibililac_cage:
                                            {
                                                object_limit_warning_index = obj_1up
                                                object_limit_sprite_index = spr_chibililac_cage
                                                object_limit_max = 8
                                                break;
                                            }
                                        case spr_mega_crate:
                                            {
                                                object_limit_warning_index = obj_mega_crate
                                                object_limit_sprite_index = spr_mega_crate
                                                object_limit_max = 16
                                                break;
                                            }
                                        case spr_mega_bomb:
                                            {
                                                object_limit_warning_index = obj_mega_bomb
                                                object_limit_sprite_index = spr_mega_bomb
                                                object_limit_max = 16
                                                break;
                                            }
                                        case spr_mega_block:
                                            {
                                                object_limit_warning_index = obj_mega_block
                                                object_limit_sprite_index = spr_mega_block
                                                object_limit_max = 16
                                                break;
                                            }
                                    }
                            }
                        else
                            draw_background_stretched(ui_unknown_tile,353+u_elements,17,32,32);
                        break;
                    }
            }
        if object_limit_warning_index != 0
            {
                if (user_tile_selected != spr_gem and user_tile_selected != spr_petal_flower)
                    draw_sprite_part_ext(user_tile_selected,0,0,0,32,32,353+u_elements,17,1,1,c_white,1);
                else
                    draw_sprite_ext(object_limit_sprite_index,0,369+u_elements,43,1,1,0,c_white,use_tile_menu_alpha);
                //Warn Players If They Are Placing Too Many Items
                if instance_number(object_limit_warning_index) &gt; use_optimization_limit/object_limit_max
                    {
                        draw_sprite_ext(spr_hazard_warning,use_optimization_warning,364+u_elements,32,0.5,0.5,0,c_white,use_tile_menu_alpha)
                        use_optimization_warning += 0.5
                        if use_optimization_warning &gt; 3.8 use_optimization_warning = 0;
                    }
                else
                    {
                        draw_set_font(parent.text_font_academy)
                        draw_set_halign(fa_right)
                        draw_set_alpha(use_tile_menu_alpha)
                        draw_text(385+u_elements,35,string(instance_number(object_limit_warning_index)))
                        draw_set_halign(fa_left)
                        draw_set_alpha(1)
                    }
            }


        //Apply Alpha Transparency To The Sidebar's GUI Elements While In The Tile Menu
        draw_set_alpha(use_tile_menu_alpha)
        //Draw Cursor's X/Y Positions
        draw_set_font(editor_font)
        draw_set_color(c_white)
        draw_text_transformed(340+u_elements,68,string(use_cursor_x),1,1,0)
        draw_text_transformed(340+u_elements,83,string(use_cursor_y),1,1,0)

        //Draw Layer Depth Icon
        if user_cursor_display_mode = 0
            {
                var ui_layer_selection = ui_layer_flats;
                switch(user_layer_selected)
                    {
                        case 0: {break;}
                        case 1: {ui_layer_selection = ui_layer_slopes; break;}
                        case 2: {ui_layer_selection = ui_layer_fofs;   break;}
                        case 100000: {ui_layer_selection = ui_layer_flags; break;}
                        default: {ui_layer_selection = ui_layer_scene; break;}
                    }
                draw_background_ext(ui_layer_selection,325+u_elements,125,1,1,0,c_white,use_tile_menu_alpha);
            }
        //Otherwise, Draw Object Layer
        else
            draw_background_ext(ui_layer_object,325+u_elements,125,1,1,0,c_white,use_tile_menu_alpha);
        //Draw Grid Size Icon
        var ui_grid_selection = ui_grid_snap_2x;
        switch(user_grid_iteration)
            {
                default: {break;}
                case 2: {ui_grid_selection = ui_grid_snap_4x; break;}
                case 3: {ui_grid_selection = ui_grid_snap_8x; break;}
            }
        draw_background_ext(ui_grid_selection,388+u_elements,125,1,1,0,c_white,use_tile_menu_alpha); 

        //Align Layer And Snap Text To The Right
        draw_set_halign(fa_right)
        //Draw Current Layer Depth
        if user_layer_iteration &gt; 4 and user_cursor_display_mode = 0 draw_text_transformed(364+u_elements,125,string(user_layer_selected),1,1,0);
        //Draw Current Snap Size
        draw_text_transformed(408+u_elements,125,string(user_grid_snap),1,1,0)
        //Reset Alignment To The Left For Other Sidebar Elements
        draw_set_halign(fa_left)

        //Draw Tile Layer Mode
        if use_tile_switching_mode = 0 draw_background_ext(ui_auto_mode,349+u_elements,222,1,1,0,c_white,use_tile_menu_alpha);
        if use_tile_switching_mode = 1 draw_background_ext(ui_manual_mode,338+u_elements,222,1,1,0,c_white,use_tile_menu_alpha);
        
        //Draw The Tile Underneath The Cursor
        switch(user_place_mode)
            {
                //Draw "Put Here" As the A Button Prompt
                case 0: {draw_background_ext(ui_put_here,343+u_elements,54,1,1,0,c_white,use_tile_menu_alpha); break;}
                //Draw "Move" As the A Button Prompt
                case 1: {draw_background_ext(ui_move,343+u_elements,54,1,1,0,c_white,use_tile_menu_alpha); break;}
            }

        //Draw Displayed Button Prompts
        if use_dispaly_key_prompt = 0
            {
                draw_background_ext(use_display_put_here,322+u_elements,51,1,1,0,c_white,use_tile_menu_alpha)
                draw_background_ext(use_display_layer_down,325+u_elements,93,1,1,0,c_white,use_tile_menu_alpha)
                draw_background_ext(use_display_layer_up,349+u_elements,93,1,1,0,c_white,use_tile_menu_alpha)
                draw_background_ext(use_display_snap_up,384+u_elements,93,1,1,0,c_white,use_tile_menu_alpha)
        
                if (user_cursor_mode = 0 or user_cursor_mode = -1) and (use_stamp_state = 1)
                    {
                        draw_background_ext(use_display_delete,322+u_elements,173,1,1,0,c_white,use_tile_menu_alpha)
                        draw_background_ext(use_display_copy,322+u_elements,158,1,1,0,c_white,use_tile_menu_alpha)
                        draw_background_ext(use_display_new_tile,322+u_elements,188,1,1,0,c_white,use_tile_menu_alpha)
                        draw_background_ext(use_display_zoom,322+u_elements,204,1,1,0,c_white,use_tile_menu_alpha)
                    }
            }
        
        //Draw Displayed Key Prompts
        if use_dispaly_key_prompt = 1
            {
                draw_sprite_ext(spr_keyboard_font,key_put_here,322+u_elements,51,1,1,0,c_white,use_tile_menu_alpha)
                draw_sprite_ext(spr_keyboard_font,key_layer_down,325+u_elements,93,1,1,0,c_white,use_tile_menu_alpha)
                draw_sprite_ext(spr_keyboard_font,key_layer_up,349+u_elements,93,1,1,0,c_white,use_tile_menu_alpha)
                draw_sprite_ext(spr_keyboard_font,key_snap_up,384+u_elements,93,1,1,0,c_white,use_tile_menu_alpha)
        
                if (user_cursor_mode = 0 or user_cursor_mode = -1) and (use_stamp_state = 1)
                    {
                        draw_sprite_ext(spr_keyboard_font,key_delete,322+u_elements,173,1,1,0,c_white,use_tile_menu_alpha)
                        draw_sprite_ext(spr_keyboard_font,key_copy,322+u_elements,158,1,1,0,c_white,use_tile_menu_alpha)
                        draw_sprite_ext(spr_keyboard_font,key_new_tile,322+u_elements,188,1,1,0,c_white,use_tile_menu_alpha)
                        draw_sprite_ext(spr_keyboard_font,key_zoom,322+u_elements,204,1,1,0,c_white,use_tile_menu_alpha)
                    }
            }
    }

//Reset Alpha Transparency Of The Sidebar's GUI Elements
draw_set_alpha(1)

//Draw Background Selector
if use_tile_menu = 1
    {
        var background_selector_offset_x = 52;
        if use_bg_selector_minimize = 1
            background_selector_offset_x = 228;
        draw_background(ui_background_selector,321,background_selector_offset_x)
        draw_set_font(parent.text_font_academy)
        draw_set_color(c_white)
        draw_set_halign(fa_center)
        scr_set_background_string();
        if use_bg_selector_minimize = 0 draw_text_ext_transformed(367,63,use_bg_name_string,21,200,0.50,0.50,0);
        draw_set_halign(fa_left)
        //Draw Background Thumbnails
        if use_bg_selector_minimize = 0
            {
                var background_thumbnail_count = 0;
                var background_thumbnail_x = 325;
                var background_thumbnail_y = 72;
                while(background_thumbnail_count &lt; 18)
                    {
                        draw_sprite_stretched(spr_background_selector_thumbnails,background_thumbnail_count,background_thumbnail_x,background_thumbnail_y,12,12)
                        background_thumbnail_x += 15
                        if background_thumbnail_x &gt; 408
                            {
                                background_thumbnail_x = 325
                                background_thumbnail_y += 15
                            }
                        background_thumbnail_count += 1
                    }
            }
        //Display Description Box
        if use_tile_menu_subpage &gt; 0
            {
                draw_background(ui_description_box,321,123)
                draw_text_ext_transformed(324,127,use_help_description,18,184,0.5,0.5,0)
                draw_set_halign(fa_center)
                draw_set_color(c_black)
                draw_set_alpha(0.5)
                draw_text_ext_transformed(368,223,"Item Description",18,184,0.5,0.5,0)
                draw_set_alpha(1)
                draw_set_color(c_white)
                draw_text_ext_transformed(367,222,"Item Description",18,184,0.5,0.5,0)
                draw_set_halign(fa_left)
            }
        //Draw Stamp Selector
        if parent.user_cursor_mode = 1 and use_tile_menu_subpage = 0
            {
                if use_stamp_state = 0
                    {
                        draw_background(ui_stamp_maximized,user_editor_hud_offset+9,158);
                        //Draw Background Thumbnails
                        var background_thumbnail_count = 0;
                        var background_thumbnail_x = user_editor_hud_offset+12;
                        var background_thumbnail_y = 172;
                        while(background_thumbnail_count &lt; 10)
                            {
                                draw_set_alpha(0.5)
                                draw_sprite_stretched(use_stamp_list[background_thumbnail_count],0,background_thumbnail_x,background_thumbnail_y,14,14)
                                draw_set_alpha(1)
                                background_thumbnail_x += 17
                                if background_thumbnail_x &gt; 408
                                    {
                                        background_thumbnail_x = user_editor_hud_offset+12
                                        background_thumbnail_y += 17
                                    }
                                background_thumbnail_count += 1
                            }
                    }
                else
                    draw_background(ui_stamp_minimized,user_editor_hud_offset+9,158);
            }
    }
//Draw Highlights Under Selected Items
if use_highlight_alpha &gt; 0
    {
        //Decrement Highlighter Alpha Transparency
        use_highlight_alpha -= 0.0075
        if use_highlight_alpha &lt; 0 use_highlight_alpha = 0
        //Draw Tile Boundary Box
        draw_set_alpha(use_highlight_alpha)
        draw_rectangle_colour(use_highlight_alpha_x,use_highlight_alpha_y,floor(use_highlight_alpha_width-1),floor(use_highlight_alpha_height-1),c_red,c_red,c_yellow,c_yellow,false)
        draw_set_color(c_white)
        draw_rectangle(use_highlight_alpha_x,use_highlight_alpha_y,floor(use_highlight_alpha_width-1),floor(use_highlight_alpha_height-1),true)
        draw_set_alpha(1)
    }

//Saving Notification
if use_write_save_notification = 1 draw_background(ui_hud_saving,19,81);

if parent.general_notifications[2] &gt; 0 or parent.general_notifications[1] &gt; 0 or parent.general_notifications[0] &gt; 0
    draw_background(ui_dialogue_box,0,179);

if parent.general_notifications[0] &gt; 0
    {
        parent.general_notifications[0] -= 1
        draw_set_font(parent.text_font_academy)
        draw_text(2,222,parent.general_notifications_string[0])
        if parent.general_notifications[0] = 0 parent.general_notifications_string[0] = "";
    }

if parent.general_notifications[1] &gt; 0
    {
        parent.general_notifications[1] -= 1
        draw_set_font(parent.text_font_academy)
        draw_text(2,202,parent.general_notifications_string[1])
        if parent.general_notifications[1] = 0 parent.general_notifications_string[1] = "";
    }

if parent.general_notifications[2] &gt; 0
    {
        parent.general_notifications[2] -= 1
        draw_set_font(parent.text_font_academy)
        draw_text(2,182,parent.general_notifications_string[2])
        if parent.general_notifications[2] = 0 parent.general_notifications_string[2] = "";
    }

//Draw Weather Notifications
var storm_notification_offset = 222;
if use_zoom_position != 1
    storm_notification_offset = 204;
switch(use_weather_iterations)
    {
        default: {break;}
        case 1: {draw_background(ui_rain_notification,2,storm_notification_offset) break;}
        case 2: {draw_background(ui_storm_notification,2,storm_notification_offset) break;}
        case 3: {draw_background(ui_tempest_notification,2,storm_notification_offset) break;}
    }

//Draw Letterbox Offscreen Above The Screen, To Hide Sliding HUD Elements Offscreen
//draw_sprite_stretched(spr_transition,0,0,-64,426,64)

if use_file_menu != 2
    {
        var use_cursor_frame = use_cursor_spr;
        //Set Cursor Frame
        switch(floor(use_cursor_animation_frame))
            {
                case 0: {use_cursor_frame = use_cursor_spr; break;}
                case 1: {use_cursor_frame = use_cursor_spr_1; break;}
                case 2: {use_cursor_frame = use_cursor_spr_2; break;}
                case 3: {use_cursor_frame = use_cursor_spr_1; break;}
            }
        //Draw Sprite
        draw_background_ext(use_cursor_frame,device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),parent.mouse_scale,parent.mouse_scale,0,c_white,parent.mouse_cursor_transparency)
    }
else
    {
        if user_pen_mode = spr_erasing_cursor
            {
                var use_cursor_circle_width = abs(user_pen_size);
                draw_set_alpha(0.8)
                draw_ellipse_colour(device_mouse_x_to_gui(0)-use_cursor_circle_width,device_mouse_y_to_gui(0)-use_cursor_circle_width,device_mouse_x_to_gui(0)+use_cursor_circle_width,device_mouse_y_to_gui(0)+use_cursor_circle_width,c_red,c_yellow,false)
                draw_set_color(c_white)
                draw_ellipse(device_mouse_x_to_gui(0)-use_cursor_circle_width,device_mouse_y_to_gui(0)-use_cursor_circle_width,device_mouse_x_to_gui(0)+use_cursor_circle_width,device_mouse_y_to_gui(0)+use_cursor_circle_width,true)
                draw_set_alpha(1)
            }
        draw_sprite_ext(user_pen_mode,0,device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1,1,0,c_white,parent.mouse_cursor_transparency);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Screensaver
if parent.joy_input_screen_saver_alpha &gt; 0
    draw_sprite_ext(spr_transition,0,0,0,426,240,0,c_white,parent.joy_input_screen_saver_alpha);

if parent.key_reset_timer &gt; 0
    {
        draw_set_font(parent.menu_font)
        draw_set_color(c_white)
        draw_set_halign(fa_right)
        draw_set_alpha(parent.key_reset_alpha)
        draw_text(424,224,"Resetting.     .     .")
        draw_set_alpha(1)
        draw_set_halign(fa_left)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shang Mu Architect Popup Menus And Elements

//Draw Room Boundaries
draw_line_width(use_line_top[0],use_line_top[1],use_line_top[2],use_line_top[3],4)
draw_line_width(use_line_bottom[0],use_line_bottom[1],use_line_bottom[2],use_line_bottom[3],8)
draw_line_width(use_line_left[0],use_line_left[1],use_line_left[2],use_line_left[3],2)
draw_line_width(use_line_right[0],use_line_right[1],use_line_right[2],use_line_right[3],8)

draw_background_stretched(ui_next_map_tiled,use_line_right[2]-64,view_yview[view_port],64,view_hview[view_port])
draw_background(ui_next_map,use_line_right[2]-64,(view_yview[view_port]+view_hview[view_port]/2)-24)
if parent.use_maps_current_map &gt; 0
    {
        draw_background_stretched(ui_next_map_tiled,use_line_left[0],view_yview[view_port],64,view_hview[view_port])
        draw_background(ui_prev_map,use_line_left[0],(view_yview[view_port]+view_hview[view_port]/2)-24)
    }

draw_rectangle_colour(boss_boundary_left,boss_boundary_top,boss_boundary_right,boss_boundary_bottom,c_yellow,c_yellow,c_orange,c_orange,true)

if user_line_tool_active &gt;= 1
    {
        draw_set_color(user_line_tool_color)
        if user_pen_mode = spr_line_tool
            draw_line_width(user_line_tool_x1-0.5,user_line_tool_y1-0.5,use_cursor_x-0.5,use_cursor_y-0.5,1);
        //Draw Fainter Circles/Rectangles If The Cursor Is Too Far Away From The Origin Point
        var pen_distance = point_distance(user_line_tool_x1,user_line_tool_y1,use_cursor_x,use_cursor_y);
        var pen_alpha = 1;
        if pen_distance &gt;= 64 pen_alpha = 0.25;
        draw_set_alpha(pen_alpha)
        //Draw Circle Tool
        if user_pen_mode = spr_circle_tool
            draw_circle(user_line_tool_x1,user_line_tool_y1,point_distance(user_line_tool_x1,user_line_tool_y1,use_cursor_x,use_cursor_y),true)
        //Draw Rectangle Tool
        if user_pen_mode = spr_rectangle_tool
            draw_rectangle(user_line_tool_x1-0.5,user_line_tool_y1-0.5,use_cursor_x-0.5,use_cursor_y-0.5,true)
        draw_set_alpha(1)
    }

if use_delete_selection_box_active = 1
    {
        draw_set_font(parent.text_font_academy)
        draw_set_halign(fa_left)
        draw_set_color(c_white)
        var use_delete_selection_box_string = "Delete Selection";
        if use_tile_switching_mode = 1
            {
                if user_cursor_display_mode = 0 use_delete_selection_box_string = "Delete Tiles on Layer "+string(user_layer_selected);
                if user_cursor_display_mode = 1 use_delete_selection_box_string = "Delete Objects";
            }
        draw_text(use_delete_selection_box_x_0,use_delete_selection_box_y_0-14,use_delete_selection_box_string)
        draw_set_alpha(user_tile_boundary_alpha)
        draw_rectangle_colour(use_delete_selection_box_x_0,use_delete_selection_box_y_0,floor(use_delete_selection_box_x_1),floor(use_delete_selection_box_y_1),c_blue,c_blue,c_aqua,c_aqua,false)
        draw_rectangle(use_delete_selection_box_x_0,use_delete_selection_box_y_0,floor(use_delete_selection_box_x_1),floor(use_delete_selection_box_y_1),true)
        draw_set_alpha(1)
    }

if user_tool_grid = 1
    draw_background_tiled_ext(mu_pixel_grid,0,0,1,1,c_white,0.50);

if use_file_menu != 2
    {    
        //Draw the Tile Underneath The Cursor
        switch(user_place_mode)
            {
                //Draw Tile Underneath The Cursor, And It's Boundary Box
                case 0:
                    {
                        if use_tile_menu = 0 and parent.user_cursor_mode = 1 and side_bar_allow = 0 and use_next_previous_confirm = 0
                        and use_tile_properties_enable = 0 and use_corner_box = 0 and user_place_allow = 0
                        and use_delete_selection_box_active = 0
                            {
                                switch(user_cursor_display_mode)
                                    {
                                        //Draw Tile
                                        case 0:
                                            {
                                                if !tile_exists(user_move_tile_ID)
                                                    {
                                                        draw_background(user_tile_selected,user_grid_snap_x+user_grid_offset_x,user_grid_snap_y+user_grid_offset_y);
                                                        //Draw Tile Boundary Box
                                                        draw_set_alpha(user_tile_boundary_alpha)
                                                        draw_rectangle_colour(user_grid_snap_x+user_grid_offset_x,user_grid_snap_y+user_grid_offset_y,floor(user_grid_snap_x+user_grid_offset_x+background_get_width(user_tile_selected)-1),floor(user_grid_snap_y+user_grid_offset_y+background_get_height(user_tile_selected)-1),c_red,c_red,c_yellow,c_yellow,false)
                                                        draw_set_color(c_white)
                                                        draw_rectangle(user_grid_snap_x+user_grid_offset_x,user_grid_snap_y+user_grid_offset_y,floor(user_grid_snap_x+user_grid_offset_x+background_get_width(user_tile_selected)-1),floor(user_grid_snap_y+user_grid_offset_y+background_get_height(user_tile_selected)-1),true)
                                                        draw_set_alpha(1)
                                                    }
                                                break;
                                            }
                                        //Draw Sprite
                                        case 1:
                                            {
                                                if user_tile_selected = spr_loop_logic
                                                    {
                                                        var tile_search = tile_layer_find(surface_slopes,user_grid_snap_x,user_grid_snap_y);
        
                                                        if !tile_exists(tile_search)
                                                            {
                                                                draw_background(mu_slope_10,user_grid_snap_x-140,user_grid_snap_y-262)
                                                                draw_background(mu_slope_11,user_grid_snap_x-140,user_grid_snap_y-128)
                                                                draw_background(mu_slope_12,user_grid_snap_x,user_grid_snap_y-262)
                                                                draw_background(mu_slope_13,user_grid_snap_x,user_grid_snap_y-128)
                                                            }
                                                    }
                                                if user_tile_selected = spr_brick_loop
                                                    {
                                                        var tile_search = tile_layer_find(surface_slopes,user_grid_snap_x,user_grid_snap_y);
        
                                                        if !tile_exists(tile_search)
                                                            {
                                                                draw_background(wd_slope_4,user_grid_snap_x-80,user_grid_snap_y-240)
                                                                draw_background(wd_slope_7,user_grid_snap_x-80,user_grid_snap_y-112)
                                                                draw_background(wd_slope_5,user_grid_snap_x,user_grid_snap_y-240)
                                                                draw_background(wd_slope_6,user_grid_snap_x,user_grid_snap_y-112)
                                                            }
                                                    }
                                                if user_tile_selected = spr_road_loop
                                                    {
                                                        var tile_search = tile_layer_find(surface_slopes,user_grid_snap_x,user_grid_snap_y);
        
                                                        if !tile_exists(tile_search)
                                                            {
                                                                draw_background(wd_slope_16,user_grid_snap_x-152,user_grid_snap_y-268)
                                                                draw_background(wd_slope_17,user_grid_snap_x-152,user_grid_snap_y-124)
                                                                draw_background(wd_slope_18,user_grid_snap_x,user_grid_snap_y-268)
                                                                draw_background(wd_slope_19,user_grid_snap_x,user_grid_snap_y-124)
                                                            }
                                                    }
                                                if user_tile_selected = spr_dna_cannon
                                                    draw_background(spr_dna_cannon_base,user_grid_snap_x-39,user_grid_snap_y-24);
                                                draw_sprite(user_tile_selected,0,user_grid_snap_x,user_grid_snap_y);
                                                break;
                                            }
                                    }
                            }
                        if tile_exists(user_move_tile_ID)
                            {
                                draw_background(user_move_tile_ID,user_grid_snap_x+user_move_offset_x,user_grid_snap_y+user_move_offset_y);
                                //Draw Tile Boundary Box
                                draw_set_alpha(user_tile_boundary_alpha)
                                draw_rectangle_colour(user_grid_snap_x+user_move_offset_x,user_grid_snap_y+user_move_offset_y,floor(user_grid_snap_x+user_move_offset_x+background_get_width(user_move_tile_ID)-1),floor(user_grid_snap_y+user_move_offset_y+background_get_height(user_move_tile_ID)-1),c_red,c_red,c_yellow,c_yellow,false)
                                draw_set_color(c_white)
                                draw_rectangle(user_grid_snap_x+user_move_offset_x,user_grid_snap_y+user_move_offset_y,floor(user_grid_snap_x+user_move_offset_x+background_get_width(user_move_tile_ID)-1),floor(user_grid_snap_y+user_move_offset_y+background_get_height(user_move_tile_ID)-1),true)
                                draw_set_alpha(1)
                            }
                        break;
                    }
                //Draw A Boundary Box Of The Tile Underneath The Cursor, As It Hovers Over The Tile
                case 1:
                    {
                        //Scan For A Tile To Show Its Boundary Box
                        var tile_scanner = tile_layer_find(user_layer_selected,use_cursor_x,use_cursor_y);
        
                        if tile_exists(tile_scanner) and user_cursor_mode = 0 and use_tile_menu = 0 and (side_bar_allow = 0) and user_cursor_display_mode = 0
                            {
                                //Check For Exceptional Tiles That Should Be Excluded From Scanning (Such As Object-Specific Flag Tiles)
                                var tile_scanner_ID = tile_get_background(tile_scanner);
        
                                //Check for exceptional tiles the editor should be ignoring (Such as object-specific flag tiles)
                                var tile_scanner_IDs_exceptional_tiles = scr_check_layer_surface(tile_scanner_ID)

                                //Create exceptions for specific slope tiles
                                var tile_scanner_IDs_exceptional_slope_tiles = 0;
                                var tile_scanner_result = scr_set_check_exceptional_slope_tiles(tile_scanner_ID);
                                if tile_scanner_result = 1
                                    {
                                        tile_scanner_IDs_exceptional_tiles = 1
                                        tile_scanner_IDs_exceptional_slope_tiles = 1
                                    }
        
                                //If the exceptional tile scan returned positive, scan for any tiles found underneath the player's cursor
                                if tile_scanner_IDs_exceptional_tiles = 1 and (!mouse_check_button(joy_mouse_button_left) and use_put_here = 0)
                                    {
                                        //Determine The Tile's Scaling
                                        var tile_modifier_x = tile_get_xscale(tile_scanner);
                                        var tile_modifier_y = tile_get_yscale(tile_scanner);
                                        //Draw Tile Boundary Box
                                        draw_set_alpha(user_tile_boundary_alpha)
                                        draw_rectangle_colour(tile_get_x(tile_scanner),tile_get_y(tile_scanner),floor(tile_get_x(tile_scanner)+tile_get_width(tile_scanner)*tile_modifier_x-1),floor(tile_get_y(tile_scanner)+tile_get_height(tile_scanner)*tile_modifier_y-1),c_red,c_red,c_yellow,c_yellow,false)
                                        draw_set_color(c_white)
                                        draw_rectangle(tile_get_x(tile_scanner),tile_get_y(tile_scanner),floor(tile_get_x(tile_scanner)+tile_get_width(tile_scanner)*tile_modifier_x-1),floor(tile_get_y(tile_scanner)+tile_get_height(tile_scanner)*tile_modifier_y-1),true)
                                        draw_set_alpha(1)
                                        //Draw Scaling Arrows
                                        if use_zoom_position &gt;= 1 and use_zoom_position &lt;= 3
                                        and not ((user_layer_selected = surface_slopes and tile_scanner_IDs_exceptional_slope_tiles = 0) or user_layer_selected = surface_modifiers
                                        or user_layer_selected = surface_enemy_flags or user_layer_selected = surface_flags)
                                            {
                                                draw_background(ui_resize_top_right,tile_get_x(tile_scanner)+tile_get_width(tile_scanner)-10,tile_get_y(tile_scanner))
                                                draw_background(ui_resize_bottom_right,tile_get_x(tile_scanner)+tile_get_width(tile_scanner)-10,tile_get_y(tile_scanner)+tile_get_height(tile_scanner)-10)
                                                draw_background(ui_resize_bottom_left,tile_get_x(tile_scanner),tile_get_y(tile_scanner)+tile_get_height(tile_scanner)-10)
                                                draw_background(ui_resize_top_left,tile_get_x(tile_scanner),tile_get_y(tile_scanner))
                                            }
                                        //After half of a second has passed, display the tile properties popup
                                        use_tile_properties_timer += 1
                                        if use_tile_properties_timer = 90 and user_layer_selected != surface_items and user_layer_selected != surface_modifiers and use_tile_properties_enable = 0
                                            {
                                                use_tile_properties_tile_id = tile_scanner
                                                use_tile_properties_y_offset = 15
                                                use_tile_properties_alpha = 0
                                                use_tile_properties_enable = 1
                                                //Set cursor boundaries for disabling the tile properies popup
                                                use_tile_properties_xscale = tile_get_xscale(tile_scanner)
                                                use_tile_properties_yscale = tile_get_yscale(tile_scanner)
                                                //If the tile isn't flipped, get normal horizontal boundaries
                                                if tile_modifier_x &gt; 0
                                                    {
                                                        use_tile_properties_x = floor(tile_get_x(tile_scanner))+floor(tile_get_width(tile_scanner)/2)-use_zoom_tile_menu_scaling
                                                        use_tile_properties_boundary_x1 = floor(tile_get_x(tile_scanner))
                                                        use_tile_properties_boundary_x2 = floor(tile_get_x(tile_scanner))+floor(tile_get_width(tile_scanner))
                                                        //Set cursor boundaries for disabling tile interactions behind the tile properties popup
                                                        use_tile_properties_cursor_boundary_x1 = floor(tile_get_x(tile_scanner))+floor(tile_get_width(tile_scanner)/2)-use_zoom_tile_menu_scaling
                                                        use_tile_properties_cursor_boundary_x2 = floor(tile_get_x(tile_scanner))+floor(tile_get_width(tile_scanner)/2)+use_zoom_tile_menu_scaling
                                                    }
                                                //If the tile is flipped, get mirrored horizontal boundaries
                                                if tile_modifier_x &lt; 0
                                                    {
                                                        use_tile_properties_x = floor(tile_get_x(tile_scanner))-floor(tile_get_width(tile_scanner)/2)-use_zoom_tile_menu_scaling
                                                        use_tile_properties_boundary_x1 = floor(tile_get_x(tile_scanner))-floor(tile_get_width(tile_scanner))
                                                        use_tile_properties_boundary_x2 = floor(tile_get_x(tile_scanner))
                                                        //Set cursor boundaries for disabling tile interactions behind the tile properties popup
                                                        use_tile_properties_cursor_boundary_x1 = floor(tile_get_x(tile_scanner))-floor(tile_get_width(tile_scanner)/2)-use_zoom_tile_menu_scaling
                                                        use_tile_properties_cursor_boundary_x2 = floor(tile_get_x(tile_scanner))-floor(tile_get_width(tile_scanner)/2)+use_zoom_tile_menu_scaling
                                                    }
                                                //If the tile isn't a slope tile, get normal vertical boundaries
                                                if user_layer_selected != surface_slopes and user_layer_selected != surface_flats
                                                    {
                                                        //If the tile isn't flipped, get normal vertical boundaries
                                                        if tile_modifier_y &gt; 0
                                                            {
                                                                use_tile_properties_y = floor(tile_get_y(tile_scanner)-use_zoom_tile_menu_scaling_vertical_0)
                                                                use_tile_properties_boundary_y1 = floor(tile_get_y(tile_scanner)-use_zoom_tile_menu_scaling_vertical_0)
                                                                use_tile_properties_boundary_y2 = floor(tile_get_y(tile_scanner)+tile_get_height(tile_scanner))
                                                                //Set cursor boundaries for disabling tile interactions behind the tile properties popup
                                                                use_tile_properties_cursor_boundary_y1 = floor(tile_get_y(tile_scanner)-use_zoom_tile_menu_scaling_vertical_0)
                                                                use_tile_properties_cursor_boundary_y2 = floor(tile_get_y(tile_scanner)+use_zoom_tile_menu_scaling_vertical_1)
                                                            }
                                                        //If the tile is flipped, get mirrored vertical boundaries
                                                        if tile_modifier_y &lt; 0
                                                            {
                                                                use_tile_properties_y = floor(tile_get_y(tile_scanner)-tile_get_height(tile_scanner)-use_zoom_tile_menu_scaling_vertical_0)
                                                                use_tile_properties_boundary_y1 = floor(tile_get_y(tile_scanner)-tile_get_height(tile_scanner)-use_zoom_tile_menu_scaling_vertical_0)
                                                                use_tile_properties_boundary_y2 = floor(tile_get_y(tile_scanner))
                                                                //Set cursor boundaries for disabling tile interactions behind the tile properties popup
                                                                use_tile_properties_cursor_boundary_y1 = floor(tile_get_y(tile_scanner)-tile_get_height(tile_scanner)-use_zoom_tile_menu_scaling_vertical_0)
                                                                use_tile_properties_cursor_boundary_y2 = floor(tile_get_y(tile_scanner)+use_zoom_tile_menu_scaling_vertical_1)
                                                            }
                                                    }
                                                //If the tile is a slope tile, get shorter vertical boundaries
                                                else
                                                    {
                                                        use_tile_properties_y = floor(tile_get_y(tile_scanner)-use_zoom_tile_menu_scaling_vertical_0)
                                                        use_tile_properties_boundary_y1 = floor(tile_get_y(tile_scanner)-use_zoom_tile_menu_scaling_vertical_2)
                                                        use_tile_properties_boundary_y2 = floor(tile_get_y(tile_scanner)+tile_get_height(tile_scanner))
                                                        //Set cursor boundaries for disabling tile interactions behind the tile properties popup
                                                        use_tile_properties_cursor_boundary_y1 = floor(tile_get_y(tile_scanner)-use_zoom_tile_menu_scaling_vertical_2)
                                                        use_tile_properties_cursor_boundary_y2 = floor(tile_get_y(tile_scanner)+use_zoom_tile_menu_scaling_vertical_1)
                                                    }
                                            }
                                        if use_tile_properties_timer = 90 and (user_layer_selected = surface_items or user_layer_selected = surface_modifiers) and use_tile_properties_enable = 0
                                            {
                                                scr_clear_zoom_level();
                                            }
                                    }
                            }
                        break;
                    }
                //Draw Item Tiles Over Objects
                case 2:
                    {
                        use_item_check_timer += 1
                        if use_item_check_timer = 10
                            {
                                use_item_check_timer = 0
                                use_item_check_verified = scr_set_check_item(user_tile_selected);
                                var instance_ID = instance_position(use_cursor_x,use_cursor_y,obj_delete_parent);
                                if instance_exists(instance_ID)
                                    {
                                        if instance_ID.sprite_index = user_tile_selected
                                            use_item_check_verified = 0;
                                    }
                            }
                        if use_item_check_verified = 1 and side_bar_allow = 0 and use_tile_menu = 0
                            draw_sprite(user_tile_selected,0,user_grid_snap_x,user_grid_snap_y);
                        break;
                    }
            }

        //Draw Moving Platform Placer Path
        if use_fof = 1
            {
                draw_line_width_colour(user_draw_path_x_1,user_draw_path_y_1,user_draw_path_x_2,user_draw_path_y_2,4,c_yellow,c_orange)
                draw_line_width_colour(user_draw_path_x_1,user_draw_path_y_1,user_draw_path_x_2,user_draw_path_y_2,2,c_orange,c_yellow)
                if user_tile_selected = spr_platform_modifier_horizontal
                    {
                        if user_draw_path_x_1 &lt; user_draw_path_x_2
                            draw_background_ext(mu_fof_3,user_draw_path_x_1+(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-32,
                            user_draw_path_y_1-15,1,1,0,c_white,0.5);
                        if user_draw_path_x_1 &gt; user_draw_path_x_2
                            draw_background_ext(mu_fof_3,user_draw_path_x_1-(abs(user_draw_path_x_1 - user_draw_path_x_2)/2)-32,
                            user_draw_path_y_1-15,1,1,0,c_white,0.5);
                    }
                if user_tile_selected = spr_platform_modifier_vertical
                    {
                        if user_draw_path_y_1 &lt; user_draw_path_y_2
                            draw_background_ext(mu_fof_3,user_draw_path_x_1-28,
                            user_draw_path_y_1+(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-15,1,1,0,c_white,0.5);
                        if user_draw_path_y_1 &gt; user_draw_path_y_2
                            draw_background_ext(mu_fof_3,user_draw_path_x_1-28,
                            user_draw_path_y_1-(abs(user_draw_path_y_1 - user_draw_path_y_2)/2)-15,1,1,0,c_white,0.5);
                    }
            }
        
        //Draw Repeat Tile Boundary Box
        if use_corner_box &gt; 0 and use_corner_box &lt; 5
            {
                //Draw Tile Previews
                var use_corner_counter_x = 0;
                var use_corner_counter_y = 0;
                var use_corner_width_s  = abs(use_corner_box_bottom_left_x - use_corner_box_top_right_x)
                var use_corner_height_s = abs(use_corner_box_bottom_left_y - use_corner_box_top_right_y)
                var use_tile_width_s  = tile_get_width(use_corner_box_id);
                var use_tile_height_s = tile_get_height(use_corner_box_id);
        
                //How many tiles can we create?
                use_corner_width_result_s  = floor(use_corner_width_s / use_tile_width_s);
                use_corner_height_result_s = floor(use_corner_height_s / use_tile_height_s);
                switch(use_corner_box)
                    {
                        //Top-right
                        case 1:
                            {
                                while(use_corner_counter_y &lt; use_corner_height_result_s)
                                    {
                                        draw_background(tile_get_background(use_corner_box_id),
                                        use_corner_box_bottom_left_x+(use_tile_width_s*use_corner_counter_x),
                                        use_corner_box_bottom_left_y-tile_get_height(use_corner_box_id)-(use_tile_height_s*use_corner_counter_y))
                                        use_corner_counter_x += 1;
                                        if (use_corner_counter_x &gt; use_corner_width_result_s)
                                            {
                                                use_corner_counter_x = 0;
                                                use_corner_counter_y += 1;
                                            }
                                    }
                                break;
                            }
                        //Bottom-right
                        case 2:
                            {
                                while(use_corner_counter_y &lt; use_corner_height_result_s)
                                    {
                                        draw_background(tile_get_background(use_corner_box_id),
                                        use_corner_box_bottom_left_x+(use_tile_width_s*use_corner_counter_x),
                                        use_corner_box_bottom_left_y+(use_tile_height_s*use_corner_counter_y))
                                        use_corner_counter_x += 1;
                                        if (use_corner_counter_x &gt; use_corner_width_result_s)
                                            {
                                                use_corner_counter_x = 0;
                                                use_corner_counter_y += 1;
                                            }
                                    }
                                break;
                            }
                        //Bottom-left
                        case 3:
                            {
                                while(use_corner_counter_y &lt; use_corner_height_result_s)
                                    {
                                        draw_background(tile_get_background(use_corner_box_id),
                                        use_corner_box_bottom_left_x-tile_get_width(use_corner_box_id)-(use_tile_width_s*use_corner_counter_x),
                                        use_corner_box_bottom_left_y+(use_tile_height_s*use_corner_counter_y))
                                        use_corner_counter_x += 1;
                                        if (use_corner_counter_x &gt; use_corner_width_result_s)
                                            {
                                                use_corner_counter_x = 0;
                                                use_corner_counter_y += 1;
                                            }
                                    }
                                break;
                            }
                        //Top-left
                        case 4:
                            {
                                while(use_corner_counter_y &lt; use_corner_height_result_s)
                                    {
                                        draw_background(tile_get_background(use_corner_box_id),
                                        use_corner_box_bottom_left_x-tile_get_width(use_corner_box_id)-(use_tile_width_s*use_corner_counter_x),
                                        use_corner_box_bottom_left_y-tile_get_height(use_corner_box_id)-(use_tile_height_s*use_corner_counter_y))
                                        use_corner_counter_x += 1;
                                        if (use_corner_counter_x &gt; use_corner_width_result_s)
                                            {
                                                use_corner_counter_x = 0;
                                                use_corner_counter_y += 1;
                                            }
                                    }
                                break;
                            }
                    }
                //Draw Tile Boundary Box
                draw_set_alpha(user_tile_boundary_alpha)
                draw_rectangle_colour(use_corner_box_bottom_left_x,use_corner_box_bottom_left_y,floor(use_corner_box_top_right_x-1),floor(use_corner_box_top_right_y-1),c_red,c_red,c_yellow,c_yellow,false)
                draw_set_color(c_white)
                draw_rectangle(use_corner_box_bottom_left_x,use_corner_box_bottom_left_y,floor(use_corner_box_top_right_x-1),floor(use_corner_box_top_right_y-1),true)
                draw_set_alpha(1)
        
            }

        //Draw Tile Properties Popup
        if use_tile_properties_enable &gt; 0
            {
                draw_set_alpha(use_tile_properties_alpha)
                //Draw advanced tile properites popup for all but the slope surface layer
                if user_layer_selected != surface_slopes and user_layer_selected != surface_flats draw_background_ext(ui_tile_properties,use_tile_properties_x,use_tile_properties_y+use_tile_properties_y_offset,use_zoom_multiplier,use_zoom_multiplier,0,c_white,1);
                //Draw a simplified version of the tile properties popup for slope tiles
                else                                     draw_background_ext(ui_tile_properties_slopes,use_tile_properties_x,use_tile_properties_y+use_zoom_tile_menu_scaling_vertical_3+use_tile_properties_y_offset,use_zoom_multiplier,use_zoom_multiplier,0,c_white,1);
                draw_set_alpha(1)
                //Raise tile properties popup during its transition
                if use_tile_properties_y_offset &gt; 0 use_tile_properties_y_offset -= 2;
                //Increase tile properies popup's alpha transparency during its transition
                if use_tile_properties_alpha &lt; 1 use_tile_properties_alpha += 0.05;
                //Disable tile properties popup if the mouse is no longer hovering over it
                if not (use_cursor_x &gt;= use_tile_properties_boundary_x1+use_zoom_tile_menu_scaling_horizontal_0 and use_cursor_x &lt;= use_tile_properties_boundary_x2-use_zoom_tile_menu_scaling_horizontal_1
                    and use_cursor_y &gt;= use_tile_properties_boundary_y1 and use_cursor_y &lt;= use_tile_properties_boundary_y2)
                    scr_clear_zoom_level();
            }

        //Draw Loop Exit Display Assistant
        if user_cursor_display_mode = 1 and user_tile_selected = spr_loop_exit
            {
                if use_tile_menu = 0 and user_cursor_mode = 0 and side_bar_allow = 0
                and use_tile_properties_enable = 0 and use_corner_box = 0
                and user_move_tile_ID = -1 and user_place_allow = 0
                    {
                        var user_loop_exit_assistant_id = tile_layer_find(surface_slopes,use_cursor_x,use_cursor_y);

                        use_loop_exit_timer += 1

                        if use_loop_exit_timer &gt;= 8
                            {
                                user_loop_exit_assistant_id_prev = user_loop_exit_assistant_id
                                use_loop_exit_timer = 0
                            }
                        if user_loop_exit_assistant_id_prev != user_loop_exit_assistant_id
                            {
                                use_loop_exit_x = 0
                                use_loop_exit_y = 0
                                use_loop_exit_angle = 0
                            }
        
                        if tile_exists(user_loop_exit_assistant_id)
                            {
                                //Animate Example Player
                                use_loop_exit_frame += 0.25
                                if use_loop_exit_frame &gt; 3.8 use_loop_exit_frame = 0;
                                //Decide Example Player's Skin
                                switch(obj_game_logic.skin)
                                    {
                                        case spr_lilac: {use_loop_exit_skin = spr_loop_exit_example_lilac; break;}
                                        case spr_carol: {use_loop_exit_skin = spr_loop_exit_example_carol; break;}
                                        case spr_milla: {use_loop_exit_skin = spr_loop_exit_example_milla; break;}
                                        case spr_spade: {use_loop_exit_skin = spr_loop_exit_example_spade; break;}
                                    }

                                var bg_id = tile_get_background(user_loop_exit_assistant_id);

                                //Top-Left -90 Degrees
                                if bg_id = mu_slope_10
                                or bg_id = mu_slope_14
                                or bg_id = wd_slope_4
                                or bg_id = wd_slope_12
                                or bg_id = wd_slope_16
                                or bg_id = wd_slope_20
                                    {
                                        use_loop_exit_display_target_angle = -90
                                        use_loop_exit_display_angle = lerp(use_loop_exit_display_angle,use_loop_exit_display_target_angle,0.15);
                                        draw_sprite_ext(spr_loop_exit_path,0,tile_get_x(user_loop_exit_assistant_id)+background_get_width(bg_id),tile_get_y(user_loop_exit_assistant_id)+background_get_height(bg_id),1,1,0,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,1,tile_get_x(user_loop_exit_assistant_id)+background_get_width(bg_id),tile_get_y(user_loop_exit_assistant_id)+background_get_height(bg_id),1,1,use_loop_exit_display_angle,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,2,tile_get_x(user_loop_exit_assistant_id)+background_get_width(bg_id),tile_get_y(user_loop_exit_assistant_id)+background_get_height(bg_id),1,1,use_loop_exit_display_target_angle,c_white,user_tile_boundary_alpha+0.25);

                                        //Reset Boundaries For Example Player        
                                        if use_loop_exit_y &lt; -168
                                            {
                                                use_loop_exit_x = 0
                                                use_loop_exit_y = 0
                                                use_loop_exit_angle = 0
                                            }
                                        if use_loop_exit_angle &gt; 0 use_loop_exit_angle = 0;
                                        //Example Player Movement
                                        if use_loop_exit_angle = 0 use_loop_exit_x -= 8;
                                        if use_loop_exit_angle &lt;= -90 use_loop_exit_y -= 8;
                                        if use_loop_exit_x &lt; -168 use_loop_exit_angle -= 8;
                                        if use_loop_exit_angle &lt; -90 use_loop_exit_angle = -90;
                                        //Draw Example Player
                                        draw_sprite_ext(use_loop_exit_skin,use_loop_exit_frame,(tile_get_x(user_loop_exit_assistant_id)+256)+use_loop_exit_x,tile_get_y(user_loop_exit_assistant_id)+168+use_loop_exit_y,-1,1,use_loop_exit_angle,c_white,0.75);
                                    }
        
                                //Bottom-Left 0 Degrees
                                if bg_id = mu_slope_11
                                or bg_id = mu_slope_15
                                or bg_id = wd_slope_7
                                or bg_id = wd_slope_15
                                or bg_id = wd_slope_17
                                or bg_id = wd_slope_21 
                                    {
                                        use_loop_exit_display_target_angle = 0
                                        use_loop_exit_display_angle = lerp(use_loop_exit_display_angle,use_loop_exit_display_target_angle,0.15);
                                        draw_sprite_ext(spr_loop_exit_path,0,tile_get_x(user_loop_exit_assistant_id)+background_get_width(bg_id),tile_get_y(user_loop_exit_assistant_id),1,1,0,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,1,tile_get_x(user_loop_exit_assistant_id)+background_get_width(bg_id),tile_get_y(user_loop_exit_assistant_id),-1,1,use_loop_exit_display_angle,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,2,tile_get_x(user_loop_exit_assistant_id)+background_get_width(bg_id),tile_get_y(user_loop_exit_assistant_id),-1,1,use_loop_exit_display_target_angle,c_white,user_tile_boundary_alpha+0.25);

                                        //Reset Boundaries For Example Player        
                                        if use_loop_exit_x &gt; 168
                                            {
                                                use_loop_exit_x = 0
                                                use_loop_exit_y = 0
                                                use_loop_exit_angle = 270
                                            }
                                        if use_loop_exit_angle &lt; 270 use_loop_exit_angle = 270;
                                        //Example Player Movement
                                        if use_loop_exit_angle = 270 use_loop_exit_y += 8;
                                        if use_loop_exit_angle = 360 use_loop_exit_x += 8;
                                        if use_loop_exit_y &gt; 168 use_loop_exit_angle += 8;
                                        if use_loop_exit_angle &gt; 360 use_loop_exit_angle = 360;
                                        //Draw Example Player
                                        draw_sprite_ext(use_loop_exit_skin,use_loop_exit_frame,(tile_get_x(user_loop_exit_assistant_id)+96)+use_loop_exit_x,(tile_get_y(user_loop_exit_assistant_id)-168)+use_loop_exit_y,1,1,use_loop_exit_angle,c_white,0.75);
                                    }
        
                                //Top-Right 90 Degrees
                                if bg_id = mu_slope_12
                                or bg_id = mu_slope_16
                                or bg_id = wd_slope_5
                                or bg_id = wd_slope_13
                                or bg_id = wd_slope_18
                                or bg_id = wd_slope_22
                                    {
                                        use_loop_exit_display_target_angle = 90
                                        use_loop_exit_display_angle = lerp(use_loop_exit_display_angle,use_loop_exit_display_target_angle,0.15);
                                        draw_sprite_ext(spr_loop_exit_path,0,tile_get_x(user_loop_exit_assistant_id),tile_get_y(user_loop_exit_assistant_id)+background_get_height(bg_id),1,1,0,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,1,tile_get_x(user_loop_exit_assistant_id),tile_get_y(user_loop_exit_assistant_id)+background_get_height(bg_id),-1,1,use_loop_exit_display_angle,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,2,tile_get_x(user_loop_exit_assistant_id),tile_get_y(user_loop_exit_assistant_id)+background_get_height(bg_id),-1,1,use_loop_exit_display_target_angle,c_white,user_tile_boundary_alpha+0.25);

                                        //Reset Boundaries For Example Player        
                                        if use_loop_exit_y &lt; -168
                                            {
                                                use_loop_exit_x = 0
                                                use_loop_exit_y = 0
                                                use_loop_exit_angle = 0
                                            }
                                        if use_loop_exit_angle &lt; 0 use_loop_exit_angle = 0;
                                        //Example Player Movement
                                        if use_loop_exit_angle = 0 use_loop_exit_x += 8;
                                        if use_loop_exit_angle &gt;= 90 use_loop_exit_y -= 8;
                                        if use_loop_exit_x &gt; 168 use_loop_exit_angle += 8;
                                        if use_loop_exit_angle &gt; 90 use_loop_exit_angle = 90;
                                        //Draw Example Player
                                        draw_sprite_ext(use_loop_exit_skin,use_loop_exit_frame,(tile_get_x(user_loop_exit_assistant_id)-168)+use_loop_exit_x,tile_get_y(user_loop_exit_assistant_id)+168+use_loop_exit_y,1,1,use_loop_exit_angle,c_white,0.75);
                                    }
        
                                //Bottom-Right 0 Degrees
                                if bg_id = mu_slope_13
                                or bg_id = mu_slope_17
                                or bg_id = wd_slope_6
                                or bg_id = wd_slope_14
                                or bg_id = wd_slope_19
                                or bg_id = wd_slope_23
                                    {
                                        use_loop_exit_display_target_angle = 0
                                        use_loop_exit_display_angle = lerp(use_loop_exit_display_angle,use_loop_exit_display_target_angle,0.15);
                                        draw_sprite_ext(spr_loop_exit_path,0,tile_get_x(user_loop_exit_assistant_id),tile_get_y(user_loop_exit_assistant_id),1,1,0,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,1,tile_get_x(user_loop_exit_assistant_id),tile_get_y(user_loop_exit_assistant_id),1,1,use_loop_exit_display_angle,c_white,1);
                                        draw_sprite_ext(spr_loop_exit_path,2,tile_get_x(user_loop_exit_assistant_id),tile_get_y(user_loop_exit_assistant_id),1,1,use_loop_exit_display_target_angle,c_white,user_tile_boundary_alpha+0.25);

                                        //Reset Boundaries For Example Player        
                                        if use_loop_exit_x &lt; -168
                                            {
                                                use_loop_exit_x = 0
                                                use_loop_exit_y = 0
                                                use_loop_exit_angle = 90
                                            }
                                        if use_loop_exit_angle &gt; 90 use_loop_exit_angle = 90;
                                        //Example Player Movement
                                        if use_loop_exit_angle = 90 use_loop_exit_y += 8;
                                        if use_loop_exit_angle = 0 use_loop_exit_x -= 8;
                                        if use_loop_exit_y &gt; 168 use_loop_exit_angle -= 8;
                                        if use_loop_exit_angle &lt; 0 use_loop_exit_angle = 0;
                                        //Draw Example Player
                                        draw_sprite_ext(use_loop_exit_skin,use_loop_exit_frame,(tile_get_x(user_loop_exit_assistant_id)+16)+use_loop_exit_x,(tile_get_y(user_loop_exit_assistant_id)-168)+use_loop_exit_y,-1,1,use_loop_exit_angle,c_white,0.75);
                                    }
                            }
                        else
                            {
                                use_loop_exit_x = 0
                                use_loop_exit_y = 0
                                use_loop_exit_angle = 0
                            }
                    }
            }
        //Draw Click Particle Effect
        if use_particle_frame &gt; 0 draw_sprite_ext(spr_cube_pop_large,use_particle_frame,use_particle_x,use_particle_y,use_zoom_multiplier,use_zoom_multiplier,0,c_white,obj_game_logic.mouse_cursor_transparency);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
