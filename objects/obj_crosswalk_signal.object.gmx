<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_crosswalk_signal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_crosswalk_signal
image_index = 0
image_speed = 0

current_vehicle = spr_mom_car
current_sound = carol_bike_boost
current_frame = 0
current_x = 0
current_y = 0
current_min = 1
current_max = 2.8
current_timer = 0
current_active = 0
current_mileage = 0
current_direction = 1
current_time_of_day = 0
if instance_exists(obj_bg_logic_night)
or instance_exists(obj_bg_logic_nighttime)
or instance_exists(obj_bg_city)
    current_time_of_day = 1;

check_frame = 0

//Mom Car
vehicle_garage[0,0] = spr_mom_car
vehicle_garage[0,1] = carol_bike_boost
//Semi-Truck
vehicle_garage[1,0] = spr_semi_truck
vehicle_garage[1,1] = snd_truck_stopping
//Red-Scarves
vehicle_garage[2,0] = spr_red_scarves
vehicle_garage[2,1] = carol_bike_boost

//Are We Allowed To Hold Items?
give_item = 0
item = 0
attacked = 0
attacked_damage = 4
attacked_allow = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var o = obj_game_logic;

if o.pause = 0
    {
        current_timer += 1
        //Crosswalk Signal Animations
        if current_timer = 30
            {
                current_min = 3
                current_max = 4.8
                if point_in_rectangle(o.px,o.py,x-1264,y-128,x+128,y+96)
                and o.user_cursor_mode = 0
                    audio_play_sound(snd_traffic_sign,50,false);
            }
        if current_timer = 60
            {
                current_min = 5
                current_max = 6.8
                if point_in_rectangle(o.px,o.py,x-1264,y-128,x+128,y+96)
                and o.user_cursor_mode = 0
                    audio_play_sound(snd_traffic_sign,50,false);
            }
        if current_timer = 90
            {
                current_min = 8
                current_max = 8.8
            }
        if current_timer = 300
            {
                current_min = 1
                current_max = 2.8
                current_timer = 0
                current_active = 0
                if point_in_rectangle(o.px,o.py,x-1264,y-128,x+128,y+96)
                and o.user_cursor_mode = 0
                    audio_play_sound(snd_traffic_sign,50,false);
            }

        //Animations
        image_index += 0.54
        if image_index &gt; current_max
            image_index = current_min;

        //Hazard Logic
        if current_timer &gt; 90 and current_timer &lt; 240
            {
                if ( point_in_rectangle(o.px,o.py,x+64,y-32,x+128,y+96)
                or   point_in_rectangle(o.px,o.py,x-64,y-32,x,y+96))
                and (current_active = 0 and o.user_cursor_mode = 0)
                    current_active = 1;
            }
        //Activation
        if current_active = 1
            {
                if o.px &lt; x
                    {
                        current_x = view_xview[view_port]-64
                        current_y = y+sprite_get_height(sprite_index)+2
                        current_direction = 1
                    }
                if o.px &gt;= x
                    {
                        current_x = view_xview[view_port]+view_wview[view_port]+64
                        current_y = y+sprite_get_height(sprite_index)+2
                        current_direction = -1
                    }
                current_frame = 0
                current_active = 2
                current_mileage = 0
                audio_play_sound(current_sound,50,false);
                scr_set_screen_shake(64,3);
            }
        //Driving Logic
        if current_active = 2
            {
                current_x += 12*current_direction
                current_frame += 0.54
                current_mileage += 1
                if current_frame &gt; 1.8
                    current_frame = 0;
                if point_distance(current_x,current_y,obj_game_logic.universal_player_x,obj_game_logic.universal_player_y) &lt; 64
                and obj_game_logic.hurt[0] = 0
                    scr_enemy_deal_damage(0.2,0.4,1);
                if obj_game_logic.use_weather_conditions &gt; 0 and y &lt; obj_game_logic.water_height
                and instance_number(obj_flood_ball) &lt; 16
                and (current_mileage = 6
                or   current_mileage = 12
                or   current_mileage = 24)
                    {
                        instance_create(current_x,y-8,obj_flood_ball)
                    }
                if current_mileage &gt; 30
                    {
                        if current_x &gt; view_xview[view_port]+view_wview[view_port]+sprite_get_width(current_vehicle)
                        or current_x &lt; view_xview[view_port]-sprite_get_width(current_vehicle)
                            {
                                if instance_exists(obj_bg_logic_night)
                                or instance_exists(obj_bg_logic_nighttime)
                                or instance_exists(obj_bg_city)
                                    current_time_of_day = 1;
                                var vehicle_selection = floor(random_range(0,1.9));
                                if current_time_of_day = 1
                                    vehicle_selection = floor(random_range(0,2.9));
                                current_vehicle = vehicle_garage[vehicle_selection,0]
                                current_sound = vehicle_garage[vehicle_selection,1]
                                current_active = 3;
                            }
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Warning Signal
if room != rm_editor
    {
        if current_timer &gt; 90
            {
                if point_in_rectangle(obj_game_logic.px,obj_game_logic.py,view_xview[view_port]-192,view_yview[view_port]-192,view_wview[view_port]+384,view_hview[view_port]+384)
                    {
                        var check_direction = internal_res_width-60;
                        var check_center = internal_res_height/2;
                        if obj_game_logic.px &lt; x
                            check_direction = 20;
                        check_frame += 0.24
                        if check_frame &gt; 2.8
                            check_frame = 0;
                        draw_sprite(spr_hazard_warning,check_frame,check_direction,check_center)
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Main Sprites
draw_sprite(sprite_index,image_index,x,y)

if current_active &gt; 0 and current_active &lt; 3
    {
        if current_vehicle!=spr_semi_truck
            {
                draw_sprite_ext(current_vehicle,current_frame,current_x,current_y,current_direction,1,0,c_white,1)
                if current_vehicle = spr_mom_car and current_time_of_day = 1
                    draw_sprite_ext(spr_mom_car,current_frame+2,current_x,current_y,current_direction,1,0,c_white,1);
            }
        else
            {
                draw_sprite_ext(spr_semi_truck,0,current_x,current_y,current_direction,1,0,c_white,1)
                if current_frame &gt; 1
                    draw_sprite_ext(spr_semi_truck,1,current_x,current_y,current_direction,1,0,c_white,1);
            }    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
