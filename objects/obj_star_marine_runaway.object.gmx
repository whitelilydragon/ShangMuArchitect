<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_runaway_star_marine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_floater</parentName>
  <maskName>spr_star_marine_base_0</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
previous_x = x
death_type = 1
    slowdown_timer = 0
    white_transition_alpha = 0
    can_die_upon_impact = 0
flash_palette = spr_star_marine_palette
    frame = 0
    frame_timer = 0
hsp = 0
bob = 0
    bob_dir = 1
    bob_target = 0
    bob_speed = 1
    bob_pause = 0
angle = 0
    angle_target = 0
player_offset = y
phase = 0
    state = 0
    timer = 0
    phase_timer = 0
    phase_flash = 0
    death_timer = 0
    lock_position = 0
    slowdown_timer = 0
cannon_offset_x = 72
cannon_offset_y = -14
    cannon_timer = 0
    cannon_frame = 0
    cannon_firing_frame = 0
    cannon_firing_particles_frame = 0
splash_frame = 0
    splash_x = x
    splash_y = y
warning_frame = 0
    warning_x = -10000
    warning_y = y
    warning_x_1 = -10000
bubble_release_timer = 0
xdir  = 1
angle = 0
boss_enemy = 1
heart = 192
    heartmax = 192
    hp_mod = 0.26041667
    hp_target = heart
heart_bar_target = ((heart/2)-(heartmax/4))+2
heart_bar_target_2 = heart/2
stamina = 120
can_draw_healthbar = 0
white_transition_alpha = 0
rocket_frames = 0
    rocket_angles = 360
    rocket_target = 360
midsection_x[0] = 0
    midsection_target[0] = 8
    midsection_x[1] = 0
    midsection_target[1] = 0
    midsection_x[2] = 0
    midsection_target[2] = 0
    midsection_direction = 0

can_draw_sprite = 0
pursuit_speed = 12
cutscene_command = 0
cutscene_direction = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(obj_star_marine_bubble)
instance_destroy(obj_rna_particles)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if room = rm_editor
    {
        if obj_game_logic.user_cursor_mode = 1 and cutscene_command = 1
            {
                cutscene_command = 0
                x = start_x
                y = start_y
                timer = 0
                rocket_frames = 0
                lock_position = 0
                move_towards_point(x,y,0)
                speed = 0
                bob_speed = 1
                splash_frame = 0.1
                splash_x = x
                splash_y = o.water_height
            }
    }

if o.pause = 0 and 0.user_cursor_mode = 0 and point_distance(o.px+(128*xdir),o.py-108,x,y) &lt; 512
    cutscene_command = 1;

if cutscene_command = 1 and o.pause = 0
    {
        heart = heartmax

        //Bobbing Effects
        if midsection_x[0] &gt;= midsection_target[0]-1 and midsection_x[0] &gt; 0
            midsection_target[0] = -9;
        if midsection_x[0] &lt;= midsection_target[0]+1 and midsection_x[0] &lt; 0
            midsection_target[0] = 9;
        midsection_x[0] = lerp(midsection_x[0],midsection_target[0],0.10*bob_speed)
        midsection_x[1] = lerp(midsection_x[1],midsection_x[0],0.20*bob_speed)
        midsection_x[2] = lerp(midsection_x[2],midsection_x[1],0.25*bob_speed)
        bob   = midsection_x[0]/2
        bob_x = midsection_x[0]/2
        //Rockets (Agnostic of State)
        rocket_frames += 0.5
        if rocket_frames &gt; 2.8
            rocket_frames = 0;
        rocket_angles = lerp(rocket_angles,rocket_target,0.25)
        //Rocket Directions
        if xdir = 1
            {
                if x &gt; previous_x
                    rocket_target = 325;
                if x &lt; previous_x
                    rocket_target = 390;
            }
        previous_x = x
        //Water Splash
        if splash_frame &gt; 0
            {
                splash_frame += 0.25
                if splash_frame &gt; 8.8
                    splash_frame = 0;
            }
        //Reset variables
        if timer = 0
            {
                if x &gt; o.px xdir = 1;
                if x &lt; o.px xdir = -1;
                cannon_frame = 0
                cannon_firing_frame = 0
                rocket_frames = 0
                lock_position = 0
                //x = view_xview[view_port]+view_wview[view_port]+128
                //y = view_yview[view_port]-128
                //if xdir = -1
                    //x = view_xview[view_port]-128;
                player_offset = o.py-108
            }
        timer += 1
        var pursuit_speed = 15;
        if point_distance(o.px+(128*xdir),o.py-108,x,y) &lt; 64
            pursuit_speed = 12;
        if lock_position = 0
            {
                if timer &lt;= 96
                    {
                        move_towards_point(o.px+(128*xdir),o.py-108,pursuit_speed)
                        bob_speed = 2
                    }
                else
                    move_towards_point(o.px+(128*xdir),o.py-108,0);

                if point_distance(o.px+(128*xdir),o.py-108,x,y) &lt; 32
                    {
                        lock_position = 1
                        bob_speed = 1
                    }
            }
        if lock_position = 1
            {
                if point_distance(o.px+(128*xdir),o.py-108,x,y) &gt; 16
                    move_towards_point(o.px+(128*xdir),o.py-108,pursuit_speed/2);
                else
                    move_towards_point(o.px+(128*xdir),o.py-108,0);
            }
        //Prevent phase iteration if the Star Marine isn't on-screen yet
        if timer = 15 and lock_position = 0
            timer = 1;
        if timer &gt; 16
            {
                //Open Cannon
                if timer = 17
                    {
                        audio_play_sound(snd_boss_metal,50,false);
                        scr_set_screen_shake(24,3)
                    }
                //Animate Cannon
                cannon_frame += 0.35
                if cannon_frame &gt; 8.8 cannon_frame = 4.8;
            }
        if timer &gt; 48 and timer &lt; 212
            {
                cannon_firing_frame += 0.5
                if cannon_firing_frame &gt; 3.8
                    cannon_firing_frame = 0;
                if timer = 49
                    audio_play_sound(snd_boss_charging,50,false);
                if timer = 168
                    audio_play_sound(snd_rna_cannon,50,false);
                if timer &gt; 168
                    {
                        cannon_timer += 1
                        cannon_firing_particles_frame += 0.5
                        if cannon_firing_particles_frame &gt; 8.8
                            cannon_firing_particles_frame = 0;
                        if cannon_timer = 4
                            {
                                var rna_cannon_id = instance_create(x+(cannon_offset_x*-xdir),y+cannon_offset_y,obj_rna_particles);
                                if xdir = 1
                                    rna_cannon_id.direction = 225;
                                if xdir = -1
                                    rna_cannon_id.direction = 315;
                                scr_set_screen_shake(24,3)
                                cannon_timer = 0
                            }
                    }
            }
        if timer &gt; 248
            {
                var move_direction = view_xview[view_port]+view_wview[view_port]+128;
                if xdir = -1
                    {
                        if x &gt;= view_xview[view_port]+view_wview[view_port]+120
                            {
                                if room != rm_editor
                                    instance_destroy();
                                else
                                    {
                                        cutscene_command = 0
                                        x = start_x
                                        y = start_y
                                        timer = 0
                                        rocket_frames = 0
                                        lock_position = 0
                                        move_towards_point(x,y,0)
                                        speed = 0
                                        bob_speed = 1
                                        splash_frame = 0.1
                                        splash_x = x
                                        splash_y = o.water_height
                                    }
                            }
                    }
                if xdir = 1
                    {
                        move_direction = view_xview[view_port]-128;
                        if x &lt;= view_xview[view_port]-120
                            {
                                if room != rm_editor
                                    instance_destroy();
                                else
                                    {
                                        cutscene_command = 0
                                        x = start_x
                                        y = start_y
                                        timer = 0
                                        rocket_frames = 0
                                        lock_position = 0
                                        move_towards_point(x,y,0)
                                        speed = 0
                                        bob_speed = 1
                                        splash_frame = 0.1
                                        splash_x = x
                                        splash_y = o.water_height
                                    }
                            }
                    }
                move_towards_point(move_direction,view_yview[view_port]-128,12)
                
            }
    }
else
    move_towards_point(x,y,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Background Elements of Star Marine
var pal_alpha = 0;
if alpha &gt; 0.5 pal_alpha = 1;
if phase_timer &gt; 0
    {
        phase_flash += 1
        phase_timer += 1

        if phase_flash &gt; 1 pal_alpha = 1;
        if phase_flash &gt; 2
            phase_flash = 0;
        if phase_timer &gt; 30
            phase_timer = 0;
    }
script_execute(o.pal_swap_script,flash_palette,pal_alpha,false)
if alpha &gt; 0.5 and o.pal_swap_script = pal_swap_dummy
    d3d_set_fog(true,c_yellow,0,0);
if (state = 0 or state = 3)
    {
        draw_sprite_ext(spr_star_marine_rocket_nozzles,rocket_frames,x+(16*-xdir),y+24,1,1,rocket_angles,c_white,1)
        draw_sprite_ext(spr_star_marine_rocket_nozzles,rocket_frames,x+(12*-xdir),y+32,1,1,rocket_angles,c_white,1)
        draw_sprite_ext(spr_star_marine_tail_1,0,x+midsection_x[2],y,xdir,1,0,c_white,1)
        draw_sprite_ext(spr_star_marine_midsection_1,1,x+midsection_x[1],y,xdir,1,0,c_white,1)
        draw_sprite_ext(spr_star_marine_midsection_1,0,x+midsection_x[0],y,xdir,1,0,c_white,1)
    }
if state = 1
    {
        draw_sprite_ext(spr_star_marine_rocket_nozzles,rocket_frames,x+(16*-xdir),y+16,1,1,rocket_angles,c_white,1)
        draw_sprite_ext(spr_star_marine_rocket_nozzles,rocket_frames,x+(12*-xdir),y+24,1,1,rocket_angles,c_white,1)
        draw_sprite_ext(spr_star_marine_tail_0,0,x+midsection_x[2],y,xdir,1,0,c_white,1)
        draw_sprite_ext(spr_star_marine_midsection_0,1,x+midsection_x[1],y,xdir,1,0,c_white,1)
        draw_sprite_ext(spr_star_marine_midsection_0,0,x+midsection_x[0],y,xdir,1,0,c_white,1)
    }
shader_reset();
d3d_set_fog(false,0,0,0)

event_inherited()

script_execute(o.pal_swap_script,flash_palette,pal_alpha,false)
if alpha &gt; 0.5 and o.pal_swap_script = pal_swap_dummy
    d3d_set_fog(true,c_yellow,0,0);
//Foreground Elements of Star Marine
if phase_timer &gt; 0
    {
        draw_sprite_ext(spr_star_marine_base_0,frame,x,y+bob,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),angle+subangle,c_yellow,1);
    }

draw_sprite_ext(spr_star_marine_base_1,frame,x+bob_x,y+bob,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),angle+subangle,c_white,ghost_alpha)
if alpha &gt; 0.5 and o.pal_swap_script = pal_swap_dummy
    {
        d3d_set_fog(true, c_yellow, 0, 0)
        draw_sprite_ext(spr_star_marine_base_1,frame,x+bob_x,y+bob,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),angle+subangle,c_white,0.65)
        d3d_set_fog(false, 0, 0, 0)
    }
if o.use_weather_conditions &gt; 0 and y &lt; o.water_height
    {
        //Splatter Animations
        weather_rain_particles_frame += o.use_weather_conditions*0.20
        if weather_rain_particles_frame &gt; 3.8
            weather_rain_particles_frame = 0;
        draw_sprite_ext(spr_rain_particles,weather_rain_particles_frame,x,y+y_offset,1,1,0,c_white,1)
    }

if state = 0
    {
        draw_sprite_ext(spr_star_marine_rna_cannon,cannon_frame,x+bob_x,y+bob,xdir,1,0,c_white,1)
        if timer &gt; 48
            draw_sprite_ext(spr_star_marine_rna_cannon_warming_up,cannon_firing_frame,x+bob_x,y+bob,xdir,1,0,c_white,1);
        if timer &gt; 128 and timer &lt; 168
            draw_sprite_ext(spr_star_marine_rna_cannon_firing,cannon_firing_frame,x+bob_x,y+bob,xdir,1,0,c_white,1);
        if timer &gt; 168 and timer &lt; 212
            {
                draw_sprite(spr_explosion_2,cannon_firing_particles_frame,x+(cannon_offset_x*-xdir),y+cannon_offset_y)
                draw_sprite(spr_explosion_2,cannon_firing_particles_frame+0.2,x+(16*-xdir)+(cannon_offset_x*-xdir),y+16+cannon_offset_y)
            }
        draw_sprite_ext(spr_star_marine_flipper_1,0,x,y+bob,xdir,1,0,c_white,1)
    }
d3d_set_fog(false,0,0,0)
shader_reset();

if splash_frame &gt; 0 draw_sprite(spr_water_splash_2x,splash_frame,splash_x,splash_y);
draw_sprite(spr_hazard_warning,warning_frame,warning_x,warning_y);
draw_sprite(spr_hazard_warning,warning_frame,warning_x_1,warning_y);

if room = rm_editor
    {
        if (obj_level_editor.use_debug_hud_mode = 1 and obj_game_logic.user_cursor_mode = 0)
        or (obj_game_logic.user_cursor_mode = 1)
            draw_sprite(spr_boss_runaway_star_marine,0,start_x,start_y);
    }
else
    {
        if (obj_game_logic.debug_hud_mode &gt; 0)
            draw_sprite(spr_boss_runaway_star_marine,0,start_x,start_y);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
