<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bomb_flower_modifier</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_destructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frame = 1
angle = 0
    subangle = 0
    subtimer = 0
    subaccel = 0
    subtarget = 8
orbit = 128
scale = 1
state = 0
accel = 0
attacked = 0
    attacked_damage = 0
    attacked_timer = 0
    hitbox = 32
parent = obj_blade_subordinate
o = obj_game_logic
switch(sprite_index)
    {
        case spr_blade_subordinate_sword: {angle = 45; subangle = 15; hitbox = 48; break;}
        case spr_blade_subordinate_sai:   {angle = 135; subangle = 30; hitbox = 32; break;}
        case spr_blade_subordinate_boxing_glove: {angle = 225; subangle = 45; hitbox = 24; break;}
        case spr_blade_subordinate_bo_staff: {angle = 315; subangle = 60; hitbox = 64; break;}
        default: {break;}
    }
mask_index = sprite_index
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.pause = 0 and instance_exists(parent)
    {
        if orbit = 128
            {
                if parent.item = spr_mod_chip_extra_large
                    {
                        scale = 2;
                        orbit = 256;
                    }
            }
        frame += 0.5
        if frame &gt; 2.8 frame = 1;
        if attacked_timer &gt; 0 attacked_timer -= 1;
        if state = 0
            {
                if parent.state = 0 angle += 3*parent.xdir;
                if parent.phase = 1 angle += 3*parent.xdir;
                subtimer += 1
                subangle += subaccel; 
                if subtimer &lt; 240 subtarget = 3;
                if subtimer &gt;= 240 subtarget = -3;
                if subtimer &gt; 480 subtimer = 0;
                if angle &gt; 360 angle = 0;
                if angle &lt; 0 angle = 360;
                subaccel = lerp(subaccel,subtarget,0.15)
                if parent.heart &lt; 0 state = 2;
                mask_index = spr_thunder
            }
        if state = 1
            {
                mask_index = sprite_index
                if attacked &gt; 0 and attacked_timer = 0
                    {
                        audio_play_sound(character_parry,50,false)
                        attacked_timer = 5
                        attacked = 0
                    }
                var var_speed = 12;
                if parent.phase = 1
                    var_speed = 16;
                if (parent.item = spr_mod_chip_speed or o.user_enemy_level &gt;= 4)
                    var_speed = var_speed*1.5;
                if parent.xdir = 1
                    angle = 180;
                if parent.xdir = -1
                    angle = 0;
                if parent.heart &lt; 0 state = 2;
                if parent.timer &lt; 60
                    {
                        if y &gt; o.py y -=2;
                        if y &lt; o.py y += 2;
                    }
                if parent.timer &gt;= 60
                    {
                        if y &gt; parent.y y -=2;
                        if y &lt; parent.y y += 2;
                    }
                if parent.timer &gt;= 2 and parent.timer &lt;= 90
                    {
                        switch(sprite_index)
                            {
                                case spr_blade_subordinate_sword: {subangle = 110*parent.xdir; break;}
                                case spr_blade_subordinate_sai:   {subangle += 24*parent.xdir; break;}
                                case spr_blade_subordinate_boxing_glove: {subangle = 30*-parent.xdir; break;}
                                case spr_blade_subordinate_bo_staff: {subangle += 24*parent.xdir; break;}
                                default: {break;}
                            }
                    }
                if parent.timer &gt;= 16 and parent.timer &lt;= 46
                    x -= var_speed*parent.xdir
                if parent.timer &gt;= 60 and parent.timer &lt;= 90
                    x += var_speed*parent.xdir
                if parent.timer &gt; 88
                    {
                        var sword_id        = parent.sword;
                        var sai_id          = parent.sai;
                        var boxing_glove_id = parent.boxing_glove;
                        var bo_staff_id     = parent.bo_staff;

                        sword_id.angle          = 45;
                        sai_id.angle            = 135;
                        boxing_glove_id.angle   = 225;
                        bo_staff_id.angle       = 315;

                        state = 0;
                    }
                //Hurt The Player If They've Been Punched By The Boxing Glove
                if (o.hurt[0] = 0 and o.hurt[1] = 0
                and o.shield_invuln = 32
                and attacked_timer = 0
                and point_distance(x,y,o.universal_player_x,o.universal_player_y) &lt; hitbox)
                    {
                        //Deal one life petal of damage
                        var hurt_scaling = 1;
                        switch(sprite_index)
                            {
                                case spr_blade_subordinate_sword: {hurt_scaling = 1; break;}
                                case spr_blade_subordinate_sai:   {hurt_scaling = 0.4; break;}
                                case spr_blade_subordinate_boxing_glove: {hurt_scaling = 1.4; break;}
                                case spr_blade_subordinate_bo_staff: {hurt_scaling = 1.4; break;}
                                default: {break;}
                            }
                        scr_enemy_deal_damage(hurt_scaling*0.4,hurt_scaling*1,hurt_scaling*2);
                        if sprite_index = spr_blade_subordinate_boxing_glove o.hsp = 8*-sign(o.hsp);
                    }
                //Mega Items
                var instance_ID = collision_circle(x,y,hitbox,obj_mega_item_parent,false,true);
                if instance_exists(instance_ID)
                    {
                        instance_ID.attacked = 2
                    }
                //Items
                var instance_ID = collision_circle(x,y,hitbox,obj_destructible,false,true);
                if instance_exists(instance_ID)
                    {
                        instance_ID.attacked = 1
                    }
                //Other Weapons
                var instance_ID = collision_circle(x,y,hitbox,obj_hand_parent,false,true);
                if instance_exists(instance_ID)
                    {
                        instance_ID.attacked = 0
                    }
                //Attack other enemies within range of the boxing glove
                instance_ID = collision_circle(x,y,hitbox,obj_enemy_parent,false,true);
                if instance_exists(instance_ID)
                    {
                        if instance_ID.attacked = 0 and instance_ID.alpha = 0
                        and (instance_ID.object_index != obj_blade_subordinate
                        and  instance_ID.object_index != obj_blade_subordinate_mini_boss)
                            {
                                instance_ID.attacked = 1
                                instance_ID.attacked_damage = 2
                            }
                    }
            }
        if state = 2
            {
                frame = 0
                accel += 0.24
                var accel_cap = 6;
                switch(o.user_enemy_level)
                    {
                        case 0: {accel_cap = 3; break;} //Easy
                        case 1: {accel_cap = 4; break;} //Normal
                        case 2: {accel_cap = 6; break;} //Hard
                        case 3: {accel_cap = 8; break;} //Hardcore
                        case 4: {accel_cap = 9; break;} //Insanity
                    }
                if accel &gt; accel_cap accel = accel_cap;
                switch(sprite_index)
                    {
                        case spr_blade_subordinate_sword: {x += accel; subangle += 0.5; break;}
                        case spr_blade_subordinate_sai:   {x -= accel*1.5; subangle -= 0.5; break;}
                        case spr_blade_subordinate_boxing_glove: {x += accel; subangle += 0.5; break;}
                        case spr_blade_subordinate_bo_staff: {x -= accel*2; subangle -= 0.5; break;}
                        default: {break;}
                    }
                y += accel;
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(parent)
    {
        if state = 0
            {
                x = parent.x+lengthdir_x(orbit,angle)
                y = parent.y+lengthdir_y(orbit,angle)
            }
        draw_sprite_ext(sprite_index,0,x,y,scale*(parent.xdir),scale,subangle,c_white,1)
        if frame &gt; 0
            draw_sprite_ext(sprite_index,frame,x,y,scale*(parent.xdir),scale,subangle,c_white,1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
