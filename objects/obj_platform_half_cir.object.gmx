<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform_modifier_halfcircle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create New Tiles

//Platform Tiles
tile_id_1 = tile_add(mu_fof_3,0,0,64,40,x,y,surface_slopes)
tile_index = mu_fof_3
tile_link = mu_fof_7
tile_base = mu_fof_8
tile_validate_timer = 0
tile_validate_time = 8

//Platform Tiles' IDs
//Make them all the same as the first platform's ID, so they can steal the tile collision data
//from it, instead of wasting RAM on multiple copies of the same tile collision data &gt;:^P
tile_index_1 = mu_fof_3

//Set Angle And FOF Offsets
px_1 = x
py_1 = y
angle=359
dir=1
fof_fofset=0
accel=0

//Relative FOF Tile Positions
tile_ramp_pos[0]=0
tile_ramp_pos[1]=0
DNA_Cannon_ID = noone
enemy_capture_offset = 0
enemy_capture = 0

//Are We Allowed To Hold Items?
give_item = 0
item = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Platform Tiles
if tile_exists(tile_id_1) tile_delete(tile_id_1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Pause Safety Check
if obj_game_logic.pause = 0 and tile_exists(tile_id_1)
    {
        //Apply Rotation Acceleration
        angle += accel
        if accel &gt; 3  accel =  3;
        if accel &lt; -3 accel = -3;
        //Iterate Rotation Angles
        if dir = -1 accel -= 0.15;
        if dir =  1 accel += 0.15;
        //Reset Rotation Angles
        if angle &lt; 210 dir =  1;
        if angle &gt; 329 dir = -1;

        //Rotate Tiles
        px_1 = x+lengthdir_x(96,angle);
        py_1 = y+lengthdir_y(96,angle);

        //Set Tile Offsets
        px_1 -= 28
        py_1 -= 20

        if point_in_rectangle(obj_game_logic.px,obj_game_logic.py,px_1,py_1,px_1+tile_get_width(tile_id_1),py_1+tile_get_height(tile_id_1))
            {
                obj_game_logic.gravity_fof_validation = 2
            }

        //Asset-Switching Timer
        if (tile_validate_timer &lt; tile_validate_time)
            tile_validate_timer += 1

        if room = rm_editor
            {
                if obj_level_editor.use_write_delay &gt; 0
                    {
                        angle = 359;
                        tile_validate_timer = 0
                        tile_set_background(tile_id_1,mu_fof_3)
                    }
                tile_validate_time = 60
            }
        if tile_validate_timer = tile_validate_time
            {
                if instance_exists(obj_bg_city)                 {tile_index = wd_fof_4;  tile_link = wd_fof_5; tile_base = wd_fof_6;}
                if instance_exists(obj_bg_city_day)             {tile_index = wd_fof_4;  tile_link = wd_fof_5; tile_base = wd_fof_6;}
                if instance_exists(obj_bg_sushi_bar)            {tile_index = wd_fof_4;  tile_link = wd_fof_5; tile_base = wd_fof_6;}
                if instance_exists(obj_bg_logic_night)          {tile_index = mu_fof_3;  tile_link = mu_fof_7; tile_base = mu_fof_8;}
                if instance_exists(obj_bg_logic)                {tile_index = mu_fof_3;  tile_link = mu_fof_7; tile_base = mu_fof_8;}
                if instance_exists(obj_bg_logic_nighttime)      {tile_index = mu_fof_3;  tile_link = mu_fof_7; tile_base = mu_fof_8;}
                if instance_exists(obj_bg_logic_alt)            {tile_index = mu_fof_3;  tile_link = mu_fof_7; tile_base = mu_fof_8;}
                if instance_exists(obj_bg_logic_lagoon)         {tile_index = ll_fof_1;  tile_link = ll_fof_5; tile_base = ll_fof_6;}
                if instance_exists(obj_bg_logic_lagoon_sunrise) {tile_index = ll_fof_1;  tile_link = ll_fof_5; tile_base = ll_fof_6;}
                if instance_exists(obj_bg_jiang_cruise)         {tile_index = ll_fof_1;  tile_link = ll_fof_5; tile_base = ll_fof_6;}
                if instance_exists(obj_bg_jiang_cruise_storm)   {tile_index = ll_fof_1;  tile_link = ll_fof_5; tile_base = ll_fof_6;}
                if instance_exists(obj_bg_logic_mnt)            {tile_index = mnt_fof_2; tile_link = mnt_fof_5; tile_base = mnt_fof_6;}
                if instance_exists(obj_bg_logic_mnt_nite)       {tile_index = mnt_fof_2; tile_link = mnt_fof_5; tile_base = mnt_fof_6;}
                if instance_exists(obj_bg_logic_mnt_nighttime)  {tile_index = mnt_fof_2; tile_link = mnt_fof_5; tile_base = mnt_fof_6;}
                if instance_exists(obj_bg_city_sewers)          {tile_index = wd_fof_4;  tile_link = wd_fof_5; tile_base = wd_fof_6;}
                if instance_exists(obj_bg_city_sewers_slime)    {tile_index = wd_fof_4;  tile_link = wd_fof_5; tile_base = wd_fof_6;}
                if instance_exists(obj_bg_mnt_cave)             {tile_index = mnt_fof_2; tile_link = mnt_fof_5; tile_base = mnt_fof_6;}
                if instance_exists(obj_bg_mnt_cave_dark)        {tile_index = mnt_fof_2; tile_link = mnt_fof_5; tile_base = mnt_fof_6;}
                if instance_exists(obj_bg_beihai_bay)           {tile_index = bb_fof_0; tile_link = ll_fof_6; tile_base = ll_fof_6;}
                if instance_exists(obj_bg_beihai_bay_sunset)    {tile_index = bb_fof_0; tile_link = ll_fof_6; tile_base = ll_fof_6;}
                tile_set_background(tile_id_1,tile_index)
            }

        //Update Tile Positions
        tile_set_position(tile_id_1,px_1,py_1)

        if enemy_capture = 0 DNA_Cannon_ID = collision_rectangle(px_1,py_1,px_1+tile_get_width(tile_id_1),py_1+tile_get_height(tile_id_1),obj_enemy_parent,false,true)
        if enemy_capture = 1 DNA_Cannon_ID = collision_rectangle(px_1,py_1-32,px_1+tile_get_width(tile_id_1),py_1+8,obj_enemy_parent,false,true);

        //Check For Capturable Objects
        if instance_exists(DNA_Cannon_ID) and enemy_capture = 0
            {
                switch(DNA_Cannon_ID.sprite_index)
                    {
                        case spr_metal_pup:      {enemy_capture = 1; enemy_capture_offset = 8; break;}
                        case spr_dna_cannon:     {enemy_capture = 1; enemy_capture_offset = -36; break;}
                        case spr_turretus:       {enemy_capture = 1; enemy_capture_offset = 8; break;}
                        case spr_fire_spitter:   {enemy_capture = 1; enemy_capture_offset = 8; break;}
                        case spr_ghetto_blaster: {enemy_capture = 1; enemy_capture_offset = 8; break;}
                        case spr_rocket_puncher: {enemy_capture = 1; enemy_capture_offset = 8; break;}
                        case spr_bullfrag:       {if not audio_is_playing(character_parry) scr_set_message("Bullfrag Is Too Heavy!"); break;}
                        case spr_rna_cannon:     {enemy_capture = 1; enemy_capture_offset = 8; break;}
                        default:                 {enemy_capture = 0; enemy_capture_offset = 0; break;}
                    }
            }
        //Capture And Maintain Enemy At Tile's Current X/Y Position
        if enemy_capture = 1 and instance_exists(DNA_Cannon_ID)
            {
                DNA_Cannon_ID.x = px_1+(tile_get_width(tile_id_1)/2)
                DNA_Cannon_ID.y = py_1+enemy_capture_offset
                DNA_Cannon_ID.captured = 1
                DNA_Cannon_ID.start_x = x+96
                DNA_Cannon_ID.start_y = y-28+enemy_capture_offset
            }
    } //End of Pause Safety Check

if room = rm_editor
    {
        if tile_validate_timer = tile_validate_time
            {
                if !tile_exists(tile_id_1)
                    instance_destroy();
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Pendulum Platforms

//Draw Decorations
draw_background(tile_link,floor(x-10+lengthdir_x(80,angle)),floor(y-10+lengthdir_y(80,angle)))
draw_background(tile_link,floor(x-10+lengthdir_x(60,angle)),floor(y-10+lengthdir_y(60,angle)))
draw_background(tile_link,floor(x-10+lengthdir_x(40,angle)),floor(y-10+lengthdir_y(40,angle)))
draw_background(tile_link,floor(x-10+lengthdir_x(20,angle)),floor(y-10+lengthdir_y(20,angle)))

//Draw Decorative Bolt
draw_background(tile_base,x-10,y-10)

//Draw Platform
draw_background(tile_index,px_1,py_1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Ghost Of Pendulum
if room = rm_editor
    {
        draw_set_alpha(0.25)

        //Red
        draw_background(tile_index,x+lengthdir_x(96,0)-28,y-lengthdir_y(96,0)-28)
        draw_background(tile_link,x-10+lengthdir_x(80,0),y-10+lengthdir_y(80,0))
        draw_background(tile_link,x-10+lengthdir_x(60,0),y-10+lengthdir_y(60,0))
        draw_background(tile_link,x-10+lengthdir_x(40,0),y-10+lengthdir_y(40,0))
        draw_background(tile_link,x-10+lengthdir_x(20,0),y-10+lengthdir_y(20,0))

        draw_set_alpha(1)

        if (obj_level_editor.use_debug_hud_mode = 1 and obj_game_logic.user_cursor_mode = 0)
        or (obj_game_logic.user_cursor_mode = 1)
            draw_sprite(sprite_index,0,x,y);
    }
else
    {
        if (obj_game_logic.debug_hud_mode &gt; 0)
            draw_sprite(sprite_index,0,x,y);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
