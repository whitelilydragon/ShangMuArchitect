<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_logic_processor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>o = obj_game_logic
background_visible[3] = false
background_visible[4] = false
o.checkpoint_x = 0
o.checkpoint_y = 0
input_cooldown = 0
    input_up = 0
    input_down = 0
    input_left = 0
    input_right = 0
    input_a = 0
    input_b = 0
    input_start = 0
    input_cooldown = 0
transition_active = 0
transition_position = 0
transition_room_goto = rm_west_district_0
input_offset_x = 0
input_offset_x_target = 0
input_menu_state = 0
input_menu_start_offset = 512
input_menu_start_target = 512
input_menu_alpha = 0
input_menu_alpha_target = 0
bg_frame = 0
bg_scroll_x = 0
bg_crystal_float_y = 0
bg_crystal_float_y_target = 12
stage_list[0] = "Dragon     Road"
    stage_list[1] = "Toxic     Tunnel"
    stage_list[2] = "Temple     Knights"
    stage_list[3] = "Taishan     Peaks"
    stage_list[4] = "Liyu     Lagoon"
    stage_list[5] = "Beihai     Bay"
stage_sprite[0] = 1
    stage_sprite[1] = 2
    stage_sprite[2] = 3
    stage_sprite[3] = 4
    stage_sprite[4] = 5
    stage_sprite[5] = 6

stage_minutes[0] = string_copy(o.player_best_time[0],1,2)
stage_seconds[0] = string_copy(o.player_best_time[0],3,2)
stage_milli[0]   = string_copy(o.player_best_time[0],5,2)
stage_crystals[0] = o.player_best_crystals[0]

stage_minutes[1] = string_copy(o.player_best_time[1],1,2)
stage_seconds[1] = string_copy(o.player_best_time[1],3,2)
stage_milli[1]   = string_copy(o.player_best_time[1],5,2)
stage_crystals[1] = o.player_best_crystals[1]

stage_minutes[2] = string_copy(o.player_best_time[2],1,2)
stage_seconds[2] = string_copy(o.player_best_time[2],3,2)
stage_milli[2]   = string_copy(o.player_best_time[2],5,2)
stage_crystals[2] = o.player_best_crystals[2]

stage_minutes[3] = string_copy(o.player_best_time[3],1,2)
stage_seconds[3] = string_copy(o.player_best_time[3],3,2)
stage_milli[3]   = string_copy(o.player_best_time[3],5,2)
stage_crystals[3] = o.player_best_crystals[3]

stage_minutes[4] = string_copy(o.player_best_time[4],1,2)
stage_seconds[4] = string_copy(o.player_best_time[4],3,2)
stage_milli[4]   = string_copy(o.player_best_time[4],5,2)
stage_crystals[4] = o.player_best_crystals[4]

stage_minutes[5] = string_copy(o.player_best_time[5],1,2)
stage_seconds[5] = string_copy(o.player_best_time[5],3,2)
stage_milli[5]   = string_copy(o.player_best_time[5],5,2)
stage_crystals[5] = o.player_best_crystals[5]

stage_minutes[6] = string_copy(o.player_best_time[6],1,2)
stage_seconds[6] = string_copy(o.player_best_time[6],3,2)
stage_milli[6]   = string_copy(o.player_best_time[6],5,2)
stage_crystals[6] = o.player_best_crystals[6]

stage_minutes[7] = string_copy(o.player_best_time[7],1,2)
stage_seconds[7] = string_copy(o.player_best_time[7],3,2)
stage_milli[7]   = string_copy(o.player_best_time[7],5,2)
stage_crystals[7] = o.player_best_crystals[7]

stage_minutes[8] = string_copy(o.player_best_time[8],1,2)
stage_seconds[8] = string_copy(o.player_best_time[8],3,2)
stage_milli[8]   = string_copy(o.player_best_time[8],5,2)
stage_crystals[8] = o.player_best_crystals[8]

stage_minutes[9] = string_copy(o.player_best_time[9],1,2)
stage_seconds[9] = string_copy(o.player_best_time[9],3,2)
stage_milli[9]   = string_copy(o.player_best_time[9],5,2)
stage_crystals[9] = o.player_best_crystals[9]

stage_minutes[10] = string_copy(o.player_best_time[10],1,2)
stage_seconds[10] = string_copy(o.player_best_time[10],3,2)
stage_milli[10]   = string_copy(o.player_best_time[10],5,2)
stage_crystals[10] = o.player_best_crystals[10]

stage_minutes[11] = string_copy(o.player_best_time[11],1,2)
stage_seconds[11] = string_copy(o.player_best_time[11],3,2)
stage_milli[11]   = string_copy(o.player_best_time[11],5,2)
stage_crystals[11] = o.player_best_crystals[11]

menu_scroll = 0
    menu_cursor_x = 43
    menu_cursor_flash = 0
    menu_cursor_frame = stage_sprite[0]
    menu_cursor_string = stage_list[0]
    menu_cursor_minutes = stage_minutes[0]
    menu_cursor_seconds = stage_seconds[0]
    menu_cursor_milli = stage_milli[0]
    menu_cursor_crystals = stage_crystals[0]

scr_lang_stage_select()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Scroll Background Elements
bg_scroll_x -= 0.5
bg_frame += 0.15
if bg_frame &gt; 1.8
    bg_frame = 0;
menu_cursor_flash += 0.25
if menu_cursor_flash &gt; 1.5
    menu_cursor_flash = 0;
if input_cooldown &gt; 0
    input_cooldown -= 1;

//Make Crystals Float
if bg_crystal_float_y &gt; 5.5
    bg_crystal_float_y_target = -8;
if bg_crystal_float_y &lt; -5.5
    bg_crystal_float_y_target = 8;
bg_crystal_float_y = lerp(bg_crystal_float_y,bg_crystal_float_y_target,0.025);

//D-Pad Movement
if o.joy_input[0,0] = 1 input_right += 1 else input_right = 0;
if o.joy_input[0,1] = 1 input_down  += 1 else input_down = 0;
if o.joy_input[0,2] = 1 input_left += 1 else input_left = 0;
if o.joy_input[0,3] = 1 input_up += 1 else input_up = 0;

//Player Actions
if o.joy_input[1,0] = 1  input_a += 1; else input_a = 0; //Joystick A (Cancel/Attack)
if o.joy_input[1,2] = 1  input_b += 1; else input_b = 0; //Joystick B (Accept/Jump)
if o.joy_input[2,0] = 1  input_start += 1; else input_start = 0; //Joystick Start (Accept/Jump)

input_offset_x = lerp(input_offset_x,input_offset_x_target,0.25)
input_menu_start_offset = lerp(input_menu_start_offset,input_menu_start_target,0.25)
input_menu_alpha = lerp(input_menu_alpha,input_menu_alpha_target,0.05)

if input_menu_state = 1 and input_cooldown = 0
    {
        if input_a = 1 or mouse_check_button_pressed(mb_right)
            {
                input_offset_x_target = 0
                input_cooldown = 8
                input_menu_state = 0
                input_menu_start_target = 512
                input_menu_alpha_target = 0
                audio_play_sound(pause_jingle,50,false)
            }
        if (input_b = 1 or input_start = 1) or mouse_check_button_pressed(mb_left)
            {
                transition_active = 1
                switch(menu_scroll)
                    {
                        //Baozhu Road
                        case 0:
                            {
                                obj_game_logic.use_cuts_select = "WestDistrict01.map"
                                if obj_transition.transition_mode = 1
                                    scr_west_district_maps_list_classic();
                                if obj_transition.transition_mode = 2
                                    scr_west_district_maps_list_time_attack();
                                break;
                            }
                        //Cyan Sewers
                        case 1:
                            {
                                obj_game_logic.use_cuts_select = "EastDistrict01.map"
                                if obj_transition.transition_mode = 1
                                    scr_east_district_maps_list_classic();
                                if obj_transition.transition_mode = 2
                                    scr_east_district_maps_list_time_attack();
                                break;
                            }
                        //Temple Knight
                        case 2:
                            {
                                obj_game_logic.use_cuts_select = "Temple01.map"
                                if obj_transition.transition_mode = 1
                                    scr_temple_maps_list_classic();
                                if obj_transition.transition_mode = 2
                                    scr_temple_maps_list_time_attack();
                                break;
                            }
                        //Taishan Peaks
                        case 3:
                            {
                                obj_game_logic.use_cuts_select = "TaishanMountain01.map"
                                if obj_transition.transition_mode = 1
                                    scr_taishan_maps_list_classic();
                                if obj_transition.transition_mode = 2
                                    scr_taishan_maps_list_time_attack();
                                break;
                            }
                        //Liyu Lagoon
                        case 4:
                            {
                                obj_game_logic.use_cuts_select = "LiyuLagoon01.map"
                                if obj_transition.transition_mode = 1
                                    scr_liyu_lagoon_maps_list_classic();
                                if obj_transition.transition_mode = 2
                                    scr_liyu_lagoon_maps_list_time_attack();
                                break;
                            }
                        //Beihai Bay
                        case 5:
                            {
                                obj_game_logic.use_cuts_select = "BeihaiBay01.map"
                                if obj_transition.transition_mode = 1
                                    scr_beihai_bay_maps_list_classic();
                                if obj_transition.transition_mode = 2
                                    scr_beihai_bay_maps_list_time_attack();
                                break;
                            }
                    }
                obj_game_logic.use_cutscene = 0
                transition_room_goto = rm_campaign
                scr_stop_music()
                audio_play_sound(pause_exit,50,false)
            }
    }

if input_menu_state = 0 and input_cooldown = 0
    {
        if (input_a = 1 or mouse_check_button_pressed(mb_right))
        and obj_transition.transition_active = 0
            {
                obj_transition.transition_active = 1
                obj_transition.transition_index = obj_file_select

                if obj_transition.transition_mode  = 1
                    obj_transition.transition_index = obj_classic_file_select;
                if obj_transition.transition_mode  = 2
                    obj_transition.transition_index = obj_character_select;

                obj_transition.destroy_id = id
                audio_play_sound(pause_exit,50,false)
            }

        if (input_left = 1) menu_scroll -= 1;
        if (input_right = 1) menu_scroll += 1;

        if ((mouse_check_button_pressed(mb_left))
        and o.joy_mouse_button_switch = 1
        and input_cooldown = 0
        and device_mouse_x_to_gui(0) &gt;= 43 and device_mouse_x_to_gui(0) &lt;= 382
        and device_mouse_y_to_gui(0) &gt;= 88 and device_mouse_y_to_gui(0) &lt;= 119)
            {
                //Stage 1
                if device_mouse_x_to_gui(0) &gt;= 43 and device_mouse_x_to_gui(0) &lt;= 92
                    menu_scroll = 0;
                //Stage 2
                if device_mouse_x_to_gui(0) &gt;= 101 and device_mouse_x_to_gui(0) &lt;= 150
                    menu_scroll = 1;
                //Stage 3
                if device_mouse_x_to_gui(0) &gt;= 159 and device_mouse_x_to_gui(0) &lt;= 208
                    menu_scroll = 2;
                //Stage 4
                if device_mouse_x_to_gui(0) &gt;= 217 and device_mouse_x_to_gui(0) &lt;= 266
                    menu_scroll = 3;
                //Stage 5
                if device_mouse_x_to_gui(0) &gt;= 275 and device_mouse_x_to_gui(0) &lt;= 324
                    menu_scroll = 4;
                //Stage 6
                if device_mouse_x_to_gui(0) &gt;= 333 and device_mouse_x_to_gui(0) &lt;= 382
                    menu_scroll = 5;
                //Correct Cursor Positions
                switch(menu_scroll)
                    {
                        case 0: {menu_cursor_x = 43;  break;}
                        case 1: {menu_cursor_x = 101; break;}
                        case 2: {menu_cursor_x = 159; break;}
                        case 3: {menu_cursor_x = 217; break;}
                        case 4: {menu_cursor_x = 275; break;}
                        case 5: {menu_cursor_x = 333; break;}
                    }
                menu_cursor_string = stage_list[menu_scroll]
                menu_cursor_frame = stage_sprite[menu_scroll]
                menu_cursor_minutes = stage_minutes[menu_scroll]
                menu_cursor_seconds = stage_seconds[menu_scroll]
                menu_cursor_milli = stage_milli[menu_scroll]
                menu_cursor_crystals = stage_crystals[menu_scroll]
                audio_play_sound(pause_select,50,false)
                input_b = 1
            }
        if (input_left = 1 or input_right = 1)
            {
                if (menu_scroll &lt; 0) menu_scroll = 5;
                if (menu_scroll &gt; 5) menu_scroll = 0;
                //Correct Cursor Positions
                switch(menu_scroll)
                    {
                        case 0: {menu_cursor_x = 43;  break;}
                        case 1: {menu_cursor_x = 101; break;}
                        case 2: {menu_cursor_x = 159; break;}
                        case 3: {menu_cursor_x = 217; break;}
                        case 4: {menu_cursor_x = 275; break;}
                        case 5: {menu_cursor_x = 333; break;}
                    }
                menu_cursor_string = stage_list[menu_scroll]
                menu_cursor_frame = stage_sprite[menu_scroll]
                menu_cursor_minutes = stage_minutes[menu_scroll]
                menu_cursor_seconds = stage_seconds[menu_scroll]
                menu_cursor_milli = stage_milli[menu_scroll]
                menu_cursor_crystals = stage_crystals[menu_scroll]
                audio_play_sound(pause_select,50,false)
            }
        if (input_b = 1 or input_start = 1) and obj_transition.transition_active = 0
        and menu_cursor_frame &gt; 0
            {
                input_offset_x_target = -122
                input_cooldown = 8
                input_menu_state = 1
                input_menu_start_target = 213
                input_menu_alpha_target = 0.8
                audio_play_sound(pause_jingle,50,false)
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Background Elements
draw_sprite_tiled_ext(spr_ui_stage_list_bg,bg_frame,bg_scroll_x,0,1,1,c_white,0.35)
draw_set_blend_mode(bm_add)
draw_sprite(spr_ui_stage_list_crystals,0,77,128+bg_crystal_float_y)
draw_sprite(spr_ui_stage_list_crystals,0,323,128+bg_crystal_float_y)
draw_set_blend_mode(bm_normal)
//Stage List
draw_sprite_ext(spr_ui_stage_list_thumbnails,stage_sprite[0],43,88,1,1,0,c_white,0.8)
draw_sprite_ext(spr_ui_stage_list_thumbnails,stage_sprite[1],101,88,1,1,0,c_white,0.8)
draw_sprite_ext(spr_ui_stage_list_thumbnails,stage_sprite[2],159,88,1,1,0,c_white,0.8)
draw_sprite_ext(spr_ui_stage_list_thumbnails,stage_sprite[3],217,88,1,1,0,c_white,0.8)
draw_sprite_ext(spr_ui_stage_list_thumbnails,stage_sprite[4],275,88,1,1,0,c_white,0.8)
draw_sprite_ext(spr_ui_stage_list_thumbnails,stage_sprite[5],333,88,1,1,0,c_white,0.8)
//Stage Name
draw_set_color(c_white)
draw_set_halign(fa_center)
draw_set_font(o.stage_title_font)
draw_text(213,16,lang_gui[o.user_language_mode,0])
draw_sprite_ext(spr_water,0,0,0,426,240,0,c_white,input_menu_alpha)
draw_set_font(o.menu_font)
draw_text(213,128,menu_cursor_string)
draw_sprite_tiled(spr_ui_stage_list_prompts,0,0,0)
draw_set_halign(fa_left)
draw_sprite(spr_ui_stage_list_records,o.user_language_mode,141,152)
draw_set_font(o.number_font_academy)
draw_text(205,158,menu_cursor_minutes)
draw_text(229,158,menu_cursor_seconds)
draw_text(253,158,menu_cursor_milli)
draw_text(205,175,menu_cursor_crystals)
//Draw Cursor
draw_sprite(spr_ui_stage_list_thumbnails,menu_cursor_frame,menu_cursor_x,88)
draw_sprite(spr_ui_stage_list_cursor,menu_cursor_flash,menu_cursor_x,88)
//Force movelist display so we can draw the appropriate graphics for the menu's buttons
o.user_move_list_display = 1
if o.user_move_list_control_type = 0
    {
        draw_sprite(spr_keyboard_font,o.key_a,354+input_offset_x,215)
        draw_sprite(spr_keyboard_font,o.key_b,282+input_offset_x,215)
    }
else
    {
        draw_background(o.user_joystick_a,354+input_offset_x,215)
        draw_background(o.user_joystick_b,282+input_offset_x,215)
    }
draw_set_font(o.text_font_academy)
draw_set_color(c_white)
if input_menu_state = 0
    {
        draw_text(299+input_offset_x,217,lang_gui[o.user_language_mode,3])
        draw_text(371+input_offset_x,217,lang_gui[o.user_language_mode,5])
    }
if input_menu_state = 1
    {
        draw_set_font(o.menu_font)
        draw_set_color(c_white)
        draw_set_halign(fa_center)
        draw_text(input_menu_start_offset,196,lang_gui[o.user_language_mode,6])
        draw_set_halign(fa_left)
        draw_set_font(o.text_font_academy)
        draw_text(299+input_offset_x,217,lang_gui[o.user_language_mode,7])
        draw_text(371+input_offset_x,217,lang_gui[o.user_language_mode,8])
    }

//Draw Skewed Slice Transitions
if transition_active = 1
    {
        //Slide the skewed slice across the screen
        transition_position += 23.67;
        //Warp to the new screen
        if transition_position &gt;= 530.33
            room_goto(transition_room_goto);
        draw_sprite(spr_transition_skewed,0,view_xview[view_port]+transition_position,view_yview[view_port]);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
