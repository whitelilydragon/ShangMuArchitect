<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blade_subordinate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_floater</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
ignore_player = 0
ignore_player_x = 0
ignore_player_y = 0
death_type = 1
    slowdown_timer = 0
    white_transition_alpha = 0
    can_die_upon_impact = 0
flash_palette = spr_blade_subordinate_palette
    frame = 0
    frame_timer = 0
hsp = 0
bob = 0
    bob_dir = 1
    bob_target = 0
    bob_pause = 0
angle = 0
    angle_target = 0
phase = 0
    state = 0
    timer = 0
    death_timer = 0
    slowdown_timer = 0
xdir  = 1
angle = 0
boss_enemy = 1
heart = 192
    heartmax = 192
    hp_mod = 0.26041667
    hp_target = heart
heart_bar_target = ((heart/2)-(heartmax/4))+2
heart_bar_target_2 = heart/2
stamina = 120
can_draw_healthbar = 0
sword = instance_create(x,y,obj_hand_sword);
    sai = instance_create(x,y,obj_hand_sai);
    boxing_glove = instance_create(x,y,obj_hand_boxing_glove);
    bo_staff = instance_create(x,y,obj_hand_bo_staff);
    hitbox = 128
    sound_attack_timer = 0
        phase_flash = 0
        phase_timer = 0
        warning_flash = 0
        weapon_lock = 0
        weapon_type = -1
        weapon_choice = 0
    sword.parent = id
    sai.parent = id
    boxing_glove.parent = id
    bo_staff.parent = id
white_transition_alpha = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.targets_mode = spr_hud_target_boss and room != rm_editor
    o.targets_ready = 3;
if room = rm_editor
    {
        if instance_exists(sword) instance_destroy(sword,true);
        if instance_exists(sai) instance_destroy(sai,true);
        if instance_exists(boxing_glove) instance_destroy(boxing_glove,true);
        if instance_exists(bo_staff) instance_destroy(bo_staff,true);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if o.pause = 0
    {
        if heart &gt;= 0
            {
                if ignore_player &gt; 0
                    {
                        ignore_player -= 1;
                        move_towards_point(ignore_player_x,ignore_player_y,10)
                        if point_distance(ignore_player_x,ignore_player_y,x,y) &lt; 20
                            ignore_player = 0;
                    }
                //Movement State
                if state = 0
                    {
                        //State timer
                        if phase = 0 {timer += 1}
                        if phase = 1
                            {
                                if o.user_enemy_level &lt; 1
                                    timer += 1;
                                if o.user_enemy_level &gt;= 1
                                    timer += 2;
                            }
                        if bob_pause = 0
                            {
                                //Head Bobbing
                                bob_target += bob_dir
                                if (bob_target &gt; 8)  bob_dir = -1.75;
                                if (bob_target &lt; -8) bob_dir = 1.75;
                                bob = lerp(bob,bob_target,0.2)
                            }
                        if phase = 0 and heart &lt; heartmax/2
                            {
                                audio_play_sound(snd_boss_phase_transition,50,false);
                                phase_timer = 1;
                                phase = 1;
                            }
                        //Animation
                        frame_timer += 1
                        if (frame_timer &gt; 120) frame_timer = 0;
                        if (frame_timer = 0) frame = 0;
                        if (frame_timer = 90) frame = 1;
                        //Seek the player only if they are nearby
                        var anchor_x = o.px+(168*xdir);
                        var anchor_y = o.py-64;
                        if x &gt; o.px+168 xdir = 1;
                        if x &lt; o.px-168 xdir = -1;
                        //If inside a wall, seek spawn point instead
                        //(ignoring the player until we're no longer inside the wall)
                        var wall_right = tile_layer_find(surface_flats,x,y-8);
                        if tile_exists(wall_right)
                            {
                                ignore_player_x = o.px+(288*-xdir);
                                ignore_player_y = o.py-64;
                                ignore_player = 120;
                            }
                        //Escalate timer's speed if the player is approaching aggressively
                        if point_distance(o.universal_player_x,o.universal_player_y,x,y) &lt; 64
                        and o.user_enemy_level &lt; 2
                            timer += 1;
                        if point_distance(anchor_x,anchor_y,x,y) &gt; 8
                            {
                                var val_speed = 3;
                                if point_distance(anchor_x,anchor_y,x,y) &gt; 168
                                    val_speed = 8;
                                var val_hspeed = val_speed;
                                if (xdir =  1 and x &lt; anchor_x)
                                or (xdir = -1 and x &gt; anchor_x)
                                    val_hspeed = val_speed*0.75;
                                if (item = spr_mod_chip_speed or o.user_enemy_level &gt;= 4)
                                    val_hspeed = val_speed*1.75;
                                if ignore_player = 0
                                    move_towards_point(anchor_x,anchor_y,val_hspeed);
                                //Tilt body towards direction of movement
                                if x &gt; anchor_x angle += 4;
                                if x &lt; anchor_x angle -= 4;
                                if o.user_cursor_mode != 0 and ignore_player = 0
                                    move_towards_point(x,y,0);
                            }
                        else
                            {
                                move_towards_point(x,y,0)
                                //Reset body's tilt
                                if angle &lt; 0 angle += 4;
                                if angle &gt; 0 angle -= 4;
                                if angle &gt; -8 and angle &lt; 8
                                    angle = 0;
                            }
                        if timer &gt;= 120
                            {
                                if timer = 120
                                or timer = 180
                                or timer = 210
                                or timer = 220
                                or timer = 225
                                or timer = 230
                                or timer = 235
                                    {
                                        audio_play_sound(snd_bomb_beep,50,false)
                                        warning_flash = 2;
                                    }
                            }
                        if (timer &gt; 240)
                            {
                                if weapon_type = -1
                                    {
                                        if (point_distance(x,y,o.universal_player_x,o.universal_player_y) &gt; 128)
                                            weapon_type = 1;
                                        else
                                            weapon_type = 0;
                                        weapon_choice = random_range(0,4);
                                        if o.user_enemy_level &lt; 1
                                            weapon_choice = random_range(0,1.9);
                                    }
        
                                if weapon_type = 0
                                    {
                                        frame = 3
                                        sound_attack_timer += 1
                                        if sound_attack_timer = 0
                                            {
                                                audio_play_sound(snd_enemy_flame,50,false)
                                            }
                                        if sound_attack_timer = 4
                                            {
                                                audio_play_sound(snd_enemy_projectile,50,false)
                                            }
                                        if sound_attack_timer = 8
                                            {
                                                audio_play_sound(snd_enemy_sword,50,false)
                                                sound_attack_timer = 0
                                            }
                                        //Rotate everything quickly
                                        var var_speed = 8;
                                        if phase = 1 var_speed = 12;
                                        sword.angle += var_speed*xdir
                                        sai.angle += var_speed*xdir
                                        boxing_glove.angle += var_speed*xdir
                                        bo_staff.angle += var_speed*xdir

                                        sword.subangle += 16
                                        sai.subangle += 16
                                        boxing_glove.subangle += 16
                                        bo_staff.subangle += 16
        
                                        if phase = 1 scr_set_screen_shake(3,1);
        
                                        //Hurt The Player If They've Been Punched By The Boxing Glove
                                        if (o.hurt[0] = 0 and o.hurt[1] = 0
                                        and o.shield_invuln = 32
                                        and point_distance(x,y,o.universal_player_x,o.universal_player_y) &lt; hitbox)
                                            {
                                                scr_enemy_deal_damage(0.4,1,2);
                                                o.hsp = 8*-xdir;
                                                scr_set_screen_shake(12,3)
                                            }
                                        //Mega Items
                                        var instance_ID = collision_circle(x,y,hitbox,obj_mega_item_parent,false,true);
                                        if instance_ID != noone
                                            {
                                                instance_ID.attacked = 2
                                                scr_set_screen_shake(12,3)
                                            }
                                        //Attack other enemies within range of the boxing glove
                                        instance_ID = collision_circle(x,y,hitbox,obj_enemy_parent,false,true);
                                        if instance_exists(instance_ID)
                                            {
                                                if instance_ID.attacked = 0 and instance_ID.alpha = 0
                                                    {
                                                        instance_ID.attacked = 1
                                                        instance_ID.attacked_damage = 2
                                                        scr_set_screen_shake(12,3)
                                                    }
                                            }
                                    }
        
                                if (weapon_type = 1)
                                    {
                                        if (weapon_choice &lt;= 1)
                                            {
                                                frame = 0
                                                timer = 0
                                                state = 1
                                                sword.y = y
                                                sword.state = 1
                                                weapon_lock = 1
                                                audio_play_sound(snd_enemy_sword,50,false)
                                            }
                                        if (phase = 0 and weapon_choice &gt; 1)
                                        or (phase = 1 and weapon_choice &gt; 1 and weapon_choice &lt; 2)
                                            {
                                                frame = 0
                                                timer = 0
                                                state = 1
                                                sai.y = y
                                                sai.state = 1
                                                weapon_lock = 1
                                                audio_play_sound(snd_enemy_sword,50,false)
                                            }
                                        if (phase = 1 and weapon_choice &gt;= 2 and weapon_choice &lt; 3)
                                            {
                                                frame = 0
                                                timer = 0
                                                state = 1
                                                boxing_glove.y = y
                                                boxing_glove.state = 1
                                                weapon_lock = 1
                                                audio_play_sound(snd_enemy_sword,50,false)
                                            }
                                        if (phase = 1 and weapon_choice &gt;= 3 and weapon_choice &lt;= 4)
                                            {
                                                frame = 0
                                                timer = 0
                                                state = 1
                                                bo_staff.y = y
                                                bo_staff.state = 1
                                                weapon_lock = 1
                                                audio_play_sound(snd_enemy_sword,50,false)
                                            }
                                    }
                                if timer &gt; 320
                                    {
                                        timer = 0;
                                        frame = 0;
                                        weapon_lock = 0;
                                        weapon_type = -1;
                                        sound_attack_timer = 0;
                                    }
                            }
                    }
                //Attack State
                if state = 1
                    {
                        move_towards_point(x,y,0)
                        timer += 1
                        if xdir = 1 angle += 4;
                        if xdir = -1 angle -= 4;
                        if timer = 15
                        if timer &gt;= 16 and timer &lt;= 20
                            {
                                x += 12*-xdir
                            }
                        if timer &gt; 60
                            {
                                //Reset body's tilt
                                if angle &lt; 0 angle += 4;
                                if angle &gt; 0 angle -= 4;
                                if angle &gt; -8 and angle &lt; 8
                                    angle = 0;
                            }
                        if timer &gt; 90
                            {
                                timer = 0
                                state = 0
                                weapon_lock = 0;
                                weapon_type = -1;
                                sound_attack_timer = 0;
                            }
                    }
                //Lock angle rotation, regardless of state
                if angle &gt; 24 angle = 24;
                if angle &lt; -24 angle = -24;
                //Warn the player of an upcoming attack
                if warning_flash &gt; 0
                    warning_flash -= 0.25;
            }
        else
            {
                if death = 0 and room = rm_editor death = 1;
                frame = 2
            }
    }
else
    move_towards_point(x,y,0);
if room != rm_editor and o.pause = 0
    {
        if heart &lt; 0
            {
                if o.timer_stop = 0
                    {
                        o.timer_stop = 1
                        depth = 0
                        death = 1
                        timer = 0
                        scr_stop_boss_music()
                        if room = rm_campaign
                            {
                                if o.player_bosses[o.player_current] &lt; 3
                                    o.player_bosses[o.player_current] = 3;
                            }
                    }
                frame = 2
                timer += 1
                o.death[0] = 0
                death_timer += 1
                if timer = 2
                    audio_play_sound(snd_enemy_explosion,50,false);
                if timer &gt;= 8
                    {
                        var bomb_ID = instance_create(x+random_range(-64,64),y+random_range(-64,64),obj_cube_rogue_bomb);
                        bomb_ID.detonate_for_milla = 1;
                        bomb_ID.dont_leave_decorations = 1;
                        timer = 0
                    }
                slowdown_timer += 1
                if slowdown_timer = 2 and death_timer &lt; 240
                    {
                        o.pause_logic = 2
                        slowdown_timer = 0
                    }
                if death_timer &gt; 300
                    instance_destroy();
            }
    }
else
    {
        if instance_number(obj_blade_subordinate) &gt; 1
            {
                scr_set_message("There can only be one Blade Subordinate per stage!")
                instance_destroy();
            }
        if point_distance(o.px,o.py,x,y) &gt; 1024
            move_towards_point(x,y,0);
        if heart &lt; 0 and o.pause = 0
            {
                death_timer += 1
                if death_timer &gt; 299
                    {
                        var obj_id = instance_create(start_x,start_y,object_index);
                        obj_id.item = item
                        instance_destroy()
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.user_cursor_mode = 0
    {
        draw_sprite(spr_boss_hud,0,159,224)
        if heart &gt; 0
            {
                var heart_scale = heart*0.5208333333333333;
                heart_bar_target = lerp(heart_bar_target,heart_scale,0.15);
                draw_sprite_part_ext(spr_boss_health,0,0,0,heart_bar_target,3,164,226,1,1,c_white,1)
            }
        draw_set_color(c_white)
        draw_set_font(o.text_font)
        draw_set_halign(fa_middle)
        draw_text(213,208,"Blade Subordinate")
        draw_set_halign(fa_left)
        if heart &lt; 0 and room != rm_editor and o.pause = 0
            {
                if white_transition_alpha &lt; 1 white_transition_alpha += 0.0025;
                draw_sprite_stretched_ext(spr_thunder,0,0,0,internal_res_width,internal_res_height,c_white,white_transition_alpha)
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sound_attack_timer &gt; 0
    draw_sprite_ext(spr_attack_4,sound_attack_timer,x-125,y-120,5,5,0,c_white,0.50);
event_inherited()
if warning_flash &gt; 0
    {
        if warning_flash &gt; 0.5 and warning_flash &lt; 1 draw_set_blend_mode(bm_add);
        draw_sprite_ext(sprite_index,3,x,y+bob,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),angle+subangle,c_yellow,1);
        draw_set_blend_mode(bm_normal)
    }
if phase_timer &gt; 0
    {
        phase_flash += 1;
        phase_timer += 1;

        var pal_alpha = 0;
        if phase_flash &gt; 1 pal_alpha = 1;
        script_execute(o.pal_swap_script,flash_palette,pal_alpha,false)
        draw_sprite_ext(sprite_index,frame,x,y+bob,xdir*(scale+spring_jiggle+enemy_growth),scale+enemy_growth-(spring_jiggle/3),angle+subangle,c_yellow,1);
        shader_reset();
        if phase_flash &gt; 2
            phase_flash = 0;
        if phase_timer &gt; 30
            phase_timer = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
