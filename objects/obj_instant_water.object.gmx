<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_instant_water</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Are We Allowed To Hold Items?
give_item = 0
item = 0
timer = 0
height = y
draw_height = 0
o = obj_game_logic
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic
timer += 1
if timer &gt;= 8
    {
        var instance_ID = collision_rectangle(x,0,x+sprite_get_width(sprite_index),room_height,obj_instant_water_specify,false,true);
        if instance_exists(instance_ID)
            {
               height = instance_ID.y
               draw_height = 1
            }
        else
            {
                height = y+sprite_get_height(sprite_index)+64;
                draw_height = 0
            }
        //Visibility Logic
        if draw_height = 1
            {
                if room = rm_editor
                    {
                        if (obj_level_editor.use_debug_hud_mode = 1 and obj_game_logic.user_cursor_mode = 0)
                        or (obj_game_logic.user_cursor_mode = 1)
                            draw_height = 1;
                        else
                            draw_height = 0;
                    }
                else
                    {
                        if (obj_game_logic.debug_hud_mode &gt; 0)
                            draw_height = 1;
                        else
                            draw_height = 0;
                    }
            }
        timer = 0
    }
if o.user_cursor_mode = 0
and point_in_rectangle(o.universal_player_x,o.universal_player_y,x,y,x+sprite_get_width(sprite_index),y+sprite_get_height(sprite_index))
    {
        o.water_height = height       //Default Height Of The Ocean Water
        o.water_line   = height       //Default Water Line Of The Ocean Water
    }

if room = rm_editor
    {
        if (obj_level_editor.use_debug_hud_mode = 1 and o.user_cursor_mode = 0)
        or (o.user_cursor_mode = 1)
            visible = true;
        else
            visible = false;
    }
else
    {
        if (o.debug_hud_mode &gt; 0)
            visible = true;
        else
            visible = false;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,0,x,y)
if draw_height = 1
    {
        draw_line_width_colour(x+16,y+16,x+16,height+16,4,c_yellow,c_orange)
        draw_line_width_colour(x+16,y+16,x+16,height+16,2,c_orange,c_yellow)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
