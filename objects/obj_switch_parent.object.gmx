<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_switch_parent</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Check for Tiles on Layer 3.
tile_surface_id = tile_layer_find(surface_items,x,y)
tile_asset_id = -1
if tile_exists(tile_surface_id)
    {
        //Ensure we are attached to the tile
        x = tile_get_x(tile_surface_id);
        y = tile_get_y(tile_surface_id);
        //Check Tiles Asset To Ensure We Are An Invincibility Flower
        tile_asset_id = tile_get_background(tile_surface_id)
    }
//Set confirmation of sound playback
sound_confirm = 0;
//Are We Allowed To Hold Items?
give_item = 0
item = 0

//If we have found an switch floor tile, create a tile of
//the switch's second frame of animation
if (tile_exists(tile_surface_id) and tile_asset_id=spr_switch_0)
    {
        tile_modifier_id = tile_add(spr_switch_1,0,0,40,11,x,y,-3);
        //Collision Ranges
        ox = x;             //Origin X
        oy = y;             //Origin Y
        cx = 39;            //Collision X
        cy = 12;            //Collision Y
    }
//If we have found an switch wall tile for the right, create a tile of
//the switch's second frame of animation
if (tile_exists(tile_surface_id) and tile_asset_id=spr_switch_2)
    {
        tile_modifier_id = tile_add(spr_switch_3,0,0,11,40,x-7,y,-3);
        //Collision Ranges
        ox = x-24;          //Origin X
        oy = y;             //Origin Y
        cx = 16;            //Collision X
        cy = 56;            //Collision Y
    }
//If we have found an switch wall tile for the left, create a tile of
//the switch's second frame of animation
if (tile_exists(tile_surface_id) and tile_asset_id=spr_switch_4)
    {
        tile_modifier_id = tile_add(spr_switch_5,0,0,11,40,x,y,-3);
        //Collision Ranges
        ox = x;             //Origin X
        oy = y;             //Origin Y
        cx = 24;            //Collision X
        cy = 56;            //Collision Y
    }

//If no such tiles have been found, report the error to the console and self-destruct
if (tile_asset_id!=spr_switch_0 and tile_asset_id!=spr_switch_2
and tile_asset_id!=spr_switch_4)
    {
        scr_set_message("No switch was found at X:"+string(x)+"; Y:"+string(y))
        instance_destroy(); 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Logic

//Pause Safety Check
if obj_game_logic.pause = 0
{
//If The Player Has Somehow Destroyed The Switch Tile, Destroy Self
if !tile_exists(tile_surface_id) instance_destroy();

var instance_ID  = collision_rectangle(ox,oy,ox+cx,oy+cy,obj_player_cube_alt,false,true);
var mega_item_ID = collision_rectangle(ox,oy,ox+cx,oy+cy,obj_mega_item_parent,false,true);

//If the player is close enough to us, set visibility of tile to false
if (obj_game_logic.px &gt;= ox and obj_game_logic.px &lt;= ox+cx
and obj_game_logic.py &gt;= oy and obj_game_logic.py &lt;= oy+cy)
or instance_exists(instance_ID)
or instance_exists(mega_item_ID)
    {
        //Set modifier tile as invisible
        tile_set_visible(tile_modifier_id,false)
        //Play sound
        if sound_confirm = 0 {audio_play_sound(snd_switch,50,false) sound_confirm = 1}
    }
//If the player is too far away from us, set visibility of tile to true
else
    {
        //Set tile as visible
        tile_set_visible(tile_modifier_id,true)
        sound_confirm = 0
    }

} //End of Pause Safety Check
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
