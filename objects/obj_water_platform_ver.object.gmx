<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform_water_vertical</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p_speed=2       //Tile's Max Speed
p_accel=0       //Tile's Acceleration
sensor_left=-1  //Tile's Left Sensor
sensor_right=-1 //Tile's Right Sensor
dir_toggle=0    //Direction Toggle
start_x = x
start_y = y
instance_ID = collision_point(x,y,obj_smart_pools,false,true)
if !instance_exists(instance_ID)
    {
        instance_destroy()
        scr_set_message("Smart pool objects not found!")
    }

//Validate our trajectory
validate_x_1 = 0
validate_y_1 = -128
validate_x_2 = 0
validate_y_2 = -128
origin_x_1 = 0
origin_y_1 = -128
origin_x_2 = 0
origin_y_2 = -128
validate_timer = 0
validate_tile_id_left = -1
validate_tile_id_right = -1
validate_tile_id_number_left = -1
validate_tile_id_number_right = -1
//FOF Overlay
fof_overlay_enable = 0
fof_overlay_scroll = 16
fof_overlay_alpha = 0
fof_tile_set = 0
//Are We Allowed To Hold Items?
give_item = 0
item = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tile_exists(validate_tile_id_left) tile_delete(validate_tile_id_left);
if tile_exists(validate_tile_id_right) tile_delete(validate_tile_id_right);
if tile_exists(validate_tile_id_number_left) tile_delete(validate_tile_id_number_left);
if tile_exists(validate_tile_id_number_right) tile_delete(validate_tile_id_number_right);
obj_level_editor.user_place_allow = 0
if instance_exists(instance_ID)
    instance_destroy(instance_ID);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set our object's coordinates
if instance_exists(instance_ID)
    {
        //Pause Safety Check
        if obj_game_logic.pause = 0
            {
                //Set our pool's speed
                if dir_toggle = 0 {p_accel+=0.10; if p_accel &gt; p_speed p_accel=p_speed; sensor_right = tile_layer_find(surface_flags,instance_ID.x+8,instance_ID.y+120); sensor_left = -1;}
                if dir_toggle = 1 {p_accel-=0.10; if p_accel &lt;-p_speed p_accel=-p_speed; sensor_left = tile_layer_find(surface_flags,instance_ID.x+8,instance_ID.y+8); sensor_right = -1;}

                //If we are colliding with a modifier tile, change directions
                if tile_exists(sensor_right) dir_toggle = 1;
                if tile_exists(sensor_left)  dir_toggle = 0;

                //Apply movement speed to the tile's position
                instance_ID.y += p_accel
                instance_activate_object(instance_ID)
            }  //End of Pause Safety Check
    }

if room = rm_editor
    {
        //Validate our trajectory and tile-set
        validate_timer += 1
        if validate_timer &gt;= 60
            {
                var egg_timer_left = 0;
                while(egg_timer_left &lt; 512)
                    {
                        validate_tile_id_left = tile_layer_find(surface_flags,x+4,y-egg_timer_left);
                        if tile_exists(validate_tile_id_left)
                            {
                                validate_x_1 = x
                                validate_y_1 = tile_get_y(validate_tile_id_left)
                                origin_y_1 = y
                                validate_tile_id_number_left = validate_tile_id_left
                            }
                        else
                            egg_timer_left += 4;
                        if validate_tile_id_left != -1 break;
                    }
                var egg_timer_right = 0;
                while(egg_timer_right &lt; 512)
                    {
                        validate_tile_id_right = tile_layer_find(surface_flags,x+4,y+egg_timer_right);
                        if tile_exists(validate_tile_id_right)
                            {
                                validate_x_2 = x
                                validate_y_2 = tile_get_y(validate_tile_id_right)
                                origin_y_2 = y
                                validate_tile_id_number_right = validate_tile_id_right
                            }
                        else
                            egg_timer_right += 4;
                        if validate_tile_id_right != -1 break;
                    }
                validate_timer = 0
                /*if !instance_exists(instance_ID)
                    {
                        instance_destroy()
                        scr_set_message("Smart pool objects not found!")
                    }*/
            }
        var parent = obj_level_editor;
        //Hold onto the tile during the saving process
        if parent.use_write_delay &gt; 0 and instance_exists(instance_ID) instance_ID.y = y;
        if (point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,start_x-48,start_y-20,start_x+48,start_y+20)
        and parent.user_cursor_mode = 0 and parent.use_tile_menu = 0 and parent.side_bar_allow = 0)
            {
                if instance_exists(instance_ID)
                    {
                        instance_ID.x = start_x
                        instance_ID.y = start_y
                    }
            }
        //Display FOF Overlay If Hovered Over
        if (point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,x-16,y-16,x+48,y+48)
        and parent.use_tile_menu = 0 and parent.side_bar_allow = 0 and parent.user_cursor_mode = 0
        and ((parent.user_cursor_display_mode = 1 and parent.use_tile_switching_mode = 1) or parent.use_tile_switching_mode = 0))
            fof_overlay_enable = 1;

        if fof_overlay_enable = 1
        and instance_exists(instance_ID)
            {
                parent.user_place_allow = 1
                parent.use_tile_menu_cool_down = 16
                if fof_overlay_scroll &gt; 0 fof_overlay_scroll -=1;
                if fof_overlay_alpha &lt; 1 fof_overlay_alpha += 0.1;
                if !point_in_rectangle(parent.use_cursor_x,parent.use_cursor_y,x-100,y-64,x+132,y+48)
                or parent.side_bar_allow = 1 or parent.use_tile_menu &gt; 0
                    {
                        fof_overlay_alpha = 0
                        fof_overlay_scroll = 16
                        fof_overlay_enable = 0
                        parent.user_place_allow = 0
                        parent.use_tile_menu_cool_down = 0
                    }
                if (mouse_check_button_pressed(parent.joy_mouse_button_left) or parent.use_put_here = 1)
                and parent.use_cursor_y &lt; y-8
                    {
                        if parent.use_cursor_x &gt; x+99 and parent.use_cursor_x &lt; x+99+16
                        and parent.use_cursor_y &lt; y-48
                            {
                                fof_overlay_alpha = 0
                                fof_overlay_scroll = 16
                                fof_overlay_enable = 0
                                parent.user_place_allow = 0
                                parent.use_tile_menu_cool_down = 0
                                parent.use_cursor_animation_trigger = 1
                                audio_play_sound(pause_select,50,false)
                            }
                        if parent.use_cursor_y &gt;= y-48
                            {
                                if parent.use_cursor_x &gt; x-99+16 and parent.use_cursor_x &lt; x-62+16
                                    {
                                        var instance_x = instance_ID.x;
                                        var instance_y = instance_ID.y;
                                        instance_destroy(instance_ID)
                                        instance_ID = instance_create(instance_x,instance_y,obj_water_cube)
                                        audio_play_sound(pause_select,50,false)
                                        parent.use_confirm = 1
                                        parent.use_cursor_animation_trigger = 1
                                    }
                                if parent.use_cursor_x &gt; x-59+16 and parent.use_cursor_x &lt; x-22+16
                                    {
                                        var instance_x = instance_ID.x;
                                        var instance_y = instance_ID.y;
                                        instance_destroy(instance_ID)
                                        instance_ID = instance_create(instance_x,instance_y,obj_smart_pools)
                                        audio_play_sound(pause_select,50,false)
                                        parent.use_confirm = 1
                                        parent.use_cursor_animation_trigger = 1
                                    }
                                if parent.use_cursor_x &gt; x-18+16 and parent.use_cursor_x &lt; x+19+16
                                    {
                                        var instance_x = instance_ID.x;
                                        var instance_y = instance_ID.y;
                                        instance_destroy(instance_ID)
                                        instance_ID = instance_create(instance_x,instance_y,obj_smart_petal_pool)
                                        audio_play_sound(pause_select,50,false)
                                        parent.use_confirm = 1
                                        parent.use_cursor_animation_trigger = 1
                                    }
                                if parent.use_cursor_x &gt; x+22+16 and parent.use_cursor_x &lt; x+59+16
                                    {
                                        var instance_x = instance_ID.x;
                                        var instance_y = instance_ID.y;
                                        instance_destroy(instance_ID)
                                        instance_ID = instance_create(instance_x,instance_y,obj_water_pool)
                                        audio_play_sound(pause_select,50,false)
                                        parent.use_confirm = 1
                                        parent.use_cursor_animation_trigger = 1
                                    }
                                if parent.use_cursor_x &gt; x+62+16 and parent.use_cursor_x &lt; x+99+16
                                    {
                                        //blank
                                        audio_play_sound(character_parry,50,false)
                                        parent.use_confirm = 1
                                    }
                            }
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_editor
    {
        draw_sprite(sprite_index,0,x,y)
                draw_line_width_colour(x+16,validate_y_1+16,x+16,origin_y_1+16,4,c_yellow,c_orange)
                draw_line_width_colour(x+16,validate_y_1+16,x+16,origin_y_1+16,2,c_orange,c_yellow)
                draw_line_width_colour(x+16,validate_y_2+16,x+16,origin_y_2+16,4,c_yellow,c_orange)
                draw_line_width_colour(x+16,validate_y_2+16,x+16,origin_y_2+16,2,c_orange,c_yellow)
        //Draw Overlay
        if fof_overlay_enable &gt;= 1
            draw_sprite_ext(spr_fof_overlay,4,x+16,y-2+fof_overlay_scroll,0.25,0.25,0,c_white,fof_overlay_alpha);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
