<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bridge_post</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_delete_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>o = obj_game_logic
item = 0
give_item = 0
asset_check = 0
asset_bridge_post = spr_bridge_piece_post
asset_bridge_piece = spr_bridge_piece
height_x[0] = 16
height_x[1] = 32
height_x[2] = 48
height_x[3] = 64
height_x[4] = 80
height_x[5] = 96
height_x[6] = 112
height_x[7] = 128
height_x[8] = 144
height_x[9] = 160
height_x[10] = 176
height_x[11] = 192
height_y[0] = 0
height_y[1] = 0
height_y[2] = 0
height_y[3] = 0
height_y[4] = 0
height_y[5] = 0
height_y[6] = 0
height_y[7] = 0
height_y[8] = 0
height_y[9] = 0
height_y[10] = 0
height_y[11] = 0
height_y_target[0] = 0
height_y_target[1] = 0
height_y_target[2] = 0
height_y_target[3] = 0
height_y_target[4] = 0
height_y_target[5] = 0
height_y_target[6] = 0
height_y_target[7] = 0
height_y_target[8] = 0
height_y_target[9] = 0
height_y_target[10] = 0
height_y_target[11] = 0
leader = 0

tile_0 = tile_add(tile_bridge_mask,0,0,224,32,x-8,y,surface_slopes)
tile_set_visible(tile_0,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if tile_exists(tile_0) tile_delete(tile_0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room != rm_editor
    {
        if asset_check &lt; 10
            asset_check += 1;
        
        if asset_check = 8
            {
                if instance_exists(obj_bg_city)
                or instance_exists(obj_bg_city_day)
                or instance_exists(obj_bg_city_sewers)
                or instance_exists(obj_bg_sushi_bar)
                or instance_exists(obj_bg_mall_day)
                or instance_exists(obj_bg_mall_night)
                    {
                        asset_bridge_post = spr_bridge_piece_post_city
                        asset_bridge_piece = spr_bridge_piece_city
                    }
                if instance_exists(obj_bg_space)
                or instance_exists(obj_bg_space_night)
                    {
                        asset_bridge_post = spr_bridge_post_space
                        asset_bridge_piece = spr_bridge_piece_space
                    }
            }
    }
else
    {
        asset_check += 1
        
        if asset_check = 30
            {
                if instance_exists(obj_bg_city)
                or instance_exists(obj_bg_city_day)
                or instance_exists(obj_bg_city_sewers)
                or instance_exists(obj_bg_sushi_bar)
                or instance_exists(obj_bg_mall_day)
                or instance_exists(obj_bg_mall_night)
                    {
                        asset_bridge_post = spr_bridge_piece_post_city
                        asset_bridge_piece = spr_bridge_piece_city
                    }
                if instance_exists(obj_bg_space)
                or instance_exists(obj_bg_space_night)
                    {
                        asset_bridge_post = spr_bridge_post_space
                        asset_bridge_piece = spr_bridge_piece_space
                    }
                asset_check = 0
                if o.user_cursor_mode = 1
                    {
                        height_y_target[0] = 0
                        height_y_target[1] = 0
                        height_y_target[2] = 0
                        height_y_target[3] = 0
                        height_y_target[4] = 0
                        height_y_target[5] = 0
                        height_y_target[6] = 0
                        height_y_target[7] = 0
                        height_y_target[8] = 0
                        height_y_target[9] = 0
                        height_y_target[10] = 0
                        height_y_target[11] = 0
                    }
            }
    }
if o.pause = 0
    {
        if o.ground = 1 and point_in_rectangle(o.px,o.py,x+8,y-4,x+206,y+34)
            {
                var distance = point_distance(o.px,o.py,x+8,y)/6;
                if o.px &gt; x+104
                    distance = point_distance(o.px,o.py,x+200,y)/6;
                height_y_target[0] = distance
                height_y_target[1] = distance
                height_y_target[2] = distance
                height_y_target[3] = distance
                height_y_target[4] = distance
                height_y_target[5] = distance
                height_y_target[6] = distance
                height_y_target[7] = distance
                height_y_target[8] = distance
                height_y_target[9] = distance
                height_y_target[10] = distance
                height_y_target[11] = distance

                //Clipping Ranges
                if height_y_target[0] &gt; 2
                    {
                        height_y_target[0] = 2
                        height_y_target[11] = 2
                    }
                if height_y_target[1] &gt; 4
                    {
                        height_y_target[1] = 4
                        height_y_target[10] = 4
                    }
                if height_y_target[2] &gt; 6
                    {
                        height_y_target[2] = 6
                        height_y_target[9] = 6
                    }             
                if height_y_target[3] &gt; 8
                    {
                        height_y_target[3] = 8
                        height_y_target[8] = 8
                    }
                if height_y_target[4] &gt; 10
                    {
                        height_y_target[4] = 10
                        height_y_target[7] = 10
                    }
                if height_y_target[5] &gt; 11
                    {
                        height_y_target[5] = 11
                        height_y_target[6] = 11
                    }
            }
        else
            {
                height_y_target[0] = 0
                height_y_target[1] = 0
                height_y_target[2] = 0
                height_y_target[3] = 0
                height_y_target[4] = 0
                height_y_target[5] = 0
                height_y_target[6] = 0
                height_y_target[7] = 0
                height_y_target[8] = 0
                height_y_target[9] = 0
                height_y_target[10] = 0
                height_y_target[11] = 0
            }
        //Transition Target Heights Per Bridge Piece
        var count = 0;
        while(count &lt;= 11)
            {
                height_y[count] = lerp(height_y[count],height_y_target[count],0.35)
                count += 1
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(asset_bridge_post,0,x,y)
draw_sprite(asset_bridge_post,0,x+208,y)
var count = 0;
while(count &lt;= 11)
    {
        draw_sprite(asset_bridge_piece,0,x+height_x[count],y+height_y[count])
        count += 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
