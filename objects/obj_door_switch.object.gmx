<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_switch_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_switch_pad</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Logic

//Pause Safety Check
if obj_game_logic.pause = 0
{

var instance_ID  = collision_rectangle(x-16,y-16,x+16,y,obj_player_cube_alt,false,true);
var mega_item_ID = collision_rectangle(x-16,y-16,x+16,y,obj_mega_item_parent,false,true);

if obj_game_logic.user_cursor_mode = 0
    {
        //If the player is close enough to us, set visibility of tile to false
        if point_in_rectangle(obj_game_logic.px,obj_game_logic.py,x-16,y-16,x+16,y)
        or instance_exists(instance_ID)
        or instance_exists(mega_item_ID)
            {
                image_index = 2
                var door_ID = collision_circle(x,y,128,obj_door_vertical,false,true);
                if instance_exists(door_ID)
                    {
                        door_ID.door_slide = 1
                    }
                if sound_confirm = 0 {audio_play_sound(snd_switch,50,false) sound_confirm = 1}
            }
        //If the player is too far away from us, set visibility of tile to true
        else
            {
                image_index = 1
                var door_ID = collision_circle(x,y,128,obj_door_vertical,false,true);
                if instance_exists(door_ID)
                    {
                        door_ID.door_slide = 0
                    }
                sound_confirm = 0
            }
    }
else
    {
        var door_ID = collision_circle(x,y,128,obj_door_vertical,false,true);
        if instance_exists(door_ID)
            {
                door_ID.door_slide = 0
            }
    }

} //End of Pause Safety Check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y)

if room = rm_editor
    {
        if (obj_level_editor.use_debug_hud_mode = 1 and o.user_cursor_mode = 0)
        or (o.user_cursor_mode = 1)
            {
                draw_sprite_part(sprite_index,0,0,0,32,20,x-16,y-32)
                draw_set_alpha(0.5)
                draw_set_color(c_teal)
                draw_circle(x,y,128,false)
                draw_set_color(c_white)
                draw_circle(x,y,128,true)
                draw_set_alpha(1)
            }
    }
else
    {
        if (o.debug_hud_mode &gt; 0)
            {
                draw_sprite_part(sprite_index,0,0,0,32,20,x-16,y-32)
                draw_set_alpha(0.5)
                draw_set_color(c_teal)
                draw_circle(x,y,128,false)
                draw_set_color(c_white)
                draw_circle(x,y,128,true)
                draw_set_alpha(1)
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
