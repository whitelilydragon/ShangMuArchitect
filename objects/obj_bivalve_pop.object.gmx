<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bivalve_pop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_destructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>o = obj_game_logic
pop_enable = 0
frame = 0
item = 0
give_item = 0
attacked = 0
tiles = -1
destroyed = 0
rotate_angle = 0
rotate_timer = 0
item_x = 0
item_y = -16
weather_rain_particles_frame = 0

bubble_timer = 0
water_ID = noone

//Bubble X/Y Positions
bubble_x[0]  = x+random_range(-12,12); bubble_y[0]  = y+random_range(-12,12);
bubble_x[1]  = x+random_range(-12,12); bubble_y[1]  = y+random_range(-12,12);
bubble_x[2]  = x+random_range(-12,12); bubble_y[2]  = y+random_range(-12,12);
bubble_x[3]  = x+random_range(-12,12); bubble_y[3]  = y+random_range(-12,12);
bubble_x[4]  = x+random_range(-12,12); bubble_y[4]  = y+random_range(-12,12);
bubble_x[5]  = x+random_range(-12,12); bubble_y[5]  = y+random_range(-12,12);
bubble_x[6]  = x+random_range(-12,12); bubble_y[6]  = y+random_range(-12,12);
bubble_x[7]  = x+random_range(-12,12); bubble_y[7]  = y+random_range(-12,12);
bubble_x[8]  = x+random_range(-12,12); bubble_y[8]  = y+random_range(-12,12);
bubble_x[9]  = x+random_range(-12,12); bubble_y[9]  = y+random_range(-12,12);
bubble_x[10] = x+random_range(-12,12); bubble_y[10] = y+random_range(-12,12);
bubble_x[11] = x+random_range(-12,12); bubble_y[11] = y+random_range(-12,12);
bubble_x[12] = x+random_range(-12,12); bubble_y[12] = y+random_range(-12,12);
bubble_x[13] = x+random_range(-12,12); bubble_y[13] = y+random_range(-12,12);
bubble_x[14] = x+random_range(-12,12); bubble_y[14] = y+random_range(-12,12);
bubble_x[15] = x+random_range(-12,12); bubble_y[15] = y+random_range(-12,12);
bubble_x[16] = x+random_range(-12,12); bubble_y[16] = y+random_range(-12,12);
bubble_x[17] = x+random_range(-12,12); bubble_y[17] = y+random_range(-12,12);
bubble_x[18] = x+random_range(-12,12); bubble_y[18] = y+random_range(-12,12);
bubble_x[19] = x+random_range(-12,12); bubble_y[19] = y+random_range(-12,12);

bubble_trigger[0] = 0
bubble_trigger[1] = 0
bubble_trigger[2] = 0
bubble_trigger[3] = 0
bubble_trigger[4] = 0
bubble_trigger[5] = 0
bubble_trigger[6] = 0
bubble_trigger[7] = 0
bubble_trigger[8] = 0
bubble_trigger[9] = 0
bubble_trigger[10] = 0
bubble_trigger[11] = 0
bubble_trigger[12] = 0
bubble_trigger[13] = 0
bubble_trigger[14] = 0
bubble_trigger[15] = 0
bubble_trigger[16] = 0
bubble_trigger[17] = 0
bubble_trigger[18] = 0
bubble_trigger[19] = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o.pause = 0
    {
        //If attacked, pop the bivalve
        if (attacked = 1 and pop_enable = 0)
            {
                pop_enable = 1
                audio_play_sound(snd_enemy_hit,50,false)
                audio_play_sound(snd_bottle_pop,50,false)
                audio_play_sound(snd_basket_ball_kicked,50,false)
            }

        //Unfurl Umbrella
        if pop_enable = 1
            {
                frame += 0.5
                if frame &gt; 4.8
                    {
                        frame = 4.8
                        pop_enable = 2
                    }
            }

        if pop_enable = 2
            {
                water_ID = collision_point(x,y-8,obj_smart_pools,false,true);
                var height_comparison = o.water_height;
                if instance_exists(water_ID)
                    height_comparison = water_ID.y;

                //Check For Collisions With Spring's Surface
                if point_in_rectangle(o.px,o.py,x-32,height_comparison,x+32,y)
                and o.user_cursor_mode = 0
                //Tile Ceiling Checks
                and !tile_exists(o.tile_surface_id[1])
                and o.tile_collision_ceiling = 0
                    {
                        scr_set_spring_launch(6.7,obj_game_logic.spring_timer_blue,90)
                        if o.gravity_speed &gt; -6.7
                            o.gravity_speed -= 2.7;
                    }

                //Iterate Timer
                bubble_timer+=1
                //Spawn Bubbles At Certain Times
                switch(bubble_timer)
                    {
                        case 12:  {bubble_trigger[0] = 1}    case 36:  {bubble_trigger[1] = 1}
                        case 72:  {bubble_trigger[2] = 1}    case 96:  {bubble_trigger[3] = 1}
                        case 120: {bubble_trigger[4] = 1}    case 144: {bubble_trigger[5] = 1}
                        case 168: {bubble_trigger[6] = 1}    case 192: {bubble_trigger[7] = 1}
                        case 216: {bubble_trigger[8] = 1}    case 240: {bubble_trigger[9] = 1}
                        case 264: {bubble_trigger[10] = 1}   case 288: {bubble_trigger[11] = 1}
                        case 312: {bubble_trigger[12] = 1}   case 336: {bubble_trigger[13] = 1}
                        case 360: {bubble_trigger[14] = 1}   case 384: {bubble_trigger[15] = 1}
                        case 408: {bubble_trigger[16] = 1}   case 432: {bubble_trigger[17] = 1}
                        case 456: {bubble_trigger[18] = 1}   case 480: {bubble_trigger[19] = 1}
                        case 512: {bubble_timer = 0;}
                    }
                //Control Bubble Speeds
                if bubble_trigger[0]  = 1 {bubble_y[0]  -= 1;}
                if bubble_trigger[1]  = 1 {bubble_y[1]  -= 1.5;}
                if bubble_trigger[2]  = 1 {bubble_y[2]  -= 2;}
                if bubble_trigger[3]  = 1 {bubble_y[3]  -= 2.25;}
                if bubble_trigger[4]  = 1 {bubble_y[4]  -= 2.75;}
                if bubble_trigger[5]  = 1 {bubble_y[5]  -= 3;}
                if bubble_trigger[6]  = 1 {bubble_y[6]  -= 1;}
                if bubble_trigger[7]  = 1 {bubble_y[7]  -= 1.5;}
                if bubble_trigger[8]  = 1 {bubble_y[8]  -= 2;}
                if bubble_trigger[9]  = 1 {bubble_y[9]  -= 2.25;}
                if bubble_trigger[10] = 1 {bubble_y[10] -= 2.75;}
                if bubble_trigger[11] = 1 {bubble_y[11] -= 3;}
                if bubble_trigger[12] = 1 {bubble_y[12] -= 1;}
                if bubble_trigger[13] = 1 {bubble_y[13] -= 1.5;}
                if bubble_trigger[14] = 1 {bubble_y[14] -= 2;}
                if bubble_trigger[15] = 1 {bubble_y[15] -= 2.25;}
                if bubble_trigger[16] = 1 {bubble_y[16] -= 2.75;}
                if bubble_trigger[17] = 1 {bubble_y[17] -= 3;}
                if bubble_trigger[18] = 1 {bubble_y[18] -= 1;}
                if bubble_trigger[19] = 1 {bubble_y[19] -= 1.5;}

                //Reposition Bubbles
                if bubble_y[0]  &lt; height_comparison {bubble_y[0] = y+random_range(-12,12)}
                if bubble_y[1]  &lt; height_comparison {bubble_y[1] = y+random_range(-12,12)}
                if bubble_y[2]  &lt; height_comparison {bubble_y[2] = y+random_range(-12,12)}
                if bubble_y[3]  &lt; height_comparison {bubble_y[3] = y+random_range(-12,12)}
                if bubble_y[4]  &lt; height_comparison {bubble_y[4] = y+random_range(-12,12)}
                if bubble_y[5]  &lt; height_comparison {bubble_y[5] = y+random_range(-12,12)}
                if bubble_y[6]  &lt; height_comparison {bubble_y[6] = y+random_range(-12,12)}
                if bubble_y[7]  &lt; height_comparison {bubble_y[7] = y+random_range(-12,12)}
                if bubble_y[8]  &lt; height_comparison {bubble_y[8] = y+random_range(-12,12)}
                if bubble_y[9]  &lt; height_comparison {bubble_y[9] = y+random_range(-12,12)}
                if bubble_y[10] &lt; height_comparison {bubble_y[10] = y+random_range(-12,12)}
                if bubble_y[11] &lt; height_comparison {bubble_y[11] = y+random_range(-12,12)}
                if bubble_y[12] &lt; height_comparison {bubble_y[12] = y+random_range(-12,12)}
                if bubble_y[13] &lt; height_comparison {bubble_y[13] = y+random_range(-12,12)}
                if bubble_y[14] &lt; height_comparison {bubble_y[14] = y+random_range(-12,12)}
                if bubble_y[15] &lt; height_comparison {bubble_y[15] = y+random_range(-12,12)}
                if bubble_y[16] &lt; height_comparison {bubble_y[16] = y+random_range(-12,12)}
                if bubble_y[17] &lt; height_comparison {bubble_y[17] = y+random_range(-12,12)}
                if bubble_y[18] &lt; height_comparison {bubble_y[18] = y+random_range(-12,12)}
                if bubble_y[19] &lt; height_comparison {bubble_y[19] = y+random_range(-12,12)}
            }
            

        //Reset umbrella when no longer playtesting in editor mode
        if room = rm_editor
            {
                if pop_enable = 2 and o.user_cursor_mode = 1
                    {
                        frame = 0
                        attacked = 0
                        pop_enable = 0
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,frame,x,y)

//Draw Bubble Sprites
if (y &gt; o.water_height or instance_exists(water_ID))
and pop_enable &gt;= 2
    {
        var count = 0;
        while(count &lt;= 19)
            {
                draw_sprite(spr_bubbles,0,bubble_x[count],bubble_y[count])
                count += 1
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
