<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dna_cannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_explode</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics and Animation Variables
event_inherited()
scr_enemy_hp(20)
timer = 0                           //Enemy State Timer
base = -1
xdir = 1                            //Facing Direction
ydir = 1                            //Facing Direction of Beam Particles
turn  = 0                           //Sprite Turning
offset = 0                          //Sprite Offset Y
instance_ID = 0
offset_dir = 0.24                   //Sprite Offset Direction
xdir_previous = 0                   //Previous Facing Direction
freeze_logic  = 0
start_x = x
start_y = y
width_x = sprite_width/2
height_y = sprite_height/2
dropped_goodies = obj_petal
floor_offset = 44
flash_palette = spr_dna_cannon_palette
death_particles = spr_dna_cannon_death_particles
//Bullet (Base Bullet)
bullet_x = 0
bullet_y = 0
bullet_timer = 0
bullet_frame = 0
bullet_speed = 0
bullet_active = 0
bullet_hitbox = x
bullet_hitbox_1 = x
bullet_end_trigger = 0
bullet_block_timer = 0
//Bullet (Copies)
bullet_x_array[0]  = -10000 bullet_x_array[1]  = -10000
bullet_x_array[2]  = -10000 bullet_x_array[3]  = -10000
bullet_x_array[4]  = -10000 bullet_x_array[5]  = -10000
bullet_x_array[6]  = -10000 bullet_x_array[7]  = -10000
bullet_x_array[8]  = -10000 bullet_x_array[9]  = -10000
bullet_x_array[10] = -10000 bullet_x_array[11] = -10000
bullet_x_array[12] = -10000 bullet_x_array[13] = -10000
bullet_x_array[14] = -10000 bullet_x_array[15] = -10000
bullet_x_array[16] = -10000 bullet_x_array[17] = -10000
bullet_x_array[18] = -10000 bullet_x_array[19] = -10000
bullet_x_array[20] = -10000 bullet_x_array[21] = -10000
bullet_x_array[22] = -10000 bullet_x_array[23] = -10000
bullet_x_array[24] = -10000 bullet_x_array[25] = -10000
bullet_x_array[26] = -10000 bullet_x_array[27] = -10000
bullet_x_array[28] = -10000 bullet_x_array[29] = -10000
bullet_x_array[30] = -10000
bullet_y_array[0]  = y bullet_y_array[1]  = y
bullet_y_array[2]  = y bullet_y_array[3]  = y
bullet_y_array[4]  = y bullet_y_array[5]  = y
bullet_y_array[6]  = y bullet_y_array[7]  = y
bullet_y_array[8]  = y bullet_y_array[9]  = y
bullet_y_array[10] = y bullet_y_array[11] = y
bullet_y_array[12] = y bullet_y_array[13] = y
bullet_y_array[14] = y bullet_y_array[15] = y
bullet_y_array[16] = y bullet_y_array[17] = y
bullet_y_array[18] = y bullet_y_array[19] = y
bullet_y_array[20] = y bullet_y_array[21] = y
bullet_y_array[22] = y bullet_y_array[23] = y
bullet_y_array[24] = y bullet_y_array[25] = y
bullet_y_array[26] = y bullet_y_array[27] = y
bullet_y_array[28] = y bullet_y_array[29] = y
bullet_y_array[30] = y
bullet_frame_array[0] = 0
bullet_frame_array[1] = 1
bullet_frame_array[2] = 2
bullet_frame_array[3] = 3
bullet_frame_array[4] = 2
bullet_frame_array[5] = 1
bullet_frame_array[6] = 0
bullet_frame_array[7] = 1
bullet_frame_array[8] = 2
bullet_frame_array[9] = 3
bullet_frame_array[10] = 2
bullet_frame_array[11] = 1
bullet_frame_array[12] = 0
bullet_frame_array[13] = 1
bullet_frame_array[14] = 2
bullet_frame_array[15] = 3
bullet_frame_array[16] = 2
bullet_frame_array[17] = 1
bullet_frame_array[18] = 0
bullet_frame_array[19] = 1
bullet_frame_array[20] = 2
bullet_frame_array[21] = 3
bullet_frame_array[22] = 2
bullet_frame_array[23] = 1
bullet_frame_array[24] = 0
bullet_frame_array[25] = 1
bullet_frame_array[26] = 2
bullet_frame_array[27] = 3
bullet_frame_array[28] = 2
bullet_frame_array[29] = 1
bullet_frame_array[30] = 0
//Explosion Particles
explosion_frame = 0
explosion_timer = 0
explosion_flash = 0
explosion_x_1 = x+(32*xdir)+random_range(-32,0)  explosion_y_1 = y+random_range(-32,0)
explosion_x_2 = x+(32*xdir)+random_range(-24,24) explosion_y_2 = y+random_range(-24,24)
explosion_x_3 = x+(32*xdir)+random_range(-16,16) explosion_y_3 = y+random_range(-16,16)
explosion_x_4 = x+(32*xdir)+random_range(-8,8)   explosion_y_4 = y+random_range(-8,8)
explosion_x_5 = x+(32*xdir)+random_range(0,32)   explosion_y_5 = y+random_range(0,32)
explosion_frame_0 = 0
explosion_frame_1 = 1
explosion_frame_2 = 3
explosion_frame_3 = 2
explosion_frame_4 = 4
explosion_frame_5 = 0
//Explosive Firing Particles
firing_frame = 0
firing_timer = 0
firing_flash = 0
firing_x_1 = x+(32*xdir)+random_range(-32,0)  firing_y_1 = y+random_range(-32,0)
firing_x_2 = x+(32*xdir)+random_range(-24,24) firing_y_2 = y+random_range(-24,24)
firing_x_3 = x+(32*xdir)+random_range(-16,16) firing_y_3 = y+random_range(-16,16)
firing_x_4 = x+(32*xdir)+random_range(-8,8)   firing_y_4 = y+random_range(-8,8)
firing_x_5 = x+(32*xdir)+random_range(0,32)   firing_y_5 = y+random_range(0,32)
firing_frame_0 = 0
firing_frame_1 = 2
firing_frame_2 = 4
firing_frame_3 = 6
firing_frame_4 = 8
firing_frame_5 = 1
//Explosive Blocking Particles
milla_blocking = 0
milla_firing_frame = 0
milla_firing_timer = 0
milla_firing_flash = 0
milla_firing_x_1 = x+(32*xdir)+random_range(-32,0)  milla_firing_y_1 = y+random_range(-32,0)
milla_firing_x_2 = x+(32*xdir)+random_range(-24,24) milla_firing_y_2 = y+random_range(-24,24)
milla_firing_x_3 = x+(32*xdir)+random_range(-16,16) milla_firing_y_3 = y+random_range(-16,16)
milla_firing_x_4 = x+(32*xdir)+random_range(-8,8)   milla_firing_y_4 = y+random_range(-8,8)
milla_firing_x_5 = x+(32*xdir)+random_range(0,32)   milla_firing_y_5 = y+random_range(0,32)
milla_firing_frame_0 = 0
milla_firing_frame_1 = 2
milla_firing_frame_2 = 4
milla_firing_frame_3 = 6
milla_firing_frame_4 = 8
milla_firing_frame_5 = 1
//Warning Animations
warning_frame = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room != rm_editor
    {
        base = tile_add(spr_dna_cannon_base,0,0,80,64,x-39,y-20,-6)
        if xdir = -1 {tile_set_scale(base,-1,1); tile_set_position(base,x+39,y-20);}
        if xdir =  1 {tile_set_scale(base,1,1);  tile_set_position(base,x-39,y-20);}
        //Spit Out Any Given Item
        scr_enemy_spit_out_items(self)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Animations
event_inherited()
if o.pause = 0 and freeze = 0
    {
        if room != rm_editor
            {
                if !point_in_rectangle(x,y,view_xview[view_port]-192,view_yview[view_port]-256,
                view_xview[view_port]+view_wview[view_port]+256,view_yview[view_port]+view_hview[view_port]+192)
                and bullet_end_trigger = 0
                    freeze_logic = 1;
                else
                    freeze_logic = 0;
            }

        if captured = 1 and object_index = obj_dna_cannon and state &lt; 2
            instance_change(obj_dna_cannon_child,true);

        //If we are not at the speed cap, apply acceleration.
        if captured = 1 gravity_speed = 0;

        if freeze_logic = 0
            {                
                if state = 0
                    {
                        //Iterate Animations
                        if being = 0 {frame += 0.25; if frame &gt; 1.70 frame = 0;}
                        if being = 1 {frame += 0.25; if frame &lt; 2 frame = 2; if frame &gt; 3.70 frame = 2;}
                        timer += 1
                        if (item = spr_mod_chip_speed and timer &lt; 170) timer += 1;
                        if timer = 140
                            {
                                if o.user_cursor_mode = 0
                                    being = 1;
                                else
                                    {
                                        being = 0
                                        timer = 0
                                    }
                            }
                        //Bullet Checks
                        if (timer = 170)
                            {
                                bullet_x = x+(32*xdir)
                                bullet_y = y
                                bullet_timer = 0
                                bullet_frame = 0
                                bullet_speed = 8*xdir
                                bullet_active = 1
                                being = 0
                                if play_sound = 1 audio_play_sound(snd_enemy_dna_cannon,2,false);
                            }
                        if timer &lt; 140
                            {
                                if depth = -7 depth = -5;
                                //Decrease warm-up speed on lower difficulties
                                if o.user_enemy_level &lt; 2
                                    timer -= 0.5;
                                else
                                    timer = floor(timer);
                                if obj_game_logic.px &lt; x  and xdir = 1  xdir = -1;
                                if obj_game_logic.px &gt;= x and xdir = -1 xdir =  1;
                            }
                        if timer &gt;= 170 and timer &lt; 230
                            {
                                //Firing Particles
                                firing_frame_1 += 0.75
                                if firing_frame_1 &gt; 9.8
                                    {
                                        firing_frame_1 = 0
                                        firing_x_1 = x+(32*xdir)+random_range(-16,0)
                                        firing_y_1 = y+random_range(-16,0)
                                    }
                                firing_frame_2 += 0.75
                                if firing_frame_2 &gt; 9.8
                                    {
                                        firing_frame_2 = 0
                                        firing_x_2 = x+(32*xdir)+random_range(-12,12)
                                        firing_y_2 = y+random_range(-12,12)
                                    }
                                firing_frame_3 += 0.75
                                if firing_frame_3 &gt; 9.8
                                    {
                                        firing_frame_3 = 0
                                        firing_x_3 = x+(32*xdir)+random_range(-8,8)
                                        firing_y_3 = y+random_range(-8,8)
                                    }
                                firing_frame_4 += 0.75
                                if firing_frame_4 &gt; 9.8
                                    {
                                        firing_frame_4 = 0
                                        firing_x_4 = x+(32*xdir)+random_range(-4,4)
                                        firing_y_4 = y+random_range(-4,4)
                                    }
                                firing_frame_5 += 0.75
                                if firing_frame_5 &gt; 9.8
                                    {
                                        firing_frame_5 = 0
                                        firing_x_5 = x+(32*xdir)+random_range(0,14)
                                        firing_y_5 = y+random_range(0,14)
                                    }
                            }
                        //Bullet Timed Spawnings
                        if bullet_active = 1
                            {
                                switch(timer)
                                    {
                                        case 170: {bullet_x_array[0] = x+(32*xdir); ydir = xdir; scr_set_screen_shake(24,3) break;}
                                        case 172: {bullet_x_array[1] = x+(32*xdir); break;}
                                        case 174: {bullet_x_array[2] = x+(32*xdir); break;}
                                        case 176: {bullet_x_array[3] = x+(32*xdir); break;}
                                        case 178: {bullet_x_array[4] = x+(32*xdir); break;}
                                        case 180: {bullet_x_array[5] = x+(32*xdir); scr_set_screen_shake(24,3) break;}
                                        case 182: {bullet_x_array[6] = x+(32*xdir); break;}
                                        case 184: {bullet_x_array[7] = x+(32*xdir); break;}
                                        case 186: {bullet_x_array[8] = x+(32*xdir); break;}
                                        case 188: {bullet_x_array[9] = x+(32*xdir); break;}
                                        case 190: {bullet_x_array[10] = x+(32*xdir); break;}
                                        case 192: {bullet_x_array[11] = x+(32*xdir); scr_set_screen_shake(24,3) break;}
                                        case 194: {bullet_x_array[12] = x+(32*xdir); break;}
                                        case 196: {bullet_x_array[13] = x+(32*xdir); break;}
                                        case 198: {bullet_x_array[14] = x+(32*xdir); break;}
                                        case 200: {bullet_x_array[15] = x+(32*xdir); break;}
                                        case 202: {bullet_x_array[16] = x+(32*xdir); break;}
                                        case 204: {bullet_x_array[17] = x+(32*xdir); scr_set_screen_shake(24,3) break;}
                                        case 206: {bullet_x_array[18] = x+(32*xdir); break;}
                                        case 208: {bullet_x_array[19] = x+(32*xdir); break;}
                                        case 210: {bullet_x_array[20] = x+(32*xdir); break;}
                                        case 212: {bullet_x_array[21] = x+(32*xdir); break;}
                                        case 214: {bullet_x_array[22] = x+(32*xdir); break;}
                                        case 216: {bullet_x_array[23] = x+(32*xdir); scr_set_screen_shake(24,3) break;}
                                        case 218: {bullet_x_array[24] = x+(32*xdir); break;}
                                        case 220: {bullet_x_array[25] = x+(32*xdir); break;}
                                        case 222: {bullet_x_array[26] = x+(32*xdir); break;}
                                        case 224: {bullet_x_array[27] = x+(32*xdir); break;}
                                        case 226: {bullet_x_array[28] = x+(32*xdir); break;}
                                        case 228: {bullet_x_array[29] = x+(32*xdir); break; scr_set_screen_shake(24,3)}
                                        case 230: {bullet_x_array[30] = x+(32*xdir); timer = 0; break;}
                                    }
                            }
                    }
                //Bullet Projectile
                if bullet_active = 1 and death = 0
                    {
                        var bullet_count = 0;
                        while(bullet_count &lt;= 30)
                            {
                                //Bullet Animations
                                bullet_frame_array[bullet_count]+= 0.25;
                                if bullet_frame_array[bullet_count] &gt; 4.5 bullet_frame_array[bullet_count] = 0;
                                //Bullet Movements
                                if bullet_x_array[bullet_count] != -10000 bullet_x_array[bullet_count] += bullet_speed;
                                if (bullet_x_array[bullet_count] &gt; x+500
                                or  bullet_x_array[bullet_count] &lt; x-500)
                                    bullet_x_array[bullet_count] = -10000;
                                bullet_y_array[bullet_count] = y+4
                                bullet_count += 1;
                            }
                        if bullet_x_array[30] = -10000 bullet_end_trigger = 0;
                        else                           bullet_end_trigger = 1;
                        //bullet_frame += 0.25; if bullet_frame &gt; 4.5 bullet_frame = 0;
        
                        //Bullet Movements
                        //bullet_x += bullet_speed;
        
                        //---------Collisions---------//
                        //----------------------------//
        
                        if ydir = 1
                            {
                                if bullet_x_array[30] != -10000 bullet_hitbox = bullet_x_array[30];
                                else bullet_hitbox = x;
                                if bullet_x_array[0] != -10000 bullet_hitbox_1 = bullet_x_array[0];
                                else bullet_hitbox_1 = -10000;
                                if bullet_x_array[30] != -10000 and bullet_x_array[0] = -10000
                                    {
                                        bullet_hitbox = bullet_x_array[30]
                                        bullet_hitbox_1 = x+500
                                    }
                            }
                        if ydir = -1
                            {
                                if bullet_x_array[30] != -10000 bullet_hitbox_1 = bullet_x_array[30];
                                else bullet_hitbox_1 = x;
                                if bullet_x_array[0] != -10000 bullet_hitbox = bullet_x_array[0];
                                else bullet_hitbox = 10000;
                                if bullet_x_array[30] != -10000 and bullet_x_array[0] = -10000
                                    {
                                        bullet_hitbox_1 = bullet_x_array[30]
                                        bullet_hitbox = x-500
                                    }
                            }
                        //Disable hitbox
                        if bullet_x_array[30] = -10000 and bullet_x_array[0] = -10000
                            {
                                bullet_hitbox = -10000
                                bullet_hitbox_1 = -10000
                            }

                        bullet_block_timer += 1
                        if bullet_block_timer &gt;= 4 bullet_block_timer = 0;
        
                        //Deal damage to the player
                        if (point_in_rectangle(o.universal_player_x,o.universal_player_y,bullet_hitbox,y-20,bullet_hitbox_1,y+4+(obj_game_logic.player_hitbox_radius/4)))
                            {
                                var ignore_yes = 0;
                                if (o.milla_special_attack &gt; 0 and o.milla_special_attack &lt;= 2)
                                    {
                                        if (o.xdir = 1 and bullet_speed &lt; 0)
                                        or (o.xdir = -1 and bullet_speed &gt; 0)
                                            {
                                                milla_blocking = 1
                                                if ignore_yes = 0
                                                    {
                                                        if bullet_block_timer = 0
                                                            {
                                                                var instance_ID = instance_create(o.milla_special_length_x2,y+4,obj_dna_projectiles);
                                                                if bullet_speed &gt; 0 instance_ID.direction = 180;
                                                                if bullet_speed &lt; 0 instance_ID.direction = 0;
                                                            }
                                                        depth = -7;
                                                    }
                                                ignore_yes = 1
                                                //Firing Particles
                                                milla_firing_frame_1 += 0.75
                                                if milla_firing_frame_1 &gt; 9.8
                                                    {
                                                        milla_firing_frame_1 = 0
                                                        milla_firing_x_1 = o.milla_special_length_x2+random_range(-16,0)
                                                        milla_firing_y_1 = o.milla_special_length_y2+random_range(-16,0)
                                                    }
                                                milla_firing_frame_2 += 0.75
                                                if milla_firing_frame_2 &gt; 9.8
                                                    {
                                                        milla_firing_frame_2 = 0
                                                        milla_firing_x_2 = o.milla_special_length_x2+random_range(-12,12)
                                                        milla_firing_y_2 = o.milla_special_length_y2+random_range(-12,12)
                                                    }
                                                milla_firing_frame_3 += 0.75
                                                if milla_firing_frame_3 &gt; 9.8
                                                    {
                                                        milla_firing_frame_3 = 0
                                                        milla_firing_x_3 = o.milla_special_length_x2+random_range(-8,8)
                                                        milla_firing_y_3 = o.milla_special_length_y2+random_range(-8,8)
                                                    }
                                                milla_firing_frame_4 += 0.75
                                                if milla_firing_frame_4 &gt; 9.8
                                                    {
                                                        milla_firing_frame_4 = 0
                                                        milla_firing_x_4 = o.milla_special_length_x2+random_range(-4,4)
                                                        milla_firing_y_4 = o.milla_special_length_y2+random_range(-4,4)
                                                    }
                                                milla_firing_frame_5 += 0.75
                                                if milla_firing_frame_5 &gt; 9.8
                                                    {
                                                        milla_firing_frame_5 = 0
                                                        milla_firing_x_5 = o.milla_special_length_x2+random_range(0,14)
                                                        milla_firing_y_5 = o.milla_special_length_y2+random_range(0,14)
                                                    }
                                            }
                                    }
                                if (o.invuln_hud_time = 0 and o.targets_ready != 3 and o.shield_invuln = 32 and ignore_yes = 0)
                                    {
                                        scr_enemy_deal_damage(0.4,1,0.35)
                                        //Only repeatedly damage the player at the highest level
                                        if o.user_enemy_level &gt;= 2 and o.death[0] != 1
                                            {
                                                o.gravity_speed = 0.00000000001
                                                if o.hurt[1] &gt; 8 o.hurt[1] = 0;
                                            }
                                    }
                            }
                        else milla_blocking = 0;
                        if obj_game_logic.user_enemy_level &lt; 2
                            {
                                //Kill other enemies within range of the beam
                                instance_ID = collision_rectangle(bullet_hitbox,y-20,bullet_hitbox_1,y+20,obj_enemy_parent,false,true)
                                if instance_exists(instance_ID)
                                    {
                                        instance_ID.attacked = 1
                                        instance_ID.attacked_damage = 100
                                    }
                                //Bomb Cube
                                instance_ID = collision_rectangle(bullet_hitbox,y-20,bullet_hitbox_1,y+20,obj_player_cube_alt,false,true)
                                if instance_ID != noone
                                    {
                                        if instance_ID.cube_jiggle_timer = 0
                                            {
                                                instance_ID.cube_jiggle_timer = 10
                                                instance_ID.cube_health += 0.50
                                            }
                                        if bullet_block_timer = 0
                                            {
                                                var instance_ID = instance_create(instance_ID.x,y+4,obj_dna_projectiles);
                                                if bullet_speed &gt; 0 instance_ID.direction = 180;
                                                if bullet_speed &lt; 0 instance_ID.direction = 0;
                                            }
                                    }
                                //Mega Items
                                instance_ID = collision_rectangle(bullet_hitbox,y-20,bullet_hitbox_1,y+20,obj_mega_item_parent,false,true)
                                if instance_ID != noone
                                    {
                                        instance_ID.attacked = 2
                                    }
                                if room != rm_editor
                                    {
                                        var crate_ID = collision_rectangle(bullet_hitbox,y-20,bullet_hitbox_1,y+20,obj_destructible,false,true);
                                        if instance_exists(crate_ID)
                                            {
                                                crate_ID.attacked = 1
                                            }
                                    }
                            }
                    }
            }
    } //End of pause check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Warning Sign
if o.pause = 0
    {
        warning_frame += 0.36 if warning_frame &gt; 2.8 warning_frame = 0;
    }

var warning_x = -100;
if obj_game_logic.px &lt; x-213 warning_x = 378;
if obj_game_logic.px &gt; x+213 warning_x = 8;

if being = 1
    draw_sprite(spr_hazard_warning,warning_frame,warning_x,104);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite
if freeze_logic = 0
    {
        var start_direction = -39;
        if xdir = -1 start_direction = 39;
        if room = rm_editor
            {
                //Draw Ghost
                draw_background_ext(spr_dna_cannon_base,start_x+start_direction,start_y-20,xdir,1,0,c_white,0.5);
                //draw_sprite_ext(sprite_index,0,start_x,start_y+4,xdir,1,0,c_white,0.5);
            }
        draw_background_ext(spr_dna_cannon_base,x+start_direction,y-20,xdir,1,0,c_white,1);
        event_inherited()
        //Draw Bullets
        if bullet_active = 1 and bullet_timer = 0 and death = 0
            {
                //draw_sprite(spr_dna_cannon_projectiles,bullet_frame,bullet_x,bullet_y)
                var count = 0;
                while(count &lt;= 30)
                    {
                        draw_sprite(spr_dna_cannon_projectiles,bullet_frame_array[count],bullet_x_array[count],bullet_y_array[count])
                        count += 1
                    }
                if timer &gt;= 170 and timer &lt; 230
                    {
                        draw_sprite(spr_cube_pop_small,firing_frame_1,firing_x_1,firing_y_1)
                        draw_sprite(spr_cube_pop_small,firing_frame_2,firing_x_2,firing_y_2)
                        draw_sprite(spr_cube_pop_small,firing_frame_3,firing_x_3,firing_y_3)
                        draw_sprite(spr_cube_pop_small,firing_frame_4,firing_x_4,firing_y_4)
                        draw_sprite(spr_cube_pop_small,firing_frame_5,firing_x_5,firing_y_5)
                        if milla_blocking = 1
                            {
                                draw_sprite(spr_cube_pop_small,milla_firing_frame_1,milla_firing_x_1,milla_firing_y_1)
                                draw_sprite(spr_cube_pop_small,milla_firing_frame_2,milla_firing_x_2,milla_firing_y_2)
                                draw_sprite(spr_cube_pop_small,milla_firing_frame_3,milla_firing_x_3,milla_firing_y_3)
                                draw_sprite(spr_cube_pop_small,milla_firing_frame_4,milla_firing_x_4,milla_firing_y_4)
                                draw_sprite(spr_cube_pop_small,milla_firing_frame_5,milla_firing_x_5,milla_firing_y_5)
                            }
                    }
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
