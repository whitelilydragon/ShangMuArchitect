<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gem_particle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_activate_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
tile_angle = 0
tile_height = y+1
draw_enabled = 0
//Search For Tiles
var tile_length = 0;
while(tile_length &lt; 200)
    {
        //Check only height map data points; those are the data points that angle data is mapped to
        var tile_ID = tile_layer_find(0,x,y);
        y -= 1
        tile_length += 1
        if tile_exists(tile_ID)
            tile_height = y;
        if tile_height = y
            break;
    }
//Snap to the ceiling if we went too far
if y &lt; obj_mask_editor.anchor_y y = obj_mask_editor.anchor_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_aqua)
draw_point(x,y)
if draw_enabled &gt; 0
    {
        draw_set_color(c_white)
        draw_set_font(obj_game_logic.text_font_academy)
        draw_set_halign(fa_center)
        draw_text(x,y-24,string(tile_angle))
        draw_set_alpha(0.85)
        draw_circle_colour(x,y,8,c_yellow,c_orange,true)
        draw_line_colour(x,obj_mask_editor.anchor_y,x,obj_mask_editor.anchor_y+200,c_orange,c_white)
        draw_set_alpha(1)
        draw_background_ext(ui_collision_angle_needle,x,y,2,1,tile_angle,c_white,1)
    }
draw_set_color(c_white)
draw_set_halign(fa_left)
draw_enabled -= 0.15
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
