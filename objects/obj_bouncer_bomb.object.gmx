<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bouncer_bubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>obj_destructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
//Tile Modifiers
dont_leave_decorations = 0
//Animation Timers
frame = 0               //Current Frame
frame_timer = 0         //Animation Timer
frame_decay = 14        //Maximum Time Before Frame Switch
frame_reduction = 1     //Timer Decay
float_x = 0
float_speed = 0
float_timer = 0
float_wobble = 0
float_target = -4
//Detonation
detonate = 0            //Should We Detonate Instantaneously?
detonate_delay = 0      //Should We Delay Detonation?
detonate_toggle = 0     //Should We Stop Spawning Gems?
detonate_error = 0      //Should We Display Error Messages?
detonate_detected = 0
detonate_visible = 1
detonate_for_milla = 0
detonate_effect_x1 = 32
detonate_effect_y1 = -48
detonate_effect_x2 = 32
detonate_effect_y2 = 0
//Setup Explosion Particle Sprites
particle_timer     = 0
particle_visible_1 = 0
particle_visible_2 = 0
particle_visible_3 = 0
particle_visible_4 = 0
particle_visible_5 = 0
particle_visible_6 = 0
particle_visible_7 = 0
particle_visible_8 = 0
particle_frame_0   = 0
particle_frame_1   = 0
particle_frame_2   = 0
particle_frame_3   = 0
particle_frame_4   = 0
particle_frame_5   = 0
particle_frame_6   = 0
particle_frame_7   = 0
particle_frame_8   = 0

//Are We Allowed To Hold Items?
give_item = 0
item = 0
attacked = 0
rotate_angle = 0
rotate_timer = 0
item_x = 0
item_y = -16
detonate_do_not_harm_player = 0
weather_rain_particles_frame = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic and Detonation

//Pause Safety Check
if obj_game_logic.pause = 0
{

float_timer += 1
if float_timer = 16
    float_target = 4;
if float_timer = 32
    {
        float_target = -4
        float_timer = 0
    }
y -= 2
float_wobble = lerp(float_wobble,float_target,0.04)
float_speed = lerp(float_speed,0,0.12)
x += (float_speed + float_wobble)

if (point_distance(x,y,obj_game_logic.universal_player_x,obj_game_logic.universal_player_y) &lt; 32)
or (attacked = 1)
    frame_decay = -8;

//If Timer Decay Has Been Reduced to 0, or Less Than Zero, Change Tile And Self
if frame_decay &lt;= 0
    {
        if detonate_toggle = 0
            {
                //Play Sound
                audio_play_sound(snd_explosion,50,false)
                //Spawn And Launch Gem Into Air
                if dont_leave_decorations = 0
                    {
                        gem = instance_create(x,y-16,obj_gem)
                        gem.is_floating  = 0
                        gem.sprite_index = spr_gem
                        gem.is_speed     = 0
                        gem.is_time      = 16
                    }
                detonate_visible = 0
                attacked = 0

                if detonate_do_not_harm_player = 0
                    {
                        //Deal 4 Points Of Damage To The Player If They Were Too Close
                        if point_distance(x,y,obj_game_logic.universal_player_x,obj_game_logic.universal_player_y) &lt; 64
                        and obj_game_logic.hurt[0] = 0
                            scr_enemy_deal_damage(1,2,4);
                    }
                scr_set_screen_shake(28,3)
                detonate_toggle = 1
            }
        //Attack Other Nearby Objects And Tiles
        detonate_effect_x1 -= 4
        detonate_effect_y1 -= 4
        detonate_effect_x2 += 4
        var ID_check_bomb_left = collision_rectangle(x-28,y-16,x-24,y,obj_bomb,false,true);
        if instance_exists(ID_check_bomb_left) and room != rm_editor and particle_timer &lt; 8
            {
                if variable_instance_exists(ID_check_bomb_left,"attacked")
                    ID_check_bomb_left.detonate_delay = 8
                    ID_check_bomb_left.attacked = 1;
            }
        var ID_check_bomb_right = collision_rectangle(x+24,y-16,x+28,y,obj_bomb,false,true);
        if instance_exists(ID_check_bomb_right) and room != rm_editor and particle_timer &lt; 8
            {
                if variable_instance_exists(ID_check_bomb_right,"attacked")
                    ID_check_bomb_right.detonate_delay = 8
                    ID_check_bomb_right.attacked = 1;
            }
        var ID_check = collision_rectangle(x+detonate_effect_x1,y+detonate_effect_y1,x+detonate_effect_x2,y+16,
        obj_destructible,false,true);
        if instance_exists(ID_check) and room != rm_editor and particle_timer &lt; 8
            {
                if variable_instance_exists(ID_check,"attacked")
                and ID_check.object_index != obj_bouncer_parry_box
                    ID_check.attacked = 1;
            }
        var mud_ID_check = collision_rectangle(x+detonate_effect_x1,y+detonate_effect_y1,x+detonate_effect_x2,y+16,
        obj_mud_cube,false,true);
        if instance_exists(mud_ID_check) and particle_timer &lt; 8
            {
                if mud_ID_check.editor_mode_timer &lt;= 0
                    {
                        if instance_number(obj_mud_ball) &lt; 4
                            {
                                instance_create(random_range(mud_ID_check.x,mud_ID_check.x+32),mud_ID_check.y+64,obj_mud_ball)
                                instance_create(random_range(mud_ID_check.x+96,mud_ID_check.x+64),y+128,obj_mud_ball)
                            }
                        if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                            {
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-4  ,1,1,-4)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-2,1,1,-5.25)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-1  ,1,1,-5.625)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,0   ,1,1,-7.5)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,2,1,1,-6)
                            }
                        if room != rm_editor
                            instance_destroy(mud_ID_check);
                        else
                            mud_ID_check.editor_mode_timer = 60;
                    }
            }
        if particle_timer = 1
            {
                var mud_ID_check = collision_rectangle(x+detonate_effect_x1,y+detonate_effect_y1,x+detonate_effect_x2,y+16,
                obj_water_cube,false,true);
                if instance_exists(mud_ID_check)
                    {
                        if instance_number(obj_flood_ball) &lt; 4
                            {
                                instance_create(random_range(mud_ID_check.x,mud_ID_check.x+32),mud_ID_check.y+64,obj_flood_ball)
                                instance_create(random_range(mud_ID_check.x+96,mud_ID_check.x+64),y+128,obj_flood_ball)
                            }
                        if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                            {
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,-4  ,1,1,-4)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,-2,1,1,-5.25)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,-1  ,1,1,-5.625)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,0   ,1,1,-7.5)
                                scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_flood_balls,2,1,1,-6)
                            }
                    }
                var mud_ID_check = collision_rectangle(x+detonate_effect_x1,y+detonate_effect_y1,x+detonate_effect_x2,y+16,
                obj_mud_water,false,true);
                if instance_exists(mud_ID_check)
                    {
                        if mud_ID_check.editor_mode_timer &lt;= 0
                            {
                                if instance_number(obj_mud_ball) &lt; 4
                                    {
                                        instance_create(random_range(mud_ID_check.x,mud_ID_check.x+32),mud_ID_check.y+64,obj_mud_ball)
                                        instance_create(random_range(mud_ID_check.x+96,mud_ID_check.x+64),y+128,obj_mud_ball)
                                    }
                                if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                                    {
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-4  ,1,1,-4)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-2,1,1,-5.25)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,-1  ,1,1,-5.625)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,0   ,1,1,-7.5)
                                        scr_attack_shield_ext(mud_ID_check.x+64,mud_ID_check.y+64,obj_destructible_particle,0,spr_mud_balls,2,1,1,-6)
                                    }
                                if room != rm_editor
                                    instance_destroy(mud_ID_check);
                                else
                                    mud_ID_check.editor_mode_timer = 60;
                            }
                    }
                var mud_ID_check = collision_rectangle(x+detonate_effect_x1,y+detonate_effect_y1,x+detonate_effect_x2,y+16,
                obj_mud_block,false,true);
                if instance_exists(mud_ID_check)
                    {
                        if mud_ID_check.editor_mode_timer &lt;= 0
                            {
                                if instance_number(obj_mud_ball) &lt; 4
                                    {
                                        instance_create(random_range(mud_ID_check.x,mud_ID_check.x+16),mud_ID_check.y+32,obj_mud_ball)
                                        instance_create(random_range(mud_ID_check.x+16,mud_ID_check.x+32),y+32,obj_mud_ball)
                                    }
                                if obj_game_logic.performance_profile = 1 and instance_number(obj_destructible_particle) &lt; 16
                                    {
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,-4  ,1,1,-4)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,-2,1,1,-5.25)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,-1  ,1,1,-5.625)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,0   ,1,1,-7.5)
                                        scr_attack_shield_ext(mud_ID_check.x+32,mud_ID_check.y+32,obj_destructible_particle,0,spr_mud_balls,2,1,1,-6)
                                    }
                                if room != rm_editor
                                    instance_destroy(mud_ID_check);
                                else
                                    mud_ID_check.editor_mode_timer = 60;
                            }
                    }
            }
        //Create Explosion Particles
        particle_timer+=1
        //Switch On Visibility of Explosion Particle Sprites
        switch(particle_timer)
            {
                case 1:  {particle_visible_1=1; break;}
                case 4:  {particle_visible_2=1; break;}
                case 8:  {particle_visible_3=1; break;}
                case 12: {particle_visible_4=1; break;}
                case 16: {particle_visible_5=1; break;}
                case 20: {particle_visible_6=1; break;}
                case 24: {particle_visible_7=1; break;}
                case 26: {particle_visible_8=1; break;}
            }
        //Explosion Particle Sprites
        if particle_visible_1 = 1 {particle_frame_1 += 0.12; if particle_frame_1 &gt; 6.8 particle_visible_1 = 0}
        if particle_visible_2 = 1 {particle_frame_2 += 0.12; if particle_frame_2 &gt; 6.8 particle_visible_2 = 0}
        if particle_visible_3 = 1 {particle_frame_3 += 0.12; if particle_frame_3 &gt; 6.8 particle_visible_3 = 0}
        if particle_visible_4 = 1 {particle_frame_4 += 0.12; if particle_frame_4 &gt; 6.8 particle_visible_4 = 0}
        if particle_visible_5 = 1 {particle_frame_5 += 0.12; if particle_frame_5 &gt; 6.8 particle_visible_5 = 0}
        if particle_visible_6 = 1 {particle_frame_6 += 0.12; if particle_frame_6 &gt; 6.8 particle_visible_6 = 0}
        if particle_visible_7 = 1 {particle_frame_7 += 0.12; if particle_frame_7 &gt; 6.8 particle_visible_7 = 0}
        if particle_visible_8 = 1
            {
                //Iterate Animation Frames Timer
                particle_frame_8 += 0.12;
                //Destroy Self After Animations Complete
                if particle_frame_8 &gt;= 6.8
                    {
                        particle_visible_8 = 0
                        instance_destroy();
                    }
            }
    }
} //End of Pause Safety Check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Sprite
if frame_decay &gt; 0
    draw_sprite(sprite_index,0,x,y);
//Explosion Particle Sprites
if particle_visible_1 = 1 draw_sprite(spr_explosion_0,particle_frame_1,x-18,y-32);
if particle_visible_2 = 1 draw_sprite(spr_explosion_0,particle_frame_2,x-8,y-16);
if particle_visible_3 = 1 draw_sprite(spr_explosion_0,particle_frame_3,x,y-48);
if particle_visible_4 = 1 draw_sprite(spr_explosion_0,particle_frame_4,x-12,y-64);
if particle_visible_5 = 1 draw_sprite(spr_explosion_0,particle_frame_5,x-28,y-80);
if particle_visible_6 = 1 draw_sprite(spr_explosion_0,particle_frame_6,x-18,y-78);
if particle_visible_7 = 1 draw_sprite(spr_explosion_0,particle_frame_7,x,y-76);
if particle_visible_8 = 1 draw_sprite(spr_explosion_0,particle_frame_8,x-18,y-64);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
